
build/rpi3/debug/bl1/bl1.elf:     file format elf64-littleaarch64
build/rpi3/debug/bl1/bl1.elf
architecture: aarch64, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x0000000000000000

Program Header:
    LOAD off    0x0000000000010000 vaddr 0x0000000000000000 paddr 0x0000000000000000 align 2**16
         filesz 0x0000000000006060 memsz 0x0000000000006060 flags r-x
    LOAD off    0x000000000001e000 vaddr 0x00000000100ee000 paddr 0x0000000000006060 align 2**16
         filesz 0x00000000000000e8 memsz 0x00000000000000e8 flags rw-
    LOAD off    0x000000000001e0e8 vaddr 0x00000000100ee0e8 paddr 0x00000000100ee0e8 align 2**16
         filesz 0x0000000000000000 memsz 0x0000000000008f18 flags rw-
   STACK off    0x0000000000000000 vaddr 0x0000000000000000 paddr 0x0000000000000000 align 2**4
         filesz 0x0000000000000000 memsz 0x0000000000000000 flags rw-
private flags = 0:

Sections:
Idx Name          Size      VMA               LMA               File off  Algn
  0 .text         00005000  0000000000000000  0000000000000000  00010000  2**11
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .rodata       00001060  0000000000005000  0000000000005000  00015000  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .data         000000e8  00000000100ee000  0000000000006060  0001e000  2**4
                  CONTENTS, ALLOC, LOAD, DATA
  3 stacks        00004018  00000000100ee0e8  00000000100ee0e8  0001e0e8  2**6
                  ALLOC
  4 .bss          000008a8  00000000100f2100  00000000100f2100  0001e0e8  2**5
                  ALLOC
  5 xlat_table    00004000  00000000100f3000  00000000100f3000  0001e0e8  2**12
                  ALLOC
  6 coherent_ram  00000000  00000000100f7000  00000000100f7000  0001f000  2**12
                  CONTENTS
  7 .debug_info   0000ee9b  0000000000000000  0000000000000000  0001f000  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 0000406e  0000000000000000  0000000000000000  0002de9b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_aranges 00001430  0000000000000000  0000000000000000  00031f10  2**4
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_line   00006f38  0000000000000000  0000000000000000  00033340  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000029f8  0000000000000000  0000000000000000  0003a278  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .comment      0000005a  0000000000000000  0000000000000000  0003cc70  2**0
                  CONTENTS, READONLY
 13 .debug_loc    0000e8f6  0000000000000000  0000000000000000  0003ccca  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_ranges 00002530  0000000000000000  0000000000000000  0004b5c0  2**4
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  00000aa8  0000000000000000  0000000000000000  0004daf0  2**3
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
0000000000000000 l    d  .text	0000000000000000 .text
0000000000005000 l    d  .rodata	0000000000000000 .rodata
00000000100ee000 l    d  .data	0000000000000000 .data
00000000100ee0e8 l    d  stacks	0000000000000000 stacks
00000000100f2100 l    d  .bss	0000000000000000 .bss
00000000100f3000 l    d  xlat_table	0000000000000000 xlat_table
00000000100f7000 l    d  coherent_ram	0000000000000000 coherent_ram
0000000000000000 l    d  .debug_info	0000000000000000 .debug_info
0000000000000000 l    d  .debug_abbrev	0000000000000000 .debug_abbrev
0000000000000000 l    d  .debug_aranges	0000000000000000 .debug_aranges
0000000000000000 l    d  .debug_line	0000000000000000 .debug_line
0000000000000000 l    d  .debug_str	0000000000000000 .debug_str
0000000000000000 l    d  .comment	0000000000000000 .comment
0000000000000000 l    d  .debug_loc	0000000000000000 .debug_loc
0000000000000000 l    d  .debug_ranges	0000000000000000 .debug_ranges
0000000000000000 l    d  .debug_frame	0000000000000000 .debug_frame
0000000000000000 l    df *ABS*	0000000000000000 ./build/rpi3/debug/bl1/bl1_entrypoint.o
000000000000001c l       .text	0000000000000000 do_cold_boot
0000000000000090 l       .text	0000000000000000 do_primary_cold_boot
0000000000000000 l    df *ABS*	0000000000000000 io_fip.c
00000000000000f8 l     F .text	0000000000000008 device_type_fip
0000000000000100 l     F .text	000000000000003c fip_file_close
000000000000013c l     F .text	00000000000000d8 fip_dev_init
0000000000000214 l     F .text	0000000000000120 fip_file_read
0000000000000334 l     F .text	000000000000007c fip_dev_open
00000000000003b0 l     F .text	0000000000000040 fip_file_len
00000000000003f0 l     F .text	0000000000000154 fip_file_open
0000000000000544 l     F .text	0000000000000070 fip_dev_close
00000000100f2100 l     O .bss	0000000000000008 backend_dev_handle
00000000100f2108 l     O .bss	0000000000000008 backend_image_spec
00000000100f2110 l     O .bss	0000000000000030 current_file
00000000100f2140 l     O .bss	0000000000000010 dev_info_pool
00000000100f2150 l     O .bss	0000000000000004 fip_dev_count
00000000100f2158 l     O .bss	0000000000000008 state_pool
00000000000051c0 l     O .rodata	0000000000000008 fip_dev_connector
00000000000051c8 l     O .rodata	0000000000000048 fip_dev_funcs
0000000000005210 l     O .rodata	0000000000000010 uuid_null
0000000000000000 l    df *ABS*	0000000000000000 io_memmap.c
0000000000000600 l     F .text	0000000000000008 device_type_memmap
0000000000000608 l     F .text	0000000000000008 memmap_dev_close
0000000000000610 l     F .text	0000000000000030 memmap_dev_open
0000000000000640 l     F .text	0000000000000040 memmap_block_len
0000000000000680 l     F .text	0000000000000060 memmap_block_seek
00000000000006e0 l     F .text	000000000000003c memmap_block_close
000000000000071c l     F .text	0000000000000084 memmap_block_write
00000000000007a0 l     F .text	0000000000000088 memmap_block_read
0000000000000828 l     F .text	000000000000006c memmap_block_open
00000000100f2160 l     O .bss	0000000000000020 current_file
0000000000005270 l     O .rodata	0000000000000008 memmap_dev_connector
0000000000005278 l     O .rodata	0000000000000048 memmap_dev_funcs
00000000000052c0 l     O .rodata	0000000000000010 memmap_dev_info
0000000000000000 l    df *ABS*	0000000000000000 io_storage.c
00000000000008e0 l     F .text	0000000000000038 is_valid_dev
0000000000000918 l     F .text	000000000000002c is_valid_entity
0000000000000944 l     F .text	0000000000000068 free_entity
00000000100f2180 l     O .bss	0000000000000004 dev_count
00000000100f2184 l     O .bss	0000000000000004 entity_count
00000000100f2188 l     O .bss	0000000000000020 entity_map
00000000100f21a8 l     O .bss	0000000000000040 entity_pool
0000000000000000 l    df *ABS*	0000000000000000 rpi3_bl1_setup.c
00000000100f21e8 l     O .bss	0000000000000010 bl1_tzram_layout
0000000000000000 l    df *ABS*	0000000000000000 rpi3_io_storage.c
0000000000000f48 l     F .text	0000000000000060 open_fip
0000000000000fa8 l     F .text	0000000000000060 open_memmap
00000000100f21f8 l     O .bss	0000000000000008 fip_dev_con
00000000100f2200 l     O .bss	0000000000000008 fip_dev_handle
00000000100f2208 l     O .bss	0000000000000008 memmap_dev_con
00000000100f2210 l     O .bss	0000000000000008 memmap_dev_handle
00000000000053df l     O .rodata	0000000000000010 bl2_uuid_spec
00000000000053ef l     O .rodata	0000000000000010 bl31_uuid_spec
00000000000053ff l     O .rodata	0000000000000010 bl32_extra1_uuid_spec
000000000000540f l     O .rodata	0000000000000010 bl32_extra2_uuid_spec
000000000000541f l     O .rodata	0000000000000010 bl32_uuid_spec
000000000000542f l     O .rodata	0000000000000010 bl33_uuid_spec
0000000000005440 l     O .rodata	0000000000000010 fip_block_spec
0000000000005450 l     O .rodata	0000000000000228 policies
0000000000000000 l    df *ABS*	0000000000000000 rpi3_mbox.c
000000000000570f l     O .rodata	000000000000001d __func__.2346
0000000000000000 l    df *ABS*	0000000000000000 rpi_mbox_board.c
00000000100f2220 l     O .bss	0000000000000100 rpi3_mbox_buffer
0000000000000000 l    df *ABS*	0000000000000000 bl1_main.c
0000000000000000 l    df *ABS*	0000000000000000 bl1_arch_setup.c
0000000000000000 l    df *ABS*	0000000000000000 bl1_context_mgmt.c
00000000100f2320 l     O .bss	00000000000004a0 bl1_cpu_context
00000000100f27c0 l     O .bss	0000000000000010 bl1_cpu_context_ptr
000000000000595b l     O .rodata	0000000000000017 __func__.2803
0000000000000000 l    df *ABS*	0000000000000000 errata_report.c
0000000000000000 l    df *ABS*	0000000000000000 context_mgmt.c
0000000000000000 l    df *ABS*	0000000000000000 plat_bl1_common.c
00000000100ee000 l     O .data	0000000000000080 bl2_img_desc.2738
0000000000000000 l    df *ABS*	0000000000000000 bl_common.c
0000000000000000 l    df *ABS*	0000000000000000 tf_log.c
00000000100ee080 l     O .data	0000000000000004 max_log_level
0000000000000000 l    df *ABS*	0000000000000000 multi_console.c
0000000000000000 l    df *ABS*	0000000000000000 plat_bl_common.c
0000000000000000 l    df *ABS*	0000000000000000 plat_log_common.c
0000000000005bc0 l     O .rodata	0000000000000028 plat_prefix_str
0000000000000000 l    df *ABS*	0000000000000000 backtrace.c
0000000000001f54 l     F .text	0000000000000040 is_address_readable
0000000000001f94 l     F .text	0000000000000054 is_valid_object.constprop.0
0000000000000000 l    df *ABS*	0000000000000000 rpi3_common.c
00000000100f27d0 l     O .bss	0000000000000030 rpi3_console
0000000000005cc3 l     O .rodata	0000000000000012 __func__.2428
0000000000005cd8 l     O .rodata	00000000000000c8 plat_rpi3_mmap
0000000000000000 l    df *ABS*	0000000000000000 xlat_tables_arch.c
0000000000005dd0 l     O .rodata	000000000000001c pa_range_bits_arr
0000000000000000 l    df *ABS*	0000000000000000 xlat_tables_context.c
00000000100f2800 l     O .bss	0000000000000020 tf_base_xlat_table
00000000100f2820 l     O .bss	0000000000000168 tf_mmap
00000000100ee088 l     O .data	0000000000000060 tf_xlat_ctx
00000000100f3000 l     O xlat_table	0000000000004000 tf_xlat_tables
0000000000000000 l    df *ABS*	0000000000000000 xlat_tables_core.c
0000000000002614 l     F .text	0000000000000040 xlat_clean_dcache_range
0000000000002758 l     F .text	0000000000000274 xlat_tables_map_region
0000000000005eb5 l     O .rodata	0000000000000015 __func__.2545
0000000000000000 l    df *ABS*	0000000000000000 xlat_tables_utils.c
0000000000000000 l    df *ABS*	0000000000000000 ./build/rpi3/debug/bl1/cortex_a53.o
0000000000000008 l       *ABS*	0000000000000000 CPU_MIDR_SIZE
0000000000000008 l       *ABS*	0000000000000000 CPU_EXTRA1_FUNC_SIZE
0000000000000008 l       *ABS*	0000000000000000 CPU_EXTRA2_FUNC_SIZE
0000000000000008 l       *ABS*	0000000000000000 CPU_E_HANDLER_FUNC_SIZE
0000000000000008 l       *ABS*	0000000000000000 CPU_RESET_FUNC_SIZE
0000000000000000 l       *ABS*	0000000000000000 CPU_PWR_DWN_OPS_SIZE
0000000000000008 l       *ABS*	0000000000000000 CPU_ERRATA_FUNC_SIZE
0000000000000000 l       *ABS*	0000000000000000 CPU_ERRATA_LOCK_SIZE
0000000000000000 l       *ABS*	0000000000000000 CPU_ERRATA_PRINTED_SIZE
0000000000000000 l       *ABS*	0000000000000000 CPU_REG_DUMP_SIZE
0000000000000000 l       *ABS*	0000000000000000 CPU_MIDR
0000000000000008 l       *ABS*	0000000000000000 CPU_RESET_FUNC
0000000000000010 l       *ABS*	0000000000000000 CPU_EXTRA1_FUNC
0000000000000018 l       *ABS*	0000000000000000 CPU_EXTRA2_FUNC
0000000000000020 l       *ABS*	0000000000000000 CPU_E_HANDLER_FUNC
0000000000000028 l       *ABS*	0000000000000000 CPU_PWR_DWN_OPS
0000000000000028 l       *ABS*	0000000000000000 CPU_ERRATA_FUNC
0000000000000030 l       *ABS*	0000000000000000 CPU_ERRATA_LOCK
0000000000000030 l       *ABS*	0000000000000000 CPU_ERRATA_PRINTED
0000000000000030 l       *ABS*	0000000000000000 CPU_REG_DUMP
0000000000000030 l       *ABS*	0000000000000000 CPU_OPS_SIZE
0000000000002e54 l     F .text	0000000000000008 check_errata_819472
0000000000002e5c l     F .text	0000000000000008 check_errata_824069
0000000000002e64 l     F .text	0000000000000020 errata_a53_826319_wa
0000000000002e84 l     F .text	0000000000000008 check_errata_826319
0000000000002e8c l     F .text	0000000000000008 check_errata_827319
0000000000002e94 l     F .text	000000000000001c a53_disable_non_temporal_hint
0000000000002eb0 l     F .text	0000000000000008 check_errata_disable_non_temporal_hint
0000000000002eb8 l     F .text	000000000000001c errata_a53_855873_wa
0000000000002ed4 l     F .text	0000000000000008 check_errata_855873
0000000000002edc l     F .text	0000000000000024 check_errata_835769
0000000000002ef8 l       .text	0000000000000000 errata_not_applies
0000000000002efc l       .text	0000000000000000 exit_check_errata_835769
0000000000002f00 l     F .text	0000000000000024 check_errata_843419
0000000000002f20 l       .text	0000000000000000 exit_check_errata_843419
0000000000002f24 l     F .text	0000000000000038 cortex_a53_reset_func
0000000000002f5c l     F .text	00000000000000cc cortex_a53_errata_report
0000000000005eca l       .rodata	0000000000000000 cortex_a53_errata_819472_str
0000000000005f15 l       .rodata	0000000000000000 cortex_a53_cpu_str
0000000000005ed1 l       .rodata	0000000000000000 cortex_a53_errata_824069_str
0000000000005ed8 l       .rodata	0000000000000000 cortex_a53_errata_826319_str
0000000000005edf l       .rodata	0000000000000000 cortex_a53_errata_827319_str
0000000000005ee6 l       .rodata	0000000000000000 cortex_a53_errata_835769_str
0000000000005eed l       .rodata	0000000000000000 cortex_a53_errata_disable_non_temporal_hint_str
0000000000005f07 l       .rodata	0000000000000000 cortex_a53_errata_843419_str
0000000000005f0e l       .rodata	0000000000000000 cortex_a53_errata_855873_str
0000000000000000 l    df *ABS*	0000000000000000 ./build/rpi3/debug/bl1/platform_mp_stack.o
00000000100ee100 l       stacks	0000000000000000 platform_normal_stacks
0000000000000006 l       *ABS*	0000000000000000 TZ_COUNT
0000000000000000 l    df *ABS*	0000000000000000 ./build/rpi3/debug/bl1/plat_helpers.o
000000000000309c l       .text	0000000000000000 poll_mailbox
0000000000000000 l    df *ABS*	0000000000000000 ./build/rpi3/debug/bl1/bl1_exceptions.o
0000000000004000 l     F .text	0000000000000000 SynchronousExceptionSP0
0000000000004080 l     F .text	0000000000000000 IrqSP0
0000000000004100 l     F .text	0000000000000000 FiqSP0
0000000000004180 l     F .text	0000000000000000 SErrorSP0
0000000000004200 l     F .text	0000000000000000 SynchronousExceptionSPx
0000000000004280 l     F .text	0000000000000000 IrqSPx
0000000000004300 l     F .text	0000000000000000 FiqSPx
0000000000004380 l     F .text	0000000000000000 SErrorSPx
0000000000004400 l     F .text	0000000000000000 SynchronousExceptionA64
0000000000003168 l       .text	0000000000000000 unexpected_sync_exception
00000000000030f8 l     F .text	0000000000000070 smc_handler64
0000000000004480 l     F .text	0000000000000000 IrqA64
0000000000004500 l     F .text	0000000000000000 FiqA64
0000000000004580 l     F .text	0000000000000000 SErrorA64
0000000000004600 l     F .text	0000000000000000 SynchronousExceptionA32
0000000000004680 l     F .text	0000000000000000 IrqA32
0000000000004700 l     F .text	0000000000000000 FiqA32
0000000000004780 l     F .text	0000000000000000 SErrorA32
0000000000003178 l       .text	0000000000000000 smc_handler
0000000000000000 l    df *ABS*	0000000000000000 ./build/rpi3/debug/bl1/cpu_helpers.o
0000000000000008 l       *ABS*	0000000000000000 CPU_MIDR_SIZE
0000000000000008 l       *ABS*	0000000000000000 CPU_EXTRA1_FUNC_SIZE
0000000000000008 l       *ABS*	0000000000000000 CPU_EXTRA2_FUNC_SIZE
0000000000000008 l       *ABS*	0000000000000000 CPU_E_HANDLER_FUNC_SIZE
0000000000000008 l       *ABS*	0000000000000000 CPU_RESET_FUNC_SIZE
0000000000000000 l       *ABS*	0000000000000000 CPU_PWR_DWN_OPS_SIZE
0000000000000008 l       *ABS*	0000000000000000 CPU_ERRATA_FUNC_SIZE
0000000000000000 l       *ABS*	0000000000000000 CPU_ERRATA_LOCK_SIZE
0000000000000000 l       *ABS*	0000000000000000 CPU_ERRATA_PRINTED_SIZE
0000000000000000 l       *ABS*	0000000000000000 CPU_REG_DUMP_SIZE
0000000000000000 l       *ABS*	0000000000000000 CPU_MIDR
0000000000000008 l       *ABS*	0000000000000000 CPU_RESET_FUNC
0000000000000010 l       *ABS*	0000000000000000 CPU_EXTRA1_FUNC
0000000000000018 l       *ABS*	0000000000000000 CPU_EXTRA2_FUNC
0000000000000020 l       *ABS*	0000000000000000 CPU_E_HANDLER_FUNC
0000000000000028 l       *ABS*	0000000000000000 CPU_PWR_DWN_OPS
0000000000000028 l       *ABS*	0000000000000000 CPU_ERRATA_FUNC
0000000000000030 l       *ABS*	0000000000000000 CPU_ERRATA_LOCK
0000000000000030 l       *ABS*	0000000000000000 CPU_ERRATA_PRINTED
0000000000000030 l       *ABS*	0000000000000000 CPU_REG_DUMP
0000000000000030 l       *ABS*	0000000000000000 CPU_OPS_SIZE
000000000000321c l       .text	0000000000000000 error_exit
0000000000000000 l    df *ABS*	0000000000000000 ./build/rpi3/debug/bl1/context.o
0000000000000000 l    df *ABS*	0000000000000000 ./build/rpi3/debug/bl1/debug.o
0000000000005f3f l       .rodata	0000000000000000 assert_msg1
0000000000005f4d l       .rodata	0000000000000000 assert_msg2
00000000000034a0 l       .text	0000000000000000 _assert_loop
0000000000003484 l       .text	0000000000000000 dec_print_loop
0000000000005f54 l       .rodata	0000000000000000 panic_msg
0000000000003508 l       .text	0000000000000000 panic_common
000000000000352c l       .text	0000000000000000 _panic_handler
0000000000000000 l    df *ABS*	0000000000000000 ./build/rpi3/debug/bl1/cache_helpers.o
0000000000003568 l       .text	0000000000000000 exit_loop_civac
0000000000003554 l       .text	0000000000000000 loop_civac
00000000000035a0 l       .text	0000000000000000 exit_loop_cvac
000000000000358c l       .text	0000000000000000 loop_cvac
00000000000035d8 l       .text	0000000000000000 exit_loop_ivac
00000000000035c4 l       .text	0000000000000000 loop_ivac
0000000000000000 l    df *ABS*	0000000000000000 ./build/rpi3/debug/bl1/misc_helpers.o
00000000000035e4 l     F .text	0000000000000114 zeromem_dczva
0000000000003710 l       .text	0000000000000000 m_loop16
0000000000003728 l       .text	0000000000000000 m_loop1
000000000000373c l       .text	0000000000000000 m_end
0000000000003744 l       .text	0000000000000000 do_disable_mmu_el3
0000000000000000 l    df *ABS*	0000000000000000 ./build/rpi3/debug/bl1/platform_helpers.o
0000000000000000 l    df *ABS*	0000000000000000 ./build/rpi3/debug/bl1/16550_console.o
00000000000037e0 l       .text	0000000000000000 init_fail
0000000000003838 l       .text	0000000000000000 register_fail
00000000000038c8 l       .text	0000000000000000 no_char
0000000000000000 l    df *ABS*	0000000000000000 ./build/rpi3/debug/bl1/enable_mmu.o
0000000000000000 l    df *ABS*	0000000000000000 assert.c
0000000000000000 l    df *ABS*	0000000000000000 memcmp.c
0000000000000000 l    df *ABS*	0000000000000000 memcpy.c
0000000000000000 l    df *ABS*	0000000000000000 memmove.c
0000000000000000 l    df *ABS*	0000000000000000 printf.c
0000000000003a5c l     F .text	00000000000000d0 unsigned_num_print
0000000000000000 l    df *ABS*	0000000000000000 putchar.c
0000000000000000 l    df *ABS*	0000000000000000 
0000000000003f80 g     F .text	000000000000002c putchar
0000000000001928 g     F .text	00000000000000d0 cm_prepare_el3_exit
0000000000001dd4 g     F .text	0000000000000034 console_set_scope
00000000000018b0 g     F .text	000000000000002c cm_el1_sysregs_context_restore
0000000000001d64 g     F .text	0000000000000070 console_register
00000000100f7000 g       coherent_ram	0000000000000000 __COHERENT_RAM_END__
00000000000031b0 g     F .text	0000000000000034 reset_handler
0000000000003918 g     F .text	000000000000001c console_16550_flush
00000000000035dc g     F .text	0000000000000008 zeromem
000000000000501e g     O .rodata	000000000000001c version_string
0000000000001a00  w    F .text	0000000000000004 bl1_plat_set_ep_info
0000000000002c28 g     F .text	000000000000003c mmap_add_ctx
0000000000001c1c g     F .text	0000000000000038 print_entry_point_info
0000000000001580 g     F .text	0000000000000030 cm_get_context
0000000000003f2c g     F .text	0000000000000054 printf
00000000100f2990 g     O .bss	0000000000000018 mmu_cfg_params
0000000000002e50 g     F .text	0000000000000004 xlat_tables_print
000000000000383c g     F .text	000000000000004c console_16550_core_putc
0000000000003888 g     F .text	000000000000001c console_16550_putc
0000000000003448 g     F .text	0000000000000060 asm_assert
00000000000034f0 g     F .text	0000000000000044 do_panic
0000000000001330 g     F .text	0000000000000188 bl1_main
0000000000003a28 g     F .text	0000000000000034 memmove
0000000000002418 g     F .text	0000000000000108 setup_mmu_cfg
0000000000006060 g       *ABS*	0000000000000000 __DATA_ROM_START__
0000000000001f24  w    F .text	0000000000000030 plat_log_get_prefix
0000000000003764  w    F .text	0000000000000004 plat_report_exception
0000000000005000 g     O .rodata	000000000000001e build_message
00000000000036f8 g     F .text	0000000000000048 memcpy16
000000000000341c g     F .text	000000000000002c el3_exit
00000000000015b0 g     F .text	0000000000000030 cm_set_context
0000000000002564 g     F .text	0000000000000068 init_xlat_tables
0000000000002328 g     F .text	0000000000000038 xlat_arch_regime_get_xn_desc
0000000000003340 g     F .text	0000000000000074 save_gp_pmcr_pauth_regs
00000000100f7000 g       xlat_table	0000000000000000 __BL1_RAM_END__
0000000000003a08 g     F .text	0000000000000020 memcpy
00000000000035e4 g     F .text	0000000000000114 zero_normalmem
00000000000014b8 g     F .text	000000000000002c bl1_print_next_bl_ep_info
00000000000030c0 g     F .text	0000000000000004 platform_mem_init
0000000000002554 g     F .text	0000000000000010 mmap_add
0000000000003770  w    F .text	0000000000000008 plat_panic_handler
00000000100f2100 g       stacks	0000000000000000 __STACKS_END__
0000000000002134 g     F .text	000000000000005c rpi3_console_init
000000000000356c g     F .text	0000000000000038 clean_dcache_range
00000000000000e8 g       *ABS*	0000000000000000 __DATA_SIZE__
0000000000000c90 g     F .text	0000000000000068 io_size
00000000000033b4 g     F .text	0000000000000068 restore_gp_pmcr_pauth_regs
00000000100ee000 g       .data	0000000000000000 __BL1_RAM_START__
00000000000009f0 g     F .text	0000000000000048 io_dev_open
0000000000003044  w    F .text	0000000000000010 plat_set_my_stack
00000000000034c0 g     F .text	0000000000000030 asm_print_hex
00000000000008a8 g       *ABS*	0000000000000000 __BSS_SIZE__
00000000000034a8 g     F .text	0000000000000018 asm_print_str
0000000000003740 g     F .text	000000000000001c disable_mmu_el3
00000000000038ec g     F .text	000000000000002c console_16550_core_flush
00000000000030ec g     F .text	000000000000000c plat_crash_console_flush
0000000000001f14  w    F .text	0000000000000008 plat_error_handler
0000000000001e08 g     F .text	000000000000009c console_putc
0000000000003080 g     F .text	0000000000000038 plat_secondary_cold_boot_setup
00000000000012b4 g     F .text	0000000000000068 bl1_calc_bl2_mem_layout
00000000000030c4 g     F .text	000000000000001c plat_crash_console_init
0000000000003534 g     F .text	0000000000000038 flush_dcache_range
00000000000038a4 g     F .text	000000000000002c console_16550_core_getc
0000000000001fe8 g     F .text	000000000000014c backtrace
00000000000022d8 g     F .text	000000000000001c xlat_get_min_virt_addr_space_size
0000000000003b2c g     F .text	0000000000000400 vprintf
00000000000022f4 g     F .text	0000000000000034 is_dcache_enabled
0000000000003768  w    F .text	0000000000000004 plat_reset_handler
0000000000003934 g     F .text	0000000000000070 enable_mmu_direct_el3
00000000000031e4 g     F .text	000000000000003c get_cpu_ops_ptr
0000000000001884 g     F .text	000000000000002c cm_init_my_context
0000000000001570 g     F .text	0000000000000010 bl1_arch_setup
0000000000001a74 g     F .text	00000000000001a8 load_auth_image
0000000000001a0c  w    F .text	000000000000000c bl1_plat_get_image_desc
0000000000002190 g     F .text	0000000000000098 rpi3_setup_page_tables
0000000000000e90 g     F .text	00000000000000b8 bl1_platform_setup
0000000000006060 g       .rodata	0000000000000000 __RODATA_END__
0000000000002360 g     F .text	000000000000002c xlat_arch_current_el
0000000000001a18  w    F .text	000000000000005c bl1_plat_handle_post_image_load
00000000100ee0e8 g       .data	0000000000000000 __DATA_RAM_END__
0000000000001768 g     F .text	000000000000011c cm_setup_context
0000000000005000 g       .rodata	0000000000000000 __RODATA_START__
00000000000034c4 g       .text	0000000000000000 asm_print_hex_bits
0000000000006030 g       .rodata	0000000000000000 __CPU_OPS_START__
0000000000004000 g       .text	0000000000000000 bl1_exceptions
0000000000002228 g     F .text	000000000000006c tcr_physical_addr_size_bits
00000000000035a4 g     F .text	0000000000000038 inv_dcache_range
00000000100ee084 g     O .data	0000000000000001 console_state
00000000000039d4 g     F .text	0000000000000034 memcmp
0000000000003220 g     F .text	0000000000000010 cpu_get_rev_var
0000000000002654 g     F .text	0000000000000104 xlat_desc
000000000000306c g     F .text	0000000000000014 plat_is_my_cpu_primary
000000000000305c g     F .text	0000000000000010 plat_rpi3_calc_core_pos
00000000100f29a8 g       .bss	0000000000000000 __BSS_END__
0000000000006060 g       .rodata	0000000000000000 __CPU_OPS_END__
0000000000001208 g     F .text	00000000000000ac rpi3_vc_hardware_get_board_revision
00000000000030b8 g     F .text	0000000000000008 plat_get_my_entrypoint
0000000000000c0c g     F .text	0000000000000084 io_seek
0000000000000d78 g     F .text	0000000000000064 io_close
000000000000376c  w    F .text	0000000000000004 bl1_plat_prepare_exit
0000000000000e2c g     F .text	0000000000000064 bl1_plat_arch_setup
00000000000018dc g     F .text	000000000000004c cm_set_next_eret_context
00000000100f7000 g       coherent_ram	0000000000000000 __COHERENT_RAM_START__
00000000000037e8 g     F .text	0000000000000054 console_16550_register
0000000000006030 g       .rodata	0000000000000000 __PARSER_LIB_DESCS_END__
00000000000016d0 g     F .text	0000000000000098 errata_print_msg
0000000000006148 g       *ABS*	0000000000000000 __BL1_ROM_END__
0000000000000000 g       *ABS*	0000000000000000 __COHERENT_RAM_UNALIGNED_SIZE__
000000000000375c g     F .text	0000000000000008 disable_mmu_icache_el3
0000000000002294 g     F .text	0000000000000044 xlat_arch_get_max_supported_pa
00000000000015e0 g     F .text	00000000000000f0 bl1_prepare_next_image
0000000000005000 g       .text	0000000000000000 __TEXT_END__
00000000000019f8  w    F .text	0000000000000008 bl1_plat_get_next_image_id
0000000000001ea4 g     F .text	0000000000000070 console_flush
0000000000000a38 g     F .text	000000000000006c io_dev_init
0000000000000cf8 g     F .text	0000000000000080 io_read
0000000000000ddc g     F .text	000000000000000c bl1_plat_sec_mem_layout
0000000000001118 g     F .text	00000000000000f0 rpi3_vc_mailbox_request_send
0000000000003258 g     F .text	000000000000001c print_errata_status
000000000000131c g     F .text	0000000000000014 bl1_setup
00000000100f2100 g       .bss	0000000000000000 __BSS_START__
00000000100ee000 g       .data	0000000000000000 __DATA_RAM_START__
00000000000029cc g     F .text	000000000000025c mmap_add_region_ctx
0000000000001f1c  w    F .text	0000000000000008 plat_try_next_boot_source
00000000000030e0 g     F .text	000000000000000c plat_crash_console_putc
0000000000003244 g     F .text	0000000000000014 cpu_rev_var_hs
0000000000000b08 g     F .text	0000000000000104 io_open
0000000000001d1c g     F .text	0000000000000048 console_is_registered
000000000000238c g     F .text	000000000000008c is_mmu_enabled_ctx
0000000000001098 g     F .text	0000000000000080 plat_get_image_source
0000000000001c54 g     F .text	00000000000000c8 tf_log
00000000000009ac g     F .text	0000000000000044 io_register_device
0000000000003230 g     F .text	0000000000000014 cpu_rev_var_ls
00000000100f7000 g       coherent_ram	0000000000000000 __COHERENT_RAM_END_UNALIGNED__
00000000000038d0 g     F .text	000000000000001c console_16550_getc
00000000100ee0e8 g       stacks	0000000000000000 __STACKS_START__
00000000000025cc g     F .text	0000000000000048 enable_mmu_el3
00000000000014e4 g     F .text	000000000000008c bl1_smc_handler
0000000000001a04  w    F .text	0000000000000008 bl1_plat_handle_pre_image_load
0000000000001008 g     F .text	0000000000000090 plat_rpi3_io_setup
0000000000002c64 g     F .text	00000000000001e8 init_xlat_tables_ctx
0000000000003054 g     F .text	0000000000000008 plat_my_core_pos
0000000000000894 g     F .text	000000000000004c register_io_dev_memmap
0000000000000aa4 g     F .text	0000000000000064 io_dev_close
00000000000039a4 g     F .text	0000000000000030 __assert
0000000000003508  w      .text	0000000000000000 el3_panic
0000000000000de8 g     F .text	0000000000000044 bl1_early_platform_setup
0000000000002e4c g     F .text	0000000000000004 xlat_mmap_print
00000000000005b4 g     F .text	000000000000004c register_io_dev_fip
0000000000003778 g     F .text	0000000000000070 console_16550_core_init
0000000000003274 g     F .text	00000000000000cc el1_sysregs_context_restore
00000000100f2988 g     O .bss	0000000000000008 console_list
0000000000000000 g     F .text	00000000000000f8 bl1_entrypoint
0000000000003028  w    F .text	000000000000001c plat_get_my_stack
0000000000002520 g     F .text	0000000000000034 mmap_add_region
0000000000000000 g       .text	0000000000000000 __TEXT_START__
0000000000006030 g       .rodata	0000000000000000 __PARSER_LIB_DESCS_START__



Disassembly of section .text:

0000000000000000 <bl1_entrypoint>:
       0:	d2810600 	mov	x0, #0x830                 	// #2096
       4:	f2a618a0 	movk	x0, #0x30c5, lsl #16
       8:	d51e1000 	msr	sctlr_el3, x0
       c:	d5033fdf 	isb
      10:	94000c2a 	bl	30b8 <plat_get_my_entrypoint>
      14:	b4000040 	cbz	x0, 1c <do_cold_boot>
      18:	d61f0000 	br	x0

000000000000001c <do_cold_boot>:
      1c:	1001ff20 	adr	x0, 4000 <SynchronousExceptionSP0>
      20:	d51ec000 	msr	vbar_el3, x0
      24:	d5033fdf 	isb
      28:	94000c62 	bl	31b0 <reset_handler>
      2c:	d2820141 	mov	x1, #0x100a                	// #4106
      30:	d53e1000 	mrs	x0, sctlr_el3
      34:	aa010000 	orr	x0, x0, x1
      38:	d51e1000 	msr	sctlr_el3, x0
      3c:	d5033fdf 	isb
      40:	d2804700 	mov	x0, #0x238                 	// #568
      44:	d51e1100 	msr	scr_el3, x0
      48:	d2900000 	mov	x0, #0x8000                	// #32768
      4c:	f2a01020 	movk	x0, #0x81, lsl #16
      50:	d51e1320 	msr	mdcr_el3, x0
      54:	d2801c00 	mov	x0, #0xe0                  	// #224
      58:	d51b9c00 	msr	pmcr_el0, x0
      5c:	d50344ff 	msr	daifclr, #0x4
      60:	d2800000 	mov	x0, #0x0                   	// #0
      64:	d51e1140 	msr	cptr_el3, x0
      68:	d5380400 	mrs	x0, id_aa64pfr0_el1
      6c:	d370cc00 	ubfx	x0, x0, #48, #4
      70:	f100041f 	cmp	x0, #0x1
      74:	54000061 	b.ne	80 <CPU_ERRATA_LOCK+0x50>  // b.any
      78:	d2a02000 	mov	x0, #0x1000000             	// #16777216
      7c:	d51b42a0 	msr	dit, x0
      80:	94000bfb 	bl	306c <plat_is_my_cpu_primary>
      84:	35000060 	cbnz	w0, 90 <do_primary_cold_boot>
      88:	94000bfe 	bl	3080 <plat_secondary_cold_boot_setup>
      8c:	94000d1f 	bl	3508 <el3_panic>

0000000000000090 <do_primary_cold_boot>:
      90:	94000c0c 	bl	30c0 <platform_mem_init>
      94:	d0080780 	adrp	x0, 100f2000 <platform_normal_stacks+0x3f00>
      98:	91040000 	add	x0, x0, #0x100
      9c:	d0080781 	adrp	x1, 100f2000 <platform_normal_stacks+0x3f00>
      a0:	9126a021 	add	x1, x1, #0x9a8
      a4:	cb000021 	sub	x1, x1, x0
      a8:	94000d4d 	bl	35dc <zeromem>
      ac:	f00807a0 	adrp	x0, 100f7000 <__BL1_RAM_END__>
      b0:	91000000 	add	x0, x0, #0x0
      b4:	f00807a1 	adrp	x1, 100f7000 <__BL1_RAM_END__>
      b8:	91000021 	add	x1, x1, #0x0
      bc:	cb000021 	sub	x1, x1, x0
      c0:	94000d47 	bl	35dc <zeromem>
      c4:	d0080760 	adrp	x0, 100ee000 <__BL1_RAM_START__>
      c8:	91000000 	add	x0, x0, #0x0
      cc:	d0000021 	adrp	x1, 6000 <panic_msg+0xac>
      d0:	91018021 	add	x1, x1, #0x60
      d4:	d0080762 	adrp	x2, 100ee000 <__BL1_RAM_START__>
      d8:	9103a042 	add	x2, x2, #0xe8
      dc:	cb000042 	sub	x2, x2, x0
      e0:	94000d86 	bl	36f8 <memcpy16>
      e4:	d50040bf 	msr	spsel, #0x0
      e8:	94000bd7 	bl	3044 <plat_set_my_stack>
      ec:	9400048c 	bl	131c <bl1_setup>
      f0:	94000490 	bl	1330 <bl1_main>
      f4:	14000cca 	b	341c <el3_exit>

00000000000000f8 <device_type_fip>:
      f8:	52800080 	mov	w0, #0x4                   	// #4
      fc:	d65f03c0 	ret

0000000000000100 <fip_file_close>:
     100:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
     104:	910003fd 	mov	x29, sp
     108:	f9000bf3 	str	x19, [sp, #16]
     10c:	aa0003f3 	mov	x19, x0
     110:	d0080781 	adrp	x1, 100f2000 <platform_normal_stacks+0x3f00>
     114:	91044020 	add	x0, x1, #0x110
     118:	f9400c01 	ldr	x1, [x0, #24]
     11c:	b4000061 	cbz	x1, 128 <fip_file_close+0x28>
     120:	d2800601 	mov	x1, #0x30                  	// #48
     124:	94000d2e 	bl	35dc <zeromem>
     128:	f900067f 	str	xzr, [x19, #8]
     12c:	52800000 	mov	w0, #0x0                   	// #0
     130:	f9400bf3 	ldr	x19, [sp, #16]
     134:	a8c27bfd 	ldp	x29, x30, [sp], #32
     138:	d65f03c0 	ret

000000000000013c <fip_dev_init>:
     13c:	a9bb7bfd 	stp	x29, x30, [sp, #-80]!
     140:	910003fd 	mov	x29, sp
     144:	a90153f3 	stp	x19, x20, [sp, #16]
     148:	aa0103f3 	mov	x19, x1
     14c:	2a1303e0 	mov	w0, w19
     150:	d0080794 	adrp	x20, 100f2000 <platform_normal_stacks+0x3f00>
     154:	91040281 	add	x1, x20, #0x100
     158:	f90013f5 	str	x21, [sp, #32]
     15c:	d0080795 	adrp	x21, 100f2000 <platform_normal_stacks+0x3f00>
     160:	910422a2 	add	x2, x21, #0x108
     164:	940003cd 	bl	1098 <plat_get_image_source>
     168:	34000180 	cbz	w0, 198 <fip_dev_init+0x5c>
     16c:	2a0003e2 	mov	w2, w0
     170:	2a1303e1 	mov	w1, w19
     174:	b0000020 	adrp	x0, 5000 <__TEXT_END__>
     178:	9100e800 	add	x0, x0, #0x3a
     17c:	12800033 	mov	w19, #0xfffffffe            	// #-2
     180:	940006b5 	bl	1c54 <tf_log>
     184:	2a1303e0 	mov	w0, w19
     188:	a94153f3 	ldp	x19, x20, [sp, #16]
     18c:	f94013f5 	ldr	x21, [sp, #32]
     190:	a8c57bfd 	ldp	x29, x30, [sp], #80
     194:	d65f03c0 	ret
     198:	f94086a1 	ldr	x1, [x21, #264]
     19c:	9100c3e2 	add	x2, sp, #0x30
     1a0:	f9408280 	ldr	x0, [x20, #256]
     1a4:	94000259 	bl	b08 <io_open>
     1a8:	2a0003e2 	mov	w2, w0
     1ac:	340000a0 	cbz	w0, 1c0 <fip_dev_init+0x84>
     1b0:	b0000020 	adrp	x0, 5000 <__TEXT_END__>
     1b4:	9101ac00 	add	x0, x0, #0x6b
     1b8:	2a1303e1 	mov	w1, w19
     1bc:	17fffff0 	b	17c <fip_dev_init+0x40>
     1c0:	f9401be0 	ldr	x0, [sp, #48]
     1c4:	9100e3e3 	add	x3, sp, #0x38
     1c8:	910103e1 	add	x1, sp, #0x40
     1cc:	d2800202 	mov	x2, #0x10                  	// #16
     1d0:	940002ca 	bl	cf8 <io_read>
     1d4:	2a0003f3 	mov	w19, w0
     1d8:	35000180 	cbnz	w0, 208 <fip_dev_init+0xcc>
     1dc:	b94043e1 	ldr	w1, [sp, #64]
     1e0:	52800020 	mov	w0, #0x1                   	// #1
     1e4:	72b54c80 	movk	w0, #0xaa64, lsl #16
     1e8:	6b00003f 	cmp	w1, w0
     1ec:	54000061 	b.ne	1f8 <fip_dev_init+0xbc>  // b.any
     1f0:	b94047e0 	ldr	w0, [sp, #68]
     1f4:	350000a0 	cbnz	w0, 208 <fip_dev_init+0xcc>
     1f8:	12800033 	mov	w19, #0xfffffffe            	// #-2
     1fc:	b0000020 	adrp	x0, 5000 <__TEXT_END__>
     200:	91023c00 	add	x0, x0, #0x8f
     204:	94000694 	bl	1c54 <tf_log>
     208:	f9401be0 	ldr	x0, [sp, #48]
     20c:	940002db 	bl	d78 <io_close>
     210:	17ffffdd 	b	184 <fip_dev_init+0x48>

0000000000000214 <fip_file_read>:
     214:	a9bb7bfd 	stp	x29, x30, [sp, #-80]!
     218:	910003fd 	mov	x29, sp
     21c:	a90153f3 	stp	x19, x20, [sp, #16]
     220:	a9025bf5 	stp	x21, x22, [sp, #32]
     224:	f9001bf7 	str	x23, [sp, #48]
     228:	b50000a0 	cbnz	x0, 23c <fip_file_read+0x28>
     22c:	52802ee1 	mov	w1, #0x177                 	// #375
     230:	b0000020 	adrp	x0, 5000 <__TEXT_END__>
     234:	9102f400 	add	x0, x0, #0xbd
     238:	94000ddb 	bl	39a4 <__assert>
     23c:	aa0303f5 	mov	x21, x3
     240:	b5000063 	cbnz	x3, 24c <fip_file_read+0x38>
     244:	52802f01 	mov	w1, #0x178                 	// #376
     248:	17fffffa 	b	230 <fip_file_read+0x1c>
     24c:	aa0003f3 	mov	x19, x0
     250:	f9400400 	ldr	x0, [x0, #8]
     254:	b5000060 	cbnz	x0, 260 <fip_file_read+0x4c>
     258:	52802f21 	mov	w1, #0x179                 	// #377
     25c:	17fffff5 	b	230 <fip_file_read+0x1c>
     260:	aa0103f6 	mov	x22, x1
     264:	d0080780 	adrp	x0, 100f2000 <platform_normal_stacks+0x3f00>
     268:	f9408401 	ldr	x1, [x0, #264]
     26c:	d0080780 	adrp	x0, 100f2000 <platform_normal_stacks+0x3f00>
     270:	f9408000 	ldr	x0, [x0, #256]
     274:	aa0203f7 	mov	x23, x2
     278:	910123e2 	add	x2, sp, #0x48
     27c:	94000223 	bl	b08 <io_open>
     280:	2a0003e1 	mov	w1, w0
     284:	34000160 	cbz	w0, 2b0 <fip_file_read+0x9c>
     288:	12800033 	mov	w19, #0xfffffffe            	// #-2
     28c:	b0000020 	adrp	x0, 5000 <__TEXT_END__>
     290:	91034400 	add	x0, x0, #0xd1
     294:	94000670 	bl	1c54 <tf_log>
     298:	2a1303e0 	mov	w0, w19
     29c:	a94153f3 	ldp	x19, x20, [sp, #16]
     2a0:	a9425bf5 	ldp	x21, x22, [sp, #32]
     2a4:	f9401bf7 	ldr	x23, [sp, #48]
     2a8:	a8c57bfd 	ldp	x29, x30, [sp], #80
     2ac:	d65f03c0 	ret
     2b0:	f9400674 	ldr	x20, [x19, #8]
     2b4:	52800021 	mov	w1, #0x1                   	// #1
     2b8:	f9400e80 	ldr	x0, [x20, #24]
     2bc:	b9400282 	ldr	w2, [x20]
     2c0:	8b000042 	add	x2, x2, x0
     2c4:	f94027e0 	ldr	x0, [sp, #72]
     2c8:	94000251 	bl	c0c <io_seek>
     2cc:	34000100 	cbz	w0, 2ec <fip_file_read+0xd8>
     2d0:	b0000020 	adrp	x0, 5000 <__TEXT_END__>
     2d4:	9103ac00 	add	x0, x0, #0xeb
     2d8:	9400065f 	bl	1c54 <tf_log>
     2dc:	12800033 	mov	w19, #0xfffffffe            	// #-2
     2e0:	f94027e0 	ldr	x0, [sp, #72]
     2e4:	940002a5 	bl	d78 <io_close>
     2e8:	17ffffec 	b	298 <fip_file_read+0x84>
     2ec:	f94027e0 	ldr	x0, [sp, #72]
     2f0:	910103e3 	add	x3, sp, #0x40
     2f4:	aa1703e2 	mov	x2, x23
     2f8:	aa1603e1 	mov	x1, x22
     2fc:	9400027f 	bl	cf8 <io_read>
     300:	2a0003f3 	mov	w19, w0
     304:	340000c0 	cbz	w0, 31c <fip_file_read+0x108>
     308:	2a0003e1 	mov	w1, w0
     30c:	b0000020 	adrp	x0, 5000 <__TEXT_END__>
     310:	91042c00 	add	x0, x0, #0x10b
     314:	94000650 	bl	1c54 <tf_log>
     318:	17fffff1 	b	2dc <fip_file_read+0xc8>
     31c:	f94023e1 	ldr	x1, [sp, #64]
     320:	b9400280 	ldr	w0, [x20]
     324:	f90002a1 	str	x1, [x21]
     328:	0b010000 	add	w0, w0, w1
     32c:	b9000280 	str	w0, [x20]
     330:	17ffffec 	b	2e0 <fip_file_read+0xcc>

0000000000000334 <fip_dev_open>:
     334:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
     338:	910003fd 	mov	x29, sp
     33c:	b50000a1 	cbnz	x1, 350 <fip_dev_open+0x1c>
     340:	52801881 	mov	w1, #0xc4                  	// #196
     344:	b0000020 	adrp	x0, 5000 <__TEXT_END__>
     348:	9102f400 	add	x0, x0, #0xbd
     34c:	94000d96 	bl	39a4 <__assert>
     350:	d0080785 	adrp	x5, 100f2000 <platform_normal_stacks+0x3f00>
     354:	b94150a2 	ldr	w2, [x5, #336]
     358:	35000282 	cbnz	w2, 3a8 <fip_dev_open+0x74>
     35c:	d0080782 	adrp	x2, 100f2000 <platform_normal_stacks+0x3f00>
     360:	91056047 	add	x7, x2, #0x158
     364:	f940ac43 	ldr	x3, [x2, #344]
     368:	b50001c3 	cbnz	x3, 3a0 <fip_dev_open+0x6c>
     36c:	d0080786 	adrp	x6, 100f2000 <platform_normal_stacks+0x3f00>
     370:	910500c4 	add	x4, x6, #0x140
     374:	f900ac40 	str	x0, [x2, #344]
     378:	b0000023 	adrp	x3, 5000 <__TEXT_END__>
     37c:	91072063 	add	x3, x3, #0x1c8
     380:	f900a0c3 	str	x3, [x6, #320]
     384:	f9000487 	str	x7, [x4, #8]
     388:	52800023 	mov	w3, #0x1                   	// #1
     38c:	52800000 	mov	w0, #0x0                   	// #0
     390:	b90150a3 	str	w3, [x5, #336]
     394:	f9000024 	str	x4, [x1]
     398:	a8c17bfd 	ldp	x29, x30, [sp], #16
     39c:	d65f03c0 	ret
     3a0:	52801301 	mov	w1, #0x98                  	// #152
     3a4:	17ffffe8 	b	344 <fip_dev_open+0x10>
     3a8:	12800160 	mov	w0, #0xfffffff4            	// #-12
     3ac:	17fffffb 	b	398 <fip_dev_open+0x64>

00000000000003b0 <fip_file_len>:
     3b0:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
     3b4:	910003fd 	mov	x29, sp
     3b8:	b50000a0 	cbnz	x0, 3cc <fip_file_len+0x1c>
     3bc:	52802c81 	mov	w1, #0x164                 	// #356
     3c0:	b0000020 	adrp	x0, 5000 <__TEXT_END__>
     3c4:	9102f400 	add	x0, x0, #0xbd
     3c8:	94000d77 	bl	39a4 <__assert>
     3cc:	b5000061 	cbnz	x1, 3d8 <fip_file_len+0x28>
     3d0:	52802ca1 	mov	w1, #0x165                 	// #357
     3d4:	17fffffb 	b	3c0 <fip_file_len+0x10>
     3d8:	f9400400 	ldr	x0, [x0, #8]
     3dc:	f9401000 	ldr	x0, [x0, #32]
     3e0:	f9000020 	str	x0, [x1]
     3e4:	52800000 	mov	w0, #0x0                   	// #0
     3e8:	a8c17bfd 	ldp	x29, x30, [sp], #16
     3ec:	d65f03c0 	ret

00000000000003f0 <fip_file_open>:
     3f0:	a9bb7bfd 	stp	x29, x30, [sp, #-80]!
     3f4:	910003fd 	mov	x29, sp
     3f8:	a90153f3 	stp	x19, x20, [sp, #16]
     3fc:	a9025bf5 	stp	x21, x22, [sp, #32]
     400:	a90363f7 	stp	x23, x24, [sp, #48]
     404:	b50000a1 	cbnz	x1, 418 <fip_file_open+0x28>
     408:	52802361 	mov	w1, #0x11b                 	// #283
     40c:	b0000020 	adrp	x0, 5000 <__TEXT_END__>
     410:	9102f400 	add	x0, x0, #0xbd
     414:	94000d64 	bl	39a4 <__assert>
     418:	aa0203f5 	mov	x21, x2
     41c:	b5000062 	cbnz	x2, 428 <fip_file_open+0x38>
     420:	52802381 	mov	w1, #0x11c                 	// #284
     424:	17fffffa 	b	40c <fip_file_open+0x1c>
     428:	d0080794 	adrp	x20, 100f2000 <platform_normal_stacks+0x3f00>
     42c:	91044294 	add	x20, x20, #0x110
     430:	f9400e80 	ldr	x0, [x20, #24]
     434:	b4000160 	cbz	x0, 460 <fip_file_open+0x70>
     438:	12800173 	mov	w19, #0xfffffff4            	// #-12
     43c:	b0000020 	adrp	x0, 5000 <__TEXT_END__>
     440:	9104a400 	add	x0, x0, #0x129
     444:	94000604 	bl	1c54 <tf_log>
     448:	2a1303e0 	mov	w0, w19
     44c:	a94153f3 	ldp	x19, x20, [sp, #16]
     450:	a9425bf5 	ldp	x21, x22, [sp, #32]
     454:	a94363f7 	ldp	x23, x24, [sp, #48]
     458:	a8c57bfd 	ldp	x29, x30, [sp], #80
     45c:	d65f03c0 	ret
     460:	aa0103f6 	mov	x22, x1
     464:	d0080780 	adrp	x0, 100f2000 <platform_normal_stacks+0x3f00>
     468:	f9408401 	ldr	x1, [x0, #264]
     46c:	d0080780 	adrp	x0, 100f2000 <platform_normal_stacks+0x3f00>
     470:	f9408000 	ldr	x0, [x0, #256]
     474:	910103e2 	add	x2, sp, #0x40
     478:	940001a4 	bl	b08 <io_open>
     47c:	2a0003e1 	mov	w1, w0
     480:	340000c0 	cbz	w0, 498 <fip_file_open+0xa8>
     484:	b0000020 	adrp	x0, 5000 <__TEXT_END__>
     488:	91056400 	add	x0, x0, #0x159
     48c:	12800033 	mov	w19, #0xfffffffe            	// #-2
     490:	940005f1 	bl	1c54 <tf_log>
     494:	17ffffed 	b	448 <fip_file_open+0x58>
     498:	f94023e0 	ldr	x0, [sp, #64]
     49c:	d2800202 	mov	x2, #0x10                  	// #16
     4a0:	52800021 	mov	w1, #0x1                   	// #1
     4a4:	940001da 	bl	c0c <io_seek>
     4a8:	35000280 	cbnz	w0, 4f8 <fip_file_open+0x108>
     4ac:	b0000038 	adrp	x24, 5000 <__TEXT_END__>
     4b0:	91084318 	add	x24, x24, #0x210
     4b4:	91002297 	add	x23, x20, #0x8
     4b8:	f94023e0 	ldr	x0, [sp, #64]
     4bc:	910123e3 	add	x3, sp, #0x48
     4c0:	aa1703e1 	mov	x1, x23
     4c4:	d2800502 	mov	x2, #0x28                  	// #40
     4c8:	9400020c 	bl	cf8 <io_read>
     4cc:	2a0003f3 	mov	w19, w0
     4d0:	350001e0 	cbnz	w0, 50c <fip_file_open+0x11c>
     4d4:	aa1603e1 	mov	x1, x22
     4d8:	aa1703e0 	mov	x0, x23
     4dc:	d2800202 	mov	x2, #0x10                  	// #16
     4e0:	94000d3d 	bl	39d4 <memcmp>
     4e4:	2a0003f3 	mov	w19, w0
     4e8:	35000200 	cbnz	w0, 528 <fip_file_open+0x138>
     4ec:	b900029f 	str	wzr, [x20]
     4f0:	f90006b4 	str	x20, [x21, #8]
     4f4:	1400000a 	b	51c <fip_file_open+0x12c>
     4f8:	b0000020 	adrp	x0, 5000 <__TEXT_END__>
     4fc:	91061800 	add	x0, x0, #0x186
     500:	940005d5 	bl	1c54 <tf_log>
     504:	12800033 	mov	w19, #0xfffffffe            	// #-2
     508:	14000005 	b	51c <fip_file_open+0x12c>
     50c:	2a0003e1 	mov	w1, w0
     510:	b0000020 	adrp	x0, 5000 <__TEXT_END__>
     514:	91069800 	add	x0, x0, #0x1a6
     518:	940005cf 	bl	1c54 <tf_log>
     51c:	f94023e0 	ldr	x0, [sp, #64]
     520:	94000216 	bl	d78 <io_close>
     524:	17ffffc9 	b	448 <fip_file_open+0x58>
     528:	aa1803e1 	mov	x1, x24
     52c:	aa1703e0 	mov	x0, x23
     530:	d2800202 	mov	x2, #0x10                  	// #16
     534:	94000d28 	bl	39d4 <memcmp>
     538:	35fffc00 	cbnz	w0, 4b8 <fip_file_open+0xc8>
     53c:	f9000e9f 	str	xzr, [x20, #24]
     540:	17fffff1 	b	504 <fip_file_open+0x114>

0000000000000544 <fip_dev_close>:
     544:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
     548:	d0080781 	adrp	x1, 100f2000 <platform_normal_stacks+0x3f00>
     54c:	910003fd 	mov	x29, sp
     550:	f900803f 	str	xzr, [x1, #256]
     554:	d0080781 	adrp	x1, 100f2000 <platform_normal_stacks+0x3f00>
     558:	f900843f 	str	xzr, [x1, #264]
     55c:	b50000a0 	cbnz	x0, 570 <fip_dev_close+0x2c>
     560:	b0000020 	adrp	x0, 5000 <__TEXT_END__>
     564:	9102f400 	add	x0, x0, #0xbd
     568:	52801561 	mov	w1, #0xab                  	// #171
     56c:	94000d0e 	bl	39a4 <__assert>
     570:	f9400400 	ldr	x0, [x0, #8]
     574:	d0080781 	adrp	x1, 100f2000 <platform_normal_stacks+0x3f00>
     578:	f940ac21 	ldr	x1, [x1, #344]
     57c:	f9400002 	ldr	x2, [x0]
     580:	eb01005f 	cmp	x2, x1
     584:	54000141 	b.ne	5ac <fip_dev_close+0x68>  // b.any
     588:	d2800101 	mov	x1, #0x8                   	// #8
     58c:	94000c14 	bl	35dc <zeromem>
     590:	d0080781 	adrp	x1, 100f2000 <platform_normal_stacks+0x3f00>
     594:	b9415020 	ldr	w0, [x1, #336]
     598:	51000400 	sub	w0, w0, #0x1
     59c:	b9015020 	str	w0, [x1, #336]
     5a0:	52800000 	mov	w0, #0x0                   	// #0
     5a4:	a8c17bfd 	ldp	x29, x30, [sp], #16
     5a8:	d65f03c0 	ret
     5ac:	12800020 	mov	w0, #0xfffffffe            	// #-2
     5b0:	17fffffd 	b	5a4 <fip_dev_close+0x60>

00000000000005b4 <register_io_dev_fip>:
     5b4:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
     5b8:	910003fd 	mov	x29, sp
     5bc:	f9000bf3 	str	x19, [sp, #16]
     5c0:	b50000a0 	cbnz	x0, 5d4 <register_io_dev_fip+0x20>
     5c4:	b0000020 	adrp	x0, 5000 <__TEXT_END__>
     5c8:	9102f400 	add	x0, x0, #0xbd
     5cc:	52803741 	mov	w1, #0x1ba                 	// #442
     5d0:	94000cf5 	bl	39a4 <__assert>
     5d4:	aa0003f3 	mov	x19, x0
     5d8:	d0080780 	adrp	x0, 100f2000 <platform_normal_stacks+0x3f00>
     5dc:	91050000 	add	x0, x0, #0x140
     5e0:	940000f3 	bl	9ac <io_register_device>
     5e4:	35000080 	cbnz	w0, 5f4 <register_io_dev_fip+0x40>
     5e8:	b0000021 	adrp	x1, 5000 <__TEXT_END__>
     5ec:	91070021 	add	x1, x1, #0x1c0
     5f0:	f9000261 	str	x1, [x19]
     5f4:	f9400bf3 	ldr	x19, [sp, #16]
     5f8:	a8c27bfd 	ldp	x29, x30, [sp], #32
     5fc:	d65f03c0 	ret

0000000000000600 <device_type_memmap>:
     600:	52800040 	mov	w0, #0x2                   	// #2
     604:	d65f03c0 	ret

0000000000000608 <memmap_dev_close>:
     608:	52800000 	mov	w0, #0x0                   	// #0
     60c:	d65f03c0 	ret

0000000000000610 <memmap_dev_open>:
     610:	b50000e1 	cbnz	x1, 62c <memmap_dev_open+0x1c>
     614:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
     618:	b0000020 	adrp	x0, 5000 <__TEXT_END__>
     61c:	91088000 	add	x0, x0, #0x220
     620:	910003fd 	mov	x29, sp
     624:	52800a81 	mov	w1, #0x54                  	// #84
     628:	94000cdf 	bl	39a4 <__assert>
     62c:	b0000020 	adrp	x0, 5000 <__TEXT_END__>
     630:	910b0000 	add	x0, x0, #0x2c0
     634:	f9000020 	str	x0, [x1]
     638:	52800000 	mov	w0, #0x0                   	// #0
     63c:	d65f03c0 	ret

0000000000000640 <memmap_block_len>:
     640:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
     644:	910003fd 	mov	x29, sp
     648:	b50000a0 	cbnz	x0, 65c <memmap_block_len+0x1c>
     64c:	528013c1 	mov	w1, #0x9e                  	// #158
     650:	b0000020 	adrp	x0, 5000 <__TEXT_END__>
     654:	91088000 	add	x0, x0, #0x220
     658:	94000cd3 	bl	39a4 <__assert>
     65c:	b5000061 	cbnz	x1, 668 <memmap_block_len+0x28>
     660:	528013e1 	mov	w1, #0x9f                  	// #159
     664:	17fffffb 	b	650 <memmap_block_len+0x10>
     668:	f9400400 	ldr	x0, [x0, #8]
     66c:	f9400c00 	ldr	x0, [x0, #24]
     670:	f9000020 	str	x0, [x1]
     674:	52800000 	mov	w0, #0x0                   	// #0
     678:	a8c17bfd 	ldp	x29, x30, [sp], #16
     67c:	d65f03c0 	ret

0000000000000680 <memmap_block_seek>:
     680:	7100043f 	cmp	w1, #0x1
     684:	540002a1 	b.ne	6d8 <memmap_block_seek+0x58>  // b.any
     688:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
     68c:	910003fd 	mov	x29, sp
     690:	b50000a0 	cbnz	x0, 6a4 <memmap_block_seek+0x24>
     694:	b0000020 	adrp	x0, 5000 <__TEXT_END__>
     698:	91088000 	add	x0, x0, #0x220
     69c:	52801161 	mov	w1, #0x8b                  	// #139
     6a0:	94000cc1 	bl	39a4 <__assert>
     6a4:	f9400400 	ldr	x0, [x0, #8]
     6a8:	b7f80082 	tbnz	x2, #63, 6b8 <memmap_block_seek+0x38>
     6ac:	f9400c01 	ldr	x1, [x0, #24]
     6b0:	eb02003f 	cmp	x1, x2
     6b4:	540000a8 	b.hi	6c8 <memmap_block_seek+0x48>  // b.pmore
     6b8:	b0000020 	adrp	x0, 5000 <__TEXT_END__>
     6bc:	91088000 	add	x0, x0, #0x220
     6c0:	52801201 	mov	w1, #0x90                  	// #144
     6c4:	94000cb8 	bl	39a4 <__assert>
     6c8:	f9000802 	str	x2, [x0, #16]
     6cc:	52800000 	mov	w0, #0x0                   	// #0
     6d0:	a8c17bfd 	ldp	x29, x30, [sp], #16
     6d4:	d65f03c0 	ret
     6d8:	12800020 	mov	w0, #0xfffffffe            	// #-2
     6dc:	d65f03c0 	ret

00000000000006e0 <memmap_block_close>:
     6e0:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
     6e4:	910003fd 	mov	x29, sp
     6e8:	b50000a0 	cbnz	x0, 6fc <memmap_block_close+0x1c>
     6ec:	b0000020 	adrp	x0, 5000 <__TEXT_END__>
     6f0:	91088000 	add	x0, x0, #0x220
     6f4:	52801c01 	mov	w1, #0xe0                  	// #224
     6f8:	94000cab 	bl	39a4 <__assert>
     6fc:	f900041f 	str	xzr, [x0, #8]
     700:	d2800401 	mov	x1, #0x20                  	// #32
     704:	d0080780 	adrp	x0, 100f2000 <platform_normal_stacks+0x3f00>
     708:	91058000 	add	x0, x0, #0x160
     70c:	94000bb4 	bl	35dc <zeromem>
     710:	52800000 	mov	w0, #0x0                   	// #0
     714:	a8c17bfd 	ldp	x29, x30, [sp], #16
     718:	d65f03c0 	ret

000000000000071c <memmap_block_write>:
     71c:	a9bd7bfd 	stp	x29, x30, [sp, #-48]!
     720:	910003fd 	mov	x29, sp
     724:	a90153f3 	stp	x19, x20, [sp, #16]
     728:	a9025bf5 	stp	x21, x22, [sp, #32]
     72c:	b50000a0 	cbnz	x0, 740 <memmap_block_write+0x24>
     730:	52801921 	mov	w1, #0xc9                  	// #201
     734:	b0000020 	adrp	x0, 5000 <__TEXT_END__>
     738:	91088000 	add	x0, x0, #0x220
     73c:	94000c9a 	bl	39a4 <__assert>
     740:	aa0303f5 	mov	x21, x3
     744:	b5000063 	cbnz	x3, 750 <memmap_block_write+0x34>
     748:	52801941 	mov	w1, #0xca                  	// #202
     74c:	17fffffa 	b	734 <memmap_block_write+0x18>
     750:	f9400414 	ldr	x20, [x0, #8]
     754:	aa0203f3 	mov	x19, x2
     758:	f9400a80 	ldr	x0, [x20, #16]
     75c:	ab020016 	adds	x22, x0, x2
     760:	54000082 	b.cs	770 <memmap_block_write+0x54>  // b.hs, b.nlast
     764:	f9400e83 	ldr	x3, [x20, #24]
     768:	eb16007f 	cmp	x3, x22
     76c:	54000062 	b.cs	778 <memmap_block_write+0x5c>  // b.hs, b.nlast
     770:	52801a01 	mov	w1, #0xd0                  	// #208
     774:	17fffff0 	b	734 <memmap_block_write+0x18>
     778:	f9400683 	ldr	x3, [x20, #8]
     77c:	8b030000 	add	x0, x0, x3
     780:	94000ca2 	bl	3a08 <memcpy>
     784:	f90002b3 	str	x19, [x21]
     788:	f9000a96 	str	x22, [x20, #16]
     78c:	52800000 	mov	w0, #0x0                   	// #0
     790:	a94153f3 	ldp	x19, x20, [sp, #16]
     794:	a9425bf5 	ldp	x21, x22, [sp, #32]
     798:	a8c37bfd 	ldp	x29, x30, [sp], #48
     79c:	d65f03c0 	ret

00000000000007a0 <memmap_block_read>:
     7a0:	a9bd7bfd 	stp	x29, x30, [sp, #-48]!
     7a4:	910003fd 	mov	x29, sp
     7a8:	a90153f3 	stp	x19, x20, [sp, #16]
     7ac:	a9025bf5 	stp	x21, x22, [sp, #32]
     7b0:	b50000a0 	cbnz	x0, 7c4 <memmap_block_read+0x24>
     7b4:	528015c1 	mov	w1, #0xae                  	// #174
     7b8:	b0000020 	adrp	x0, 5000 <__TEXT_END__>
     7bc:	91088000 	add	x0, x0, #0x220
     7c0:	94000c79 	bl	39a4 <__assert>
     7c4:	aa0303f5 	mov	x21, x3
     7c8:	b5000063 	cbnz	x3, 7d4 <memmap_block_read+0x34>
     7cc:	528015e1 	mov	w1, #0xaf                  	// #175
     7d0:	17fffffa 	b	7b8 <memmap_block_read+0x18>
     7d4:	f9400414 	ldr	x20, [x0, #8]
     7d8:	aa0203f3 	mov	x19, x2
     7dc:	f9400a83 	ldr	x3, [x20, #16]
     7e0:	ab020076 	adds	x22, x3, x2
     7e4:	540000a2 	b.cs	7f8 <memmap_block_read+0x58>  // b.hs, b.nlast
     7e8:	aa0103e0 	mov	x0, x1
     7ec:	f9400e81 	ldr	x1, [x20, #24]
     7f0:	eb16003f 	cmp	x1, x22
     7f4:	54000062 	b.cs	800 <memmap_block_read+0x60>  // b.hs, b.nlast
     7f8:	528016a1 	mov	w1, #0xb5                  	// #181
     7fc:	17ffffef 	b	7b8 <memmap_block_read+0x18>
     800:	f9400681 	ldr	x1, [x20, #8]
     804:	8b010061 	add	x1, x3, x1
     808:	94000c80 	bl	3a08 <memcpy>
     80c:	f90002b3 	str	x19, [x21]
     810:	52800000 	mov	w0, #0x0                   	// #0
     814:	f9000a96 	str	x22, [x20, #16]
     818:	a94153f3 	ldp	x19, x20, [sp, #16]
     81c:	a9425bf5 	ldp	x21, x22, [sp, #32]
     820:	a8c37bfd 	ldp	x29, x30, [sp], #48
     824:	d65f03c0 	ret

0000000000000828 <memmap_block_open>:
     828:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
     82c:	910003fd 	mov	x29, sp
     830:	d0080784 	adrp	x4, 100f2000 <platform_normal_stacks+0x3f00>
     834:	b9416080 	ldr	w0, [x4, #352]
     838:	35000240 	cbnz	w0, 880 <memmap_block_open+0x58>
     83c:	b50000a1 	cbnz	x1, 850 <memmap_block_open+0x28>
     840:	52800e21 	mov	w1, #0x71                  	// #113
     844:	b0000020 	adrp	x0, 5000 <__TEXT_END__>
     848:	91088000 	add	x0, x0, #0x220
     84c:	94000c56 	bl	39a4 <__assert>
     850:	b5000062 	cbnz	x2, 85c <memmap_block_open+0x34>
     854:	52800e41 	mov	w1, #0x72                  	// #114
     858:	17fffffb 	b	844 <memmap_block_open+0x1c>
     85c:	91058083 	add	x3, x4, #0x160
     860:	52800025 	mov	w5, #0x1                   	// #1
     864:	b9016085 	str	w5, [x4, #352]
     868:	a9400424 	ldp	x4, x1, [x1]
     86c:	a900fc64 	stp	x4, xzr, [x3, #8]
     870:	f9000c61 	str	x1, [x3, #24]
     874:	f9000443 	str	x3, [x2, #8]
     878:	a8c17bfd 	ldp	x29, x30, [sp], #16
     87c:	d65f03c0 	ret
     880:	b0000020 	adrp	x0, 5000 <__TEXT_END__>
     884:	9108dc00 	add	x0, x0, #0x237
     888:	940004f3 	bl	1c54 <tf_log>
     88c:	12800160 	mov	w0, #0xfffffff4            	// #-12
     890:	17fffffa 	b	878 <memmap_block_open+0x50>

0000000000000894 <register_io_dev_memmap>:
     894:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
     898:	910003fd 	mov	x29, sp
     89c:	f9000bf3 	str	x19, [sp, #16]
     8a0:	b50000a0 	cbnz	x0, 8b4 <__BSS_SIZE__+0xc>
     8a4:	b0000020 	adrp	x0, 5000 <__TEXT_END__>
     8a8:	91088000 	add	x0, x0, #0x220
     8ac:	52801e21 	mov	w1, #0xf1                  	// #241
     8b0:	94000c3d 	bl	39a4 <__assert>
     8b4:	aa0003f3 	mov	x19, x0
     8b8:	b0000020 	adrp	x0, 5000 <__TEXT_END__>
     8bc:	910b0000 	add	x0, x0, #0x2c0
     8c0:	9400003b 	bl	9ac <io_register_device>
     8c4:	35000080 	cbnz	w0, 8d4 <__BSS_SIZE__+0x2c>
     8c8:	b0000021 	adrp	x1, 5000 <__TEXT_END__>
     8cc:	9109c021 	add	x1, x1, #0x270
     8d0:	f9000261 	str	x1, [x19]
     8d4:	f9400bf3 	ldr	x19, [sp, #16]
     8d8:	a8c27bfd 	ldp	x29, x30, [sp], #32
     8dc:	d65f03c0 	ret

00000000000008e0 <is_valid_dev>:
     8e0:	b4000180 	cbz	x0, 910 <is_valid_dev+0x30>
     8e4:	f9400000 	ldr	x0, [x0]
     8e8:	b4000140 	cbz	x0, 910 <is_valid_dev+0x30>
     8ec:	f9400000 	ldr	x0, [x0]
     8f0:	b4000100 	cbz	x0, 910 <is_valid_dev+0x30>
     8f4:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
     8f8:	910003fd 	mov	x29, sp
     8fc:	d63f0000 	blr	x0
     900:	71001c1f 	cmp	w0, #0x7
     904:	1a9f87e0 	cset	w0, ls  // ls = plast
     908:	a8c17bfd 	ldp	x29, x30, [sp], #16
     90c:	d65f03c0 	ret
     910:	52800000 	mov	w0, #0x0                   	// #0
     914:	d65f03c0 	ret

0000000000000918 <is_valid_entity>:
     918:	b4000120 	cbz	x0, 93c <is_valid_entity+0x24>
     91c:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
     920:	910003fd 	mov	x29, sp
     924:	f9400000 	ldr	x0, [x0]
     928:	97ffffee 	bl	8e0 <is_valid_dev>
     92c:	7100001f 	cmp	w0, #0x0
     930:	1a9f07e0 	cset	w0, ne  // ne = any
     934:	a8c17bfd 	ldp	x29, x30, [sp], #16
     938:	d65f03c0 	ret
     93c:	52800000 	mov	w0, #0x0                   	// #0
     940:	d65f03c0 	ret

0000000000000944 <free_entity>:
     944:	b40001a0 	cbz	x0, 978 <free_entity+0x34>
     948:	d0080782 	adrp	x2, 100f2000 <platform_normal_stacks+0x3f00>
     94c:	91062042 	add	x2, x2, #0x188
     950:	d2800001 	mov	x1, #0x0                   	// #0
     954:	f8617844 	ldr	x4, [x2, x1, lsl #3]
     958:	2a0103e3 	mov	w3, w1
     95c:	eb04001f 	cmp	x0, x4
     960:	54000180 	b.eq	990 <free_entity+0x4c>  // b.none
     964:	91000421 	add	x1, x1, #0x1
     968:	f100103f 	cmp	x1, #0x4
     96c:	54ffff41 	b.ne	954 <free_entity+0x10>  // b.any
     970:	12800020 	mov	w0, #0xfffffffe            	// #-2
     974:	d65f03c0 	ret
     978:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
     97c:	b0000020 	adrp	x0, 5000 <__TEXT_END__>
     980:	910b4000 	add	x0, x0, #0x2d0
     984:	910003fd 	mov	x29, sp
     988:	52801081 	mov	w1, #0x84                  	// #132
     98c:	94000c06 	bl	39a4 <__assert>
     990:	d0080781 	adrp	x1, 100f2000 <platform_normal_stacks+0x3f00>
     994:	b9418420 	ldr	w0, [x1, #388]
     998:	f823585f 	str	xzr, [x2, w3, uxtw #3]
     99c:	51000400 	sub	w0, w0, #0x1
     9a0:	b9018420 	str	w0, [x1, #388]
     9a4:	52800000 	mov	w0, #0x0                   	// #0
     9a8:	d65f03c0 	ret

00000000000009ac <io_register_device>:
     9ac:	b50000e0 	cbnz	x0, 9c8 <io_register_device+0x1c>
     9b0:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
     9b4:	b0000020 	adrp	x0, 5000 <__TEXT_END__>
     9b8:	910b4000 	add	x0, x0, #0x2d0
     9bc:	910003fd 	mov	x29, sp
     9c0:	528012c1 	mov	w1, #0x96                  	// #150
     9c4:	94000bf8 	bl	39a4 <__assert>
     9c8:	d0080781 	adrp	x1, 100f2000 <platform_normal_stacks+0x3f00>
     9cc:	b9418020 	ldr	w0, [x1, #384]
     9d0:	7100081f 	cmp	w0, #0x2
     9d4:	540000a8 	b.hi	9e8 <io_register_device+0x3c>  // b.pmore
     9d8:	11000400 	add	w0, w0, #0x1
     9dc:	b9018020 	str	w0, [x1, #384]
     9e0:	52800000 	mov	w0, #0x0                   	// #0
     9e4:	d65f03c0 	ret
     9e8:	12800160 	mov	w0, #0xfffffff4            	// #-12
     9ec:	d65f03c0 	ret

00000000000009f0 <io_dev_open>:
     9f0:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
     9f4:	910003fd 	mov	x29, sp
     9f8:	b50000a2 	cbnz	x2, a0c <io_dev_open+0x1c>
     9fc:	528014e1 	mov	w1, #0xa7                  	// #167
     a00:	b0000020 	adrp	x0, 5000 <__TEXT_END__>
     a04:	910b4000 	add	x0, x0, #0x2d0
     a08:	94000be7 	bl	39a4 <__assert>
     a0c:	aa0003e3 	mov	x3, x0
     a10:	b4000100 	cbz	x0, a30 <io_dev_open+0x40>
     a14:	aa0103e0 	mov	x0, x1
     a18:	aa0203e1 	mov	x1, x2
     a1c:	f9400062 	ldr	x2, [x3]
     a20:	b4000082 	cbz	x2, a30 <io_dev_open+0x40>
     a24:	a8c17bfd 	ldp	x29, x30, [sp], #16
     a28:	aa0203f0 	mov	x16, x2
     a2c:	d61f0200 	br	x16
     a30:	528009e1 	mov	w1, #0x4f                  	// #79
     a34:	17fffff3 	b	a00 <io_dev_open+0x10>

0000000000000a38 <io_dev_init>:
     a38:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
     a3c:	910003fd 	mov	x29, sp
     a40:	a90153f3 	stp	x19, x20, [sp, #16]
     a44:	b50000a0 	cbnz	x0, a58 <io_dev_init+0x20>
     a48:	52801661 	mov	w1, #0xb3                  	// #179
     a4c:	b0000020 	adrp	x0, 5000 <__TEXT_END__>
     a50:	910b4000 	add	x0, x0, #0x2d0
     a54:	94000bd4 	bl	39a4 <__assert>
     a58:	aa0003f3 	mov	x19, x0
     a5c:	aa0103f4 	mov	x20, x1
     a60:	97ffffa0 	bl	8e0 <is_valid_dev>
     a64:	35000060 	cbnz	w0, a70 <io_dev_init+0x38>
     a68:	52801681 	mov	w1, #0xb4                  	// #180
     a6c:	17fffff8 	b	a4c <io_dev_init+0x14>
     a70:	f9400260 	ldr	x0, [x19]
     a74:	f9401c02 	ldr	x2, [x0, #56]
     a78:	b40000e2 	cbz	x2, a94 <io_dev_init+0x5c>
     a7c:	aa1403e1 	mov	x1, x20
     a80:	aa1303e0 	mov	x0, x19
     a84:	a94153f3 	ldp	x19, x20, [sp, #16]
     a88:	aa0203f0 	mov	x16, x2
     a8c:	a8c27bfd 	ldp	x29, x30, [sp], #32
     a90:	d61f0200 	br	x16
     a94:	52800000 	mov	w0, #0x0                   	// #0
     a98:	a94153f3 	ldp	x19, x20, [sp, #16]
     a9c:	a8c27bfd 	ldp	x29, x30, [sp], #32
     aa0:	d65f03c0 	ret

0000000000000aa4 <io_dev_close>:
     aa4:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
     aa8:	910003fd 	mov	x29, sp
     aac:	f9000bf3 	str	x19, [sp, #16]
     ab0:	b50000a0 	cbnz	x0, ac4 <io_dev_close+0x20>
     ab4:	52801881 	mov	w1, #0xc4                  	// #196
     ab8:	b0000020 	adrp	x0, 5000 <__TEXT_END__>
     abc:	910b4000 	add	x0, x0, #0x2d0
     ac0:	94000bb9 	bl	39a4 <__assert>
     ac4:	aa0003f3 	mov	x19, x0
     ac8:	97ffff86 	bl	8e0 <is_valid_dev>
     acc:	35000060 	cbnz	w0, ad8 <io_dev_close+0x34>
     ad0:	528018a1 	mov	w1, #0xc5                  	// #197
     ad4:	17fffff9 	b	ab8 <io_dev_close+0x14>
     ad8:	f9400260 	ldr	x0, [x19]
     adc:	f9402001 	ldr	x1, [x0, #64]
     ae0:	b40000c1 	cbz	x1, af8 <io_dev_close+0x54>
     ae4:	aa1303e0 	mov	x0, x19
     ae8:	aa0103f0 	mov	x16, x1
     aec:	f9400bf3 	ldr	x19, [sp, #16]
     af0:	a8c27bfd 	ldp	x29, x30, [sp], #32
     af4:	d61f0200 	br	x16
     af8:	52800000 	mov	w0, #0x0                   	// #0
     afc:	f9400bf3 	ldr	x19, [sp, #16]
     b00:	a8c27bfd 	ldp	x29, x30, [sp], #32
     b04:	d65f03c0 	ret

0000000000000b08 <io_open>:
     b08:	a9bc7bfd 	stp	x29, x30, [sp, #-64]!
     b0c:	f100003f 	cmp	x1, #0x0
     b10:	fa401844 	ccmp	x2, #0x0, #0x4, ne  // ne = any
     b14:	910003fd 	mov	x29, sp
     b18:	a90153f3 	stp	x19, x20, [sp, #16]
     b1c:	a9025bf5 	stp	x21, x22, [sp, #32]
     b20:	a90363f7 	stp	x23, x24, [sp, #48]
     b24:	540000a1 	b.ne	b38 <io_open+0x30>  // b.any
     b28:	52801b21 	mov	w1, #0xd9                  	// #217
     b2c:	b0000020 	adrp	x0, 5000 <__TEXT_END__>
     b30:	910b4000 	add	x0, x0, #0x2d0
     b34:	94000b9c 	bl	39a4 <__assert>
     b38:	aa0003f6 	mov	x22, x0
     b3c:	aa0103f5 	mov	x21, x1
     b40:	aa0203f7 	mov	x23, x2
     b44:	97ffff67 	bl	8e0 <is_valid_dev>
     b48:	35000060 	cbnz	w0, b54 <io_open+0x4c>
     b4c:	52801b41 	mov	w1, #0xda                  	// #218
     b50:	17fffff7 	b	b2c <io_open+0x24>
     b54:	d0080780 	adrp	x0, 100f2000 <platform_normal_stacks+0x3f00>
     b58:	b9418402 	ldr	w2, [x0, #388]
     b5c:	71000c5f 	cmp	w2, #0x3
     b60:	540003c8 	b.hi	bd8 <io_open+0xd0>  // b.pmore
     b64:	d0080784 	adrp	x4, 100f2000 <platform_normal_stacks+0x3f00>
     b68:	91062084 	add	x4, x4, #0x188
     b6c:	d2800003 	mov	x3, #0x0                   	// #0
     b70:	f8637881 	ldr	x1, [x4, x3, lsl #3]
     b74:	2a0303f4 	mov	w20, w3
     b78:	b4000341 	cbz	x1, be0 <io_open+0xd8>
     b7c:	91000463 	add	x3, x3, #0x1
     b80:	f100107f 	cmp	x3, #0x4
     b84:	54ffff61 	b.ne	b70 <io_open+0x68>  // b.any
     b88:	52800ec1 	mov	w1, #0x76                  	// #118
     b8c:	17ffffe8 	b	b2c <io_open+0x24>
     b90:	aa1503e1 	mov	x1, x21
     b94:	aa1303e2 	mov	x2, x19
     b98:	aa1603e0 	mov	x0, x22
     b9c:	d63f0060 	blr	x3
     ba0:	2a0003f5 	mov	w21, w0
     ba4:	35000140 	cbnz	w0, bcc <io_open+0xc4>
     ba8:	d37cee94 	lsl	x20, x20, #4
     bac:	f8346b16 	str	x22, [x24, x20]
     bb0:	f90002f3 	str	x19, [x23]
     bb4:	2a1503e0 	mov	w0, w21
     bb8:	a94153f3 	ldp	x19, x20, [sp, #16]
     bbc:	a9425bf5 	ldp	x21, x22, [sp, #32]
     bc0:	a94363f7 	ldp	x23, x24, [sp, #48]
     bc4:	a8c47bfd 	ldp	x29, x30, [sp], #64
     bc8:	d65f03c0 	ret
     bcc:	aa1303e0 	mov	x0, x19
     bd0:	97ffff5d 	bl	944 <free_entity>
     bd4:	17fffff8 	b	bb4 <io_open+0xac>
     bd8:	12800175 	mov	w21, #0xfffffff4            	// #-12
     bdc:	17fffff6 	b	bb4 <io_open+0xac>
     be0:	11000442 	add	w2, w2, #0x1
     be4:	b9018402 	str	w2, [x0, #388]
     be8:	f94002c0 	ldr	x0, [x22]
     bec:	d0080798 	adrp	x24, 100f2000 <platform_normal_stacks+0x3f00>
     bf0:	9106a318 	add	x24, x24, #0x1a8
     bf4:	8b031313 	add	x19, x24, x3, lsl #4
     bf8:	f8347893 	str	x19, [x4, x20, lsl #3]
     bfc:	f9400403 	ldr	x3, [x0, #8]
     c00:	b5fffc83 	cbnz	x3, b90 <io_open+0x88>
     c04:	52801c41 	mov	w1, #0xe2                  	// #226
     c08:	17ffffc9 	b	b2c <io_open+0x24>

0000000000000c0c <io_seek>:
     c0c:	a9bd7bfd 	stp	x29, x30, [sp, #-48]!
     c10:	910003fd 	mov	x29, sp
     c14:	a90153f3 	stp	x19, x20, [sp, #16]
     c18:	aa0003f3 	mov	x19, x0
     c1c:	2a0103f4 	mov	w20, w1
     c20:	f90013f5 	str	x21, [sp, #32]
     c24:	aa0203f5 	mov	x21, x2
     c28:	97ffff3c 	bl	918 <is_valid_entity>
     c2c:	34000080 	cbz	w0, c3c <io_seek+0x30>
     c30:	51000680 	sub	w0, w20, #0x1
     c34:	7100081f 	cmp	w0, #0x2
     c38:	540000a9 	b.ls	c4c <io_seek+0x40>  // b.plast
     c3c:	b0000020 	adrp	x0, 5000 <__TEXT_END__>
     c40:	910b4000 	add	x0, x0, #0x2d0
     c44:	52801e61 	mov	w1, #0xf3                  	// #243
     c48:	94000b57 	bl	39a4 <__assert>
     c4c:	f9400260 	ldr	x0, [x19]
     c50:	f9400000 	ldr	x0, [x0]
     c54:	f9400803 	ldr	x3, [x0, #16]
     c58:	b4000123 	cbz	x3, c7c <io_seek+0x70>
     c5c:	aa1503e2 	mov	x2, x21
     c60:	2a1403e1 	mov	w1, w20
     c64:	aa1303e0 	mov	x0, x19
     c68:	aa0303f0 	mov	x16, x3
     c6c:	a94153f3 	ldp	x19, x20, [sp, #16]
     c70:	f94013f5 	ldr	x21, [sp, #32]
     c74:	a8c37bfd 	ldp	x29, x30, [sp], #48
     c78:	d61f0200 	br	x16
     c7c:	12800240 	mov	w0, #0xffffffed            	// #-19
     c80:	a94153f3 	ldp	x19, x20, [sp, #16]
     c84:	f94013f5 	ldr	x21, [sp, #32]
     c88:	a8c37bfd 	ldp	x29, x30, [sp], #48
     c8c:	d65f03c0 	ret

0000000000000c90 <io_size>:
     c90:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
     c94:	910003fd 	mov	x29, sp
     c98:	a90153f3 	stp	x19, x20, [sp, #16]
     c9c:	aa0003f3 	mov	x19, x0
     ca0:	aa0103f4 	mov	x20, x1
     ca4:	97ffff1d 	bl	918 <is_valid_entity>
     ca8:	34000040 	cbz	w0, cb0 <io_size+0x20>
     cac:	b50000b4 	cbnz	x20, cc0 <io_size+0x30>
     cb0:	b0000020 	adrp	x0, 5000 <__TEXT_END__>
     cb4:	910b4000 	add	x0, x0, #0x2d0
     cb8:	52802081 	mov	w1, #0x104                 	// #260
     cbc:	94000b3a 	bl	39a4 <__assert>
     cc0:	f9400260 	ldr	x0, [x19]
     cc4:	f9400000 	ldr	x0, [x0]
     cc8:	f9400c02 	ldr	x2, [x0, #24]
     ccc:	b40000e2 	cbz	x2, ce8 <io_size+0x58>
     cd0:	aa1403e1 	mov	x1, x20
     cd4:	aa1303e0 	mov	x0, x19
     cd8:	a94153f3 	ldp	x19, x20, [sp, #16]
     cdc:	aa0203f0 	mov	x16, x2
     ce0:	a8c27bfd 	ldp	x29, x30, [sp], #32
     ce4:	d61f0200 	br	x16
     ce8:	12800240 	mov	w0, #0xffffffed            	// #-19
     cec:	a94153f3 	ldp	x19, x20, [sp, #16]
     cf0:	a8c27bfd 	ldp	x29, x30, [sp], #32
     cf4:	d65f03c0 	ret

0000000000000cf8 <io_read>:
     cf8:	a9bd7bfd 	stp	x29, x30, [sp, #-48]!
     cfc:	910003fd 	mov	x29, sp
     d00:	a90153f3 	stp	x19, x20, [sp, #16]
     d04:	aa0003f3 	mov	x19, x0
     d08:	aa0103f4 	mov	x20, x1
     d0c:	a9025bf5 	stp	x21, x22, [sp, #32]
     d10:	aa0203f5 	mov	x21, x2
     d14:	aa0303f6 	mov	x22, x3
     d18:	97ffff00 	bl	918 <is_valid_entity>
     d1c:	350000a0 	cbnz	w0, d30 <io_read+0x38>
     d20:	b0000020 	adrp	x0, 5000 <__TEXT_END__>
     d24:	910b4000 	add	x0, x0, #0x2d0
     d28:	52802301 	mov	w1, #0x118                 	// #280
     d2c:	94000b1e 	bl	39a4 <__assert>
     d30:	f9400260 	ldr	x0, [x19]
     d34:	f9400000 	ldr	x0, [x0]
     d38:	f9401004 	ldr	x4, [x0, #32]
     d3c:	b4000144 	cbz	x4, d64 <io_read+0x6c>
     d40:	aa1603e3 	mov	x3, x22
     d44:	aa1503e2 	mov	x2, x21
     d48:	aa1403e1 	mov	x1, x20
     d4c:	aa1303e0 	mov	x0, x19
     d50:	a94153f3 	ldp	x19, x20, [sp, #16]
     d54:	aa0403f0 	mov	x16, x4
     d58:	a9425bf5 	ldp	x21, x22, [sp, #32]
     d5c:	a8c37bfd 	ldp	x29, x30, [sp], #48
     d60:	d61f0200 	br	x16
     d64:	12800240 	mov	w0, #0xffffffed            	// #-19
     d68:	a94153f3 	ldp	x19, x20, [sp, #16]
     d6c:	a9425bf5 	ldp	x21, x22, [sp, #32]
     d70:	a8c37bfd 	ldp	x29, x30, [sp], #48
     d74:	d65f03c0 	ret

0000000000000d78 <io_close>:
     d78:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
     d7c:	910003fd 	mov	x29, sp
     d80:	a90153f3 	stp	x19, x20, [sp, #16]
     d84:	aa0003f3 	mov	x19, x0
     d88:	97fffee4 	bl	918 <is_valid_entity>
     d8c:	350000a0 	cbnz	w0, da0 <io_close+0x28>
     d90:	b0000020 	adrp	x0, 5000 <__TEXT_END__>
     d94:	910b4000 	add	x0, x0, #0x2d0
     d98:	528027e1 	mov	w1, #0x13f                 	// #319
     d9c:	94000b02 	bl	39a4 <__assert>
     da0:	f9400260 	ldr	x0, [x19]
     da4:	f9400000 	ldr	x0, [x0]
     da8:	f9401801 	ldr	x1, [x0, #48]
     dac:	b4000141 	cbz	x1, dd4 <io_close+0x5c>
     db0:	aa1303e0 	mov	x0, x19
     db4:	d63f0020 	blr	x1
     db8:	2a0003f4 	mov	w20, w0
     dbc:	aa1303e0 	mov	x0, x19
     dc0:	97fffee1 	bl	944 <free_entity>
     dc4:	2a1403e0 	mov	w0, w20
     dc8:	a94153f3 	ldp	x19, x20, [sp, #16]
     dcc:	a8c27bfd 	ldp	x29, x30, [sp], #32
     dd0:	d65f03c0 	ret
     dd4:	52800014 	mov	w20, #0x0                   	// #0
     dd8:	17fffff9 	b	dbc <io_close+0x44>

0000000000000ddc <bl1_plat_sec_mem_layout>:
     ddc:	d0080780 	adrp	x0, 100f2000 <platform_normal_stacks+0x3f00>
     de0:	9107a000 	add	x0, x0, #0x1e8
     de4:	d65f03c0 	ret

0000000000000de8 <bl1_early_platform_setup>:
     de8:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
     dec:	d2a80000 	mov	x0, #0x40000000            	// #1073741824
     df0:	52b00001 	mov	w1, #0x80000000            	// #-2147483648
     df4:	910003fd 	mov	x29, sp
     df8:	b900001f 	str	wzr, [x0]
     dfc:	b9000801 	str	w1, [x0, #8]
     e00:	528ca000 	mov	w0, #0x6500                	// #25856
     e04:	72a3b9a0 	movk	w0, #0x1dcd, lsl #16
     e08:	940004cb 	bl	2134 <rpi3_console_init>
     e0c:	d0080780 	adrp	x0, 100f2000 <platform_normal_stacks+0x3f00>
     e10:	9107a001 	add	x1, x0, #0x1e8
     e14:	320483e2 	mov	w2, #0x10001000            	// #268439552
     e18:	f900f402 	str	x2, [x0, #488]
     e1c:	b2741fe0 	mov	x0, #0xff000               	// #1044480
     e20:	f9000420 	str	x0, [x1, #8]
     e24:	a8c17bfd 	ldp	x29, x30, [sp], #16
     e28:	d65f03c0 	ret

0000000000000e2c <bl1_plat_arch_setup>:
     e2c:	d0080780 	adrp	x0, 100f2000 <platform_normal_stacks+0x3f00>
     e30:	9107a001 	add	x1, x0, #0x1e8
     e34:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
     e38:	d0000025 	adrp	x5, 6000 <panic_msg+0xac>
     e3c:	910520a5 	add	x5, x5, #0x148
     e40:	910003fd 	mov	x29, sp
     e44:	f940f400 	ldr	x0, [x0, #488]
     e48:	d10004a5 	sub	x5, x5, #0x1
     e4c:	f9400421 	ldr	x1, [x1, #8]
     e50:	b2402ca5 	orr	x5, x5, #0xfff
     e54:	910004a5 	add	x5, x5, #0x1
     e58:	f00807a7 	adrp	x7, 100f7000 <__BL1_RAM_END__>
     e5c:	910000e7 	add	x7, x7, #0x0
     e60:	f00807a6 	adrp	x6, 100f7000 <__BL1_RAM_END__>
     e64:	910000c6 	add	x6, x6, #0x0
     e68:	b0000024 	adrp	x4, 5000 <__TEXT_END__>
     e6c:	91000084 	add	x4, x4, #0x0
     e70:	b0000023 	adrp	x3, 5000 <__TEXT_END__>
     e74:	91000063 	add	x3, x3, #0x0
     e78:	90000002 	adrp	x2, 0 <bl1_entrypoint>
     e7c:	91000042 	add	x2, x2, #0x0
     e80:	940004c4 	bl	2190 <rpi3_setup_page_tables>
     e84:	a8c17bfd 	ldp	x29, x30, [sp], #16
     e88:	52800000 	mov	w0, #0x0                   	// #0
     e8c:	140005d0 	b	25cc <enable_mmu_el3>

0000000000000e90 <bl1_platform_setup>:
     e90:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
     e94:	910003fd 	mov	x29, sp
     e98:	910073e0 	add	x0, sp, #0x1c
     e9c:	940000db 	bl	1208 <rpi3_vc_hardware_get_board_revision>
     ea0:	350004c0 	cbnz	w0, f38 <bl1_platform_setup+0xa8>
     ea4:	b9401fe1 	ldr	w1, [sp, #28]
     ea8:	51680820 	sub	w0, w1, #0xa02, lsl #12
     eac:	71034c00 	subs	w0, w0, #0xd3
     eb0:	540002a0 	b.eq	f04 <bl1_platform_setup+0x74>  // b.none
     eb4:	51688820 	sub	w0, w1, #0xa22, lsl #12
     eb8:	71020800 	subs	w0, w0, #0x82
     ebc:	540002e0 	b.eq	f18 <bl1_platform_setup+0x88>  // b.none
     ec0:	51680820 	sub	w0, w1, #0xa02, lsl #12
     ec4:	71020800 	subs	w0, w0, #0x82
     ec8:	54000320 	b.eq	f2c <bl1_platform_setup+0x9c>  // b.none
     ecc:	b0000020 	adrp	x0, 5000 <__TEXT_END__>
     ed0:	910d3800 	add	x0, x0, #0x34e
     ed4:	94000360 	bl	1c54 <tf_log>
     ed8:	b0000022 	adrp	x2, 5000 <__TEXT_END__>
     edc:	910ba042 	add	x2, x2, #0x2e8
     ee0:	b0000021 	adrp	x1, 5000 <__TEXT_END__>
     ee4:	910bc821 	add	x1, x1, #0x2f2
     ee8:	b9401fe3 	ldr	w3, [sp, #28]
     eec:	b0000020 	adrp	x0, 5000 <__TEXT_END__>
     ef0:	910dd000 	add	x0, x0, #0x374
     ef4:	94000358 	bl	1c54 <tf_log>
     ef8:	94000044 	bl	1008 <plat_rpi3_io_setup>
     efc:	a8c27bfd 	ldp	x29, x30, [sp], #32
     f00:	d65f03c0 	ret
     f04:	b0000022 	adrp	x2, 5000 <__TEXT_END__>
     f08:	910be842 	add	x2, x2, #0x2fa
     f0c:	b0000021 	adrp	x1, 5000 <__TEXT_END__>
     f10:	910c2821 	add	x1, x1, #0x30a
     f14:	17fffff5 	b	ee8 <bl1_platform_setup+0x58>
     f18:	b0000022 	adrp	x2, 5000 <__TEXT_END__>
     f1c:	910c8842 	add	x2, x2, #0x322
     f20:	b0000021 	adrp	x1, 5000 <__TEXT_END__>
     f24:	910cdc21 	add	x1, x1, #0x337
     f28:	17fffff0 	b	ee8 <bl1_platform_setup+0x58>
     f2c:	b0000022 	adrp	x2, 5000 <__TEXT_END__>
     f30:	910be842 	add	x2, x2, #0x2fa
     f34:	17fffffb 	b	f20 <bl1_platform_setup+0x90>
     f38:	b0000020 	adrp	x0, 5000 <__TEXT_END__>
     f3c:	910e5400 	add	x0, x0, #0x395
     f40:	94000345 	bl	1c54 <tf_log>
     f44:	17ffffed 	b	ef8 <bl1_platform_setup+0x68>

0000000000000f48 <open_fip>:
     f48:	a9bc7bfd 	stp	x29, x30, [sp, #-64]!
     f4c:	d2800001 	mov	x1, #0x0                   	// #0
     f50:	910003fd 	mov	x29, sp
     f54:	a90153f3 	stp	x19, x20, [sp, #16]
     f58:	aa0003f4 	mov	x20, x0
     f5c:	f90013f5 	str	x21, [sp, #32]
     f60:	d0080795 	adrp	x21, 100f2000 <platform_normal_stacks+0x3f00>
     f64:	f94102a0 	ldr	x0, [x21, #512]
     f68:	97fffeb4 	bl	a38 <io_dev_init>
     f6c:	2a0003f3 	mov	w19, w0
     f70:	35000120 	cbnz	w0, f94 <open_fip+0x4c>
     f74:	f94102a0 	ldr	x0, [x21, #512]
     f78:	9100e3e2 	add	x2, sp, #0x38
     f7c:	aa1403e1 	mov	x1, x20
     f80:	97fffee2 	bl	b08 <io_open>
     f84:	2a0003f3 	mov	w19, w0
     f88:	35000060 	cbnz	w0, f94 <open_fip+0x4c>
     f8c:	f9401fe0 	ldr	x0, [sp, #56]
     f90:	97ffff7a 	bl	d78 <io_close>
     f94:	2a1303e0 	mov	w0, w19
     f98:	a94153f3 	ldp	x19, x20, [sp, #16]
     f9c:	f94013f5 	ldr	x21, [sp, #32]
     fa0:	a8c47bfd 	ldp	x29, x30, [sp], #64
     fa4:	d65f03c0 	ret

0000000000000fa8 <open_memmap>:
     fa8:	a9bc7bfd 	stp	x29, x30, [sp, #-64]!
     fac:	d2800001 	mov	x1, #0x0                   	// #0
     fb0:	910003fd 	mov	x29, sp
     fb4:	a90153f3 	stp	x19, x20, [sp, #16]
     fb8:	aa0003f4 	mov	x20, x0
     fbc:	f90013f5 	str	x21, [sp, #32]
     fc0:	d0080795 	adrp	x21, 100f2000 <platform_normal_stacks+0x3f00>
     fc4:	f9410aa0 	ldr	x0, [x21, #528]
     fc8:	97fffe9c 	bl	a38 <io_dev_init>
     fcc:	2a0003f3 	mov	w19, w0
     fd0:	35000120 	cbnz	w0, ff4 <open_memmap+0x4c>
     fd4:	f9410aa0 	ldr	x0, [x21, #528]
     fd8:	9100e3e2 	add	x2, sp, #0x38
     fdc:	aa1403e1 	mov	x1, x20
     fe0:	97fffeca 	bl	b08 <io_open>
     fe4:	2a0003f3 	mov	w19, w0
     fe8:	35000060 	cbnz	w0, ff4 <open_memmap+0x4c>
     fec:	f9401fe0 	ldr	x0, [sp, #56]
     ff0:	97ffff62 	bl	d78 <io_close>
     ff4:	2a1303e0 	mov	w0, w19
     ff8:	a94153f3 	ldp	x19, x20, [sp, #16]
     ffc:	f94013f5 	ldr	x21, [sp, #32]
    1000:	a8c47bfd 	ldp	x29, x30, [sp], #64
    1004:	d65f03c0 	ret

0000000000001008 <plat_rpi3_io_setup>:
    1008:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
    100c:	910003fd 	mov	x29, sp
    1010:	a90153f3 	stp	x19, x20, [sp, #16]
    1014:	b0080794 	adrp	x20, 100f2000 <platform_normal_stacks+0x3f00>
    1018:	9107e280 	add	x0, x20, #0x1f8
    101c:	97fffd66 	bl	5b4 <register_io_dev_fip>
    1020:	340000a0 	cbz	w0, 1034 <plat_rpi3_io_setup+0x2c>
    1024:	52801d21 	mov	w1, #0xe9                  	// #233
    1028:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    102c:	910ef400 	add	x0, x0, #0x3bd
    1030:	94000a5d 	bl	39a4 <__assert>
    1034:	b0080793 	adrp	x19, 100f2000 <platform_normal_stacks+0x3f00>
    1038:	91082260 	add	x0, x19, #0x208
    103c:	97fffe16 	bl	894 <register_io_dev_memmap>
    1040:	34000060 	cbz	w0, 104c <plat_rpi3_io_setup+0x44>
    1044:	52801d81 	mov	w1, #0xec                  	// #236
    1048:	17fffff8 	b	1028 <plat_rpi3_io_setup+0x20>
    104c:	f940fe80 	ldr	x0, [x20, #504]
    1050:	b0080782 	adrp	x2, 100f2000 <platform_normal_stacks+0x3f00>
    1054:	91080042 	add	x2, x2, #0x200
    1058:	d2800001 	mov	x1, #0x0                   	// #0
    105c:	97fffe65 	bl	9f0 <io_dev_open>
    1060:	34000060 	cbz	w0, 106c <plat_rpi3_io_setup+0x64>
    1064:	52801e21 	mov	w1, #0xf1                  	// #241
    1068:	17fffff0 	b	1028 <plat_rpi3_io_setup+0x20>
    106c:	f9410660 	ldr	x0, [x19, #520]
    1070:	b0080782 	adrp	x2, 100f2000 <platform_normal_stacks+0x3f00>
    1074:	91084042 	add	x2, x2, #0x210
    1078:	d2800001 	mov	x1, #0x0                   	// #0
    107c:	97fffe5d 	bl	9f0 <io_dev_open>
    1080:	34000060 	cbz	w0, 108c <plat_rpi3_io_setup+0x84>
    1084:	52801ea1 	mov	w1, #0xf5                  	// #245
    1088:	17ffffe8 	b	1028 <plat_rpi3_io_setup+0x20>
    108c:	a94153f3 	ldp	x19, x20, [sp, #16]
    1090:	a8c27bfd 	ldp	x29, x30, [sp], #32
    1094:	d65f03c0 	ret

0000000000001098 <plat_get_image_source>:
    1098:	a9bc7bfd 	stp	x29, x30, [sp, #-64]!
    109c:	7100581f 	cmp	w0, #0x16
    10a0:	910003fd 	mov	x29, sp
    10a4:	a90153f3 	stp	x19, x20, [sp, #16]
    10a8:	a9025bf5 	stp	x21, x22, [sp, #32]
    10ac:	f9001bf7 	str	x23, [sp, #48]
    10b0:	540000a9 	b.ls	10c4 <plat_get_image_source+0x2c>  // b.plast
    10b4:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    10b8:	910ef400 	add	x0, x0, #0x3bd
    10bc:	528020a1 	mov	w1, #0x105                 	// #261
    10c0:	94000a39 	bl	39a4 <__assert>
    10c4:	2a0003e0 	mov	w0, w0
    10c8:	d2800313 	mov	x19, #0x18                  	// #24
    10cc:	90000034 	adrp	x20, 5000 <__TEXT_END__>
    10d0:	91114294 	add	x20, x20, #0x450
    10d4:	aa0103f5 	mov	x21, x1
    10d8:	aa0203f6 	mov	x22, x2
    10dc:	9b137c13 	mul	x19, x0, x19
    10e0:	8b130280 	add	x0, x20, x19
    10e4:	a9408417 	ldp	x23, x1, [x0, #8]
    10e8:	aa1703e0 	mov	x0, x23
    10ec:	d63f0020 	blr	x1
    10f0:	350000a0 	cbnz	w0, 1104 <plat_get_image_source+0x6c>
    10f4:	f8736a81 	ldr	x1, [x20, x19]
    10f8:	f90002d7 	str	x23, [x22]
    10fc:	f9400021 	ldr	x1, [x1]
    1100:	f90002a1 	str	x1, [x21]
    1104:	a94153f3 	ldp	x19, x20, [sp, #16]
    1108:	a9425bf5 	ldp	x21, x22, [sp, #32]
    110c:	f9401bf7 	ldr	x23, [sp, #48]
    1110:	a8c47bfd 	ldp	x29, x30, [sp], #64
    1114:	d65f03c0 	ret

0000000000001118 <rpi3_vc_mailbox_request_send>:
    1118:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
    111c:	910003fd 	mov	x29, sp
    1120:	a90153f3 	stp	x19, x20, [sp, #16]
    1124:	93407c34 	sxtw	x20, w1
    1128:	aa0003f3 	mov	x19, x0
    112c:	aa1403e1 	mov	x1, x20
    1130:	94000901 	bl	3534 <flush_dcache_range>
    1134:	52884800 	mov	w0, #0x4240                	// #16960
    1138:	72a001e0 	movk	w0, #0xf, lsl #16
    113c:	d2971702 	mov	x2, #0xb8b8                	// #47288
    1140:	f2a7e002 	movk	x2, #0x3f00, lsl #16
    1144:	b9400041 	ldr	w1, [x2]
    1148:	71000400 	subs	w0, w0, #0x1
    114c:	540000c1 	b.ne	1164 <rpi3_vc_mailbox_request_send+0x4c>  // b.any
    1150:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    1154:	9119e000 	add	x0, x0, #0x678
    1158:	a94153f3 	ldp	x19, x20, [sp, #16]
    115c:	a8c27bfd 	ldp	x29, x30, [sp], #32
    1160:	140002bd 	b	1c54 <tf_log>
    1164:	36f7ff01 	tbz	w1, #30, 1144 <rpi3_vc_mailbox_request_send+0x2c>
    1168:	d2971401 	mov	x1, #0xb8a0                	// #47264
    116c:	f2a7e001 	movk	x1, #0x3f00, lsl #16
    1170:	321d0260 	orr	w0, w19, #0x8
    1174:	d2971302 	mov	x2, #0xb898                	// #47256
    1178:	f2a7e002 	movk	x2, #0x3f00, lsl #16
    117c:	b9000020 	str	w0, [x1]
    1180:	52884800 	mov	w0, #0x4240                	// #16960
    1184:	72a001e0 	movk	w0, #0xf, lsl #16
    1188:	b9400041 	ldr	w1, [x2]
    118c:	71000400 	subs	w0, w0, #0x1
    1190:	54000081 	b.ne	11a0 <rpi3_vc_mailbox_request_send+0x88>  // b.any
    1194:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    1198:	911a6c00 	add	x0, x0, #0x69b
    119c:	17ffffef 	b	1158 <rpi3_vc_mailbox_request_send+0x40>
    11a0:	37f7ff41 	tbnz	w1, #30, 1188 <rpi3_vc_mailbox_request_send+0x70>
    11a4:	d2971000 	mov	x0, #0xb880                	// #47232
    11a8:	f2a7e000 	movk	x0, #0x3f00, lsl #16
    11ac:	b9400001 	ldr	w1, [x0]
    11b0:	12000c20 	and	w0, w1, #0xf
    11b4:	7100201f 	cmp	w0, #0x8
    11b8:	54000120 	b.eq	11dc <rpi3_vc_mailbox_request_send+0xc4>  // b.none
    11bc:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    11c0:	911b0800 	add	x0, x0, #0x6c2
    11c4:	940002a4 	bl	1c54 <tf_log>
    11c8:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    11cc:	911c3c00 	add	x0, x0, #0x70f
    11d0:	94000386 	bl	1fe8 <backtrace>
    11d4:	94000334 	bl	1ea4 <console_flush>
    11d8:	940008c6 	bl	34f0 <do_panic>
    11dc:	927c6c20 	and	x0, x1, #0xfffffff0
    11e0:	eb00027f 	cmp	x19, x0
    11e4:	54000080 	b.eq	11f4 <rpi3_vc_mailbox_request_send+0xdc>  // b.none
    11e8:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    11ec:	911b9800 	add	x0, x0, #0x6e6
    11f0:	17fffff5 	b	11c4 <rpi3_vc_mailbox_request_send+0xac>
    11f4:	aa1403e1 	mov	x1, x20
    11f8:	aa1303e0 	mov	x0, x19
    11fc:	a94153f3 	ldp	x19, x20, [sp, #16]
    1200:	a8c27bfd 	ldp	x29, x30, [sp], #32
    1204:	140008e8 	b	35a4 <inv_dcache_range>

0000000000001208 <rpi3_vc_hardware_get_board_revision>:
    1208:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
    120c:	910003fd 	mov	x29, sp
    1210:	a90153f3 	stp	x19, x20, [sp, #16]
    1214:	b50000a0 	cbnz	x0, 1228 <rpi3_vc_hardware_get_board_revision+0x20>
    1218:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    121c:	911cb000 	add	x0, x0, #0x72c
    1220:	52800341 	mov	w1, #0x1a                  	// #26
    1224:	940009e0 	bl	39a4 <__assert>
    1228:	aa0003f4 	mov	x20, x0
    122c:	b0080780 	adrp	x0, 100f2000 <platform_normal_stacks+0x3f00>
    1230:	91088013 	add	x19, x0, #0x220
    1234:	d2802001 	mov	x1, #0x100                 	// #256
    1238:	f9011001 	str	x1, [x0, #544]
    123c:	d2800040 	mov	x0, #0x2                   	// #2
    1240:	f2a00020 	movk	x0, #0x1, lsl #16
    1244:	f2c00080 	movk	x0, #0x4, lsl #32
    1248:	a900fe60 	stp	x0, xzr, [x19, #8]
    124c:	aa1303e0 	mov	x0, x19
    1250:	b9001a7f 	str	wzr, [x19, #24]
    1254:	97ffffb1 	bl	1118 <rpi3_vc_mailbox_request_send>
    1258:	b9400661 	ldr	w1, [x19, #4]
    125c:	52b00000 	mov	w0, #0x80000000            	// #-2147483648
    1260:	6b00003f 	cmp	w1, w0
    1264:	54000100 	b.eq	1284 <rpi3_vc_hardware_get_board_revision+0x7c>  // b.none
    1268:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    126c:	911d2c00 	add	x0, x0, #0x74b
    1270:	94000279 	bl	1c54 <tf_log>
    1274:	12800000 	mov	w0, #0xffffffff            	// #-1
    1278:	a94153f3 	ldp	x19, x20, [sp, #16]
    127c:	a8c27bfd 	ldp	x29, x30, [sp], #32
    1280:	d65f03c0 	ret
    1284:	b9401261 	ldr	w1, [x19, #16]
    1288:	52800080 	mov	w0, #0x4                   	// #4
    128c:	72b00000 	movk	w0, #0x8000, lsl #16
    1290:	6b00003f 	cmp	w1, w0
    1294:	54000080 	b.eq	12a4 <rpi3_vc_hardware_get_board_revision+0x9c>  // b.none
    1298:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    129c:	911d9c00 	add	x0, x0, #0x767
    12a0:	17fffff4 	b	1270 <rpi3_vc_hardware_get_board_revision+0x68>
    12a4:	b9401660 	ldr	w0, [x19, #20]
    12a8:	b9000280 	str	w0, [x20]
    12ac:	52800000 	mov	w0, #0x0                   	// #0
    12b0:	17fffff2 	b	1278 <rpi3_vc_hardware_get_board_revision+0x70>

00000000000012b4 <bl1_calc_bl2_mem_layout>:
    12b4:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
    12b8:	aa0003e2 	mov	x2, x0
    12bc:	910003fd 	mov	x29, sp
    12c0:	b50000a0 	cbnz	x0, 12d4 <bl1_calc_bl2_mem_layout+0x20>
    12c4:	528005a1 	mov	w1, #0x2d                  	// #45
    12c8:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    12cc:	911e6000 	add	x0, x0, #0x798
    12d0:	940009b5 	bl	39a4 <__assert>
    12d4:	aa0103e0 	mov	x0, x1
    12d8:	b5000061 	cbnz	x1, 12e4 <bl1_calc_bl2_mem_layout+0x30>
    12dc:	528005c1 	mov	w1, #0x2e                  	// #46
    12e0:	17fffffa 	b	12c8 <bl1_calc_bl2_mem_layout+0x14>
    12e4:	f9400042 	ldr	x2, [x2]
    12e8:	d29bffe1 	mov	x1, #0xdfff                	// #57343
    12ec:	f2a201c1 	movk	x1, #0x100e, lsl #16
    12f0:	eb01005f 	cmp	x2, x1
    12f4:	54000069 	b.ls	1300 <bl1_calc_bl2_mem_layout+0x4c>  // b.plast
    12f8:	52800681 	mov	w1, #0x34                  	// #52
    12fc:	17fffff3 	b	12c8 <bl1_calc_bl2_mem_layout+0x14>
    1300:	d29c0001 	mov	x1, #0xe000                	// #57344
    1304:	f2a201c1 	movk	x1, #0x100e, lsl #16
    1308:	cb020021 	sub	x1, x1, x2
    130c:	a9000402 	stp	x2, x1, [x0]
    1310:	d2800201 	mov	x1, #0x10                  	// #16
    1314:	a8c17bfd 	ldp	x29, x30, [sp], #16
    1318:	14000887 	b	3534 <flush_dcache_range>

000000000000131c <bl1_setup>:
    131c:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
    1320:	910003fd 	mov	x29, sp
    1324:	97fffeb1 	bl	de8 <bl1_early_platform_setup>
    1328:	a8c17bfd 	ldp	x29, x30, [sp], #16
    132c:	17fffec0 	b	e2c <bl1_plat_arch_setup>

0000000000001330 <bl1_main>:
    1330:	a9bd7bfd 	stp	x29, x30, [sp, #-48]!
    1334:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    1338:	911e9c00 	add	x0, x0, #0x7a7
    133c:	910003fd 	mov	x29, sp
    1340:	a90153f3 	stp	x19, x20, [sp, #16]
    1344:	90000033 	adrp	x19, 5000 <__TEXT_END__>
    1348:	911f0a73 	add	x19, x19, #0x7c2
    134c:	f90013f5 	str	x21, [sp, #32]
    1350:	94000241 	bl	1c54 <tf_log>
    1354:	aa1303e0 	mov	x0, x19
    1358:	90000021 	adrp	x1, 5000 <__TEXT_END__>
    135c:	91007821 	add	x1, x1, #0x1e
    1360:	9400023d 	bl	1c54 <tf_log>
    1364:	aa1303e0 	mov	x0, x19
    1368:	90000021 	adrp	x1, 5000 <__TEXT_END__>
    136c:	91000021 	add	x1, x1, #0x0
    1370:	94000239 	bl	1c54 <tf_log>
    1374:	d00807a2 	adrp	x2, 100f7000 <__BL1_RAM_END__>
    1378:	91000042 	add	x2, x2, #0x0
    137c:	b0080761 	adrp	x1, 100ee000 <__BL1_RAM_START__>
    1380:	91000021 	add	x1, x1, #0x0
    1384:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    1388:	911f3000 	add	x0, x0, #0x7cc
    138c:	94000232 	bl	1c54 <tf_log>
    1390:	940007b2 	bl	3258 <print_errata_status>
    1394:	d53e1000 	mrs	x0, sctlr_el3
    1398:	370000a0 	tbnz	w0, #0, 13ac <bl1_main+0x7c>
    139c:	52800d81 	mov	w1, #0x6c                  	// #108
    13a0:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    13a4:	911e6000 	add	x0, x0, #0x798
    13a8:	9400097f 	bl	39a4 <__assert>
    13ac:	37100060 	tbnz	w0, #2, 13b8 <bl1_main+0x88>
    13b0:	52800da1 	mov	w1, #0x6d                  	// #109
    13b4:	17fffffb 	b	13a0 <bl1_main+0x70>
    13b8:	37600060 	tbnz	w0, #12, 13c4 <bl1_main+0x94>
    13bc:	52800dc1 	mov	w1, #0x6e                  	// #110
    13c0:	17fffff8 	b	13a0 <bl1_main+0x70>
    13c4:	d53b0021 	mrs	x1, ctr_el0
    13c8:	d2800160 	mov	x0, #0xb                   	// #11
    13cc:	ea41601f 	tst	x0, x1, lsr #24
    13d0:	54000060 	b.eq	13dc <bl1_main+0xac>  // b.none
    13d4:	52800f41 	mov	w1, #0x7a                  	// #122
    13d8:	17fffff2 	b	13a0 <bl1_main+0x70>
    13dc:	94000065 	bl	1570 <bl1_arch_setup>
    13e0:	97fffeac 	bl	e90 <bl1_platform_setup>
    13e4:	94000185 	bl	19f8 <bl1_plat_get_next_image_id>
    13e8:	2a0003f3 	mov	w19, w0
    13ec:	7100041f 	cmp	w0, #0x1
    13f0:	540005e1 	b.ne	14ac <bl1_main+0x17c>  // b.any
    13f4:	94000186 	bl	1a0c <bl1_plat_get_image_desc>
    13f8:	b5000060 	cbnz	x0, 1404 <bl1_main+0xd4>
    13fc:	528015e1 	mov	w1, #0xaf                  	// #175
    1400:	17ffffe8 	b	13a0 <bl1_main+0x70>
    1404:	91004014 	add	x20, x0, #0x10
    1408:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    140c:	911f7c00 	add	x0, x0, #0x7df
    1410:	94000211 	bl	1c54 <tf_log>
    1414:	2a1303e0 	mov	w0, w19
    1418:	9400017b 	bl	1a04 <bl1_plat_handle_pre_image_load>
    141c:	2a0003f5 	mov	w21, w0
    1420:	340000e0 	cbz	w0, 143c <bl1_main+0x10c>
    1424:	2a0003e1 	mov	w1, w0
    1428:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    142c:	911fc800 	add	x0, x0, #0x7f2
    1430:	94000209 	bl	1c54 <tf_log>
    1434:	2a1503e0 	mov	w0, w21
    1438:	940002b7 	bl	1f14 <plat_error_handler>
    143c:	aa1403e1 	mov	x1, x20
    1440:	2a1303e0 	mov	w0, w19
    1444:	9400018c 	bl	1a74 <load_auth_image>
    1448:	2a0003f4 	mov	w20, w0
    144c:	340000c0 	cbz	w0, 1464 <bl1_main+0x134>
    1450:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    1454:	91208c00 	add	x0, x0, #0x823
    1458:	940001ff 	bl	1c54 <tf_log>
    145c:	2a1403e0 	mov	w0, w20
    1460:	17fffff6 	b	1438 <bl1_main+0x108>
    1464:	2a1303e0 	mov	w0, w19
    1468:	9400016c 	bl	1a18 <bl1_plat_handle_post_image_load>
    146c:	2a0003f4 	mov	w20, w0
    1470:	340000c0 	cbz	w0, 1488 <bl1_main+0x158>
    1474:	2a0003e1 	mov	w1, w0
    1478:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    147c:	91210800 	add	x0, x0, #0x842
    1480:	940001f5 	bl	1c54 <tf_log>
    1484:	17fffff6 	b	145c <bl1_main+0x12c>
    1488:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    148c:	9121d000 	add	x0, x0, #0x874
    1490:	940001f1 	bl	1c54 <tf_log>
    1494:	2a1303e0 	mov	w0, w19
    1498:	94000052 	bl	15e0 <bl1_prepare_next_image>
    149c:	a94153f3 	ldp	x19, x20, [sp, #16]
    14a0:	f94013f5 	ldr	x21, [sp, #32]
    14a4:	a8c37bfd 	ldp	x29, x30, [sp], #48
    14a8:	1400027f 	b	1ea4 <console_flush>
    14ac:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    14b0:	91221c00 	add	x0, x0, #0x887
    14b4:	17fffff7 	b	1490 <bl1_main+0x160>

00000000000014b8 <bl1_print_next_bl_ep_info>:
    14b8:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
    14bc:	910003fd 	mov	x29, sp
    14c0:	f9000bf3 	str	x19, [sp, #16]
    14c4:	aa0003f3 	mov	x19, x0
    14c8:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    14cc:	9122d000 	add	x0, x0, #0x8b4
    14d0:	940001e1 	bl	1c54 <tf_log>
    14d4:	aa1303e0 	mov	x0, x19
    14d8:	f9400bf3 	ldr	x19, [sp, #16]
    14dc:	a8c27bfd 	ldp	x29, x30, [sp], #32
    14e0:	140001cf 	b	1c1c <print_entry_point_info>

00000000000014e4 <bl1_smc_handler>:
    14e4:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
    14e8:	7100041f 	cmp	w0, #0x1
    14ec:	910003fd 	mov	x29, sp
    14f0:	f9000bf3 	str	x19, [sp, #16]
    14f4:	aa0603f3 	mov	x19, x6
    14f8:	54000160 	b.eq	1524 <bl1_smc_handler+0x40>  // b.none
    14fc:	2a0003e1 	mov	w1, w0
    1500:	71000c1f 	cmp	w0, #0x3
    1504:	54000280 	b.eq	1554 <bl1_smc_handler+0x70>  // b.none
    1508:	350002a0 	cbnz	w0, 155c <bl1_smc_handler+0x78>
    150c:	d2800080 	mov	x0, #0x4                   	// #4
    1510:	f9000260 	str	x0, [x19]
    1514:	aa1303e0 	mov	x0, x19
    1518:	f9400bf3 	ldr	x19, [sp, #16]
    151c:	a8c27bfd 	ldp	x29, x30, [sp], #32
    1520:	d65f03c0 	ret
    1524:	d29e9ac0 	mov	x0, #0xf4d6                	// #62678
    1528:	f2a95760 	movk	x0, #0x4abb, lsl #16
    152c:	f9000cc0 	str	x0, [x6, #24]
    1530:	d28eb6a0 	mov	x0, #0x75b5                	// #30133
    1534:	f2a2ace0 	movk	x0, #0x1567, lsl #16
    1538:	f90008c0 	str	x0, [x6, #16]
    153c:	d28e5960 	mov	x0, #0x72cb                	// #29387
    1540:	f2a9b340 	movk	x0, #0x4d9a, lsl #16
    1544:	f90004c0 	str	x0, [x6, #8]
    1548:	d28cfa80 	mov	x0, #0x67d4                	// #26580
    154c:	f2bfa720 	movk	x0, #0xfd39, lsl #16
    1550:	17fffff0 	b	1510 <bl1_smc_handler+0x2c>
    1554:	d2800020 	mov	x0, #0x1                   	// #1
    1558:	17ffffee 	b	1510 <bl1_smc_handler+0x2c>
    155c:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    1560:	91232000 	add	x0, x0, #0x8c8
    1564:	940001bc 	bl	1c54 <tf_log>
    1568:	92800000 	mov	x0, #0xffffffffffffffff    	// #-1
    156c:	17ffffe9 	b	1510 <bl1_smc_handler+0x2c>

0000000000001570 <bl1_arch_setup>:
    1570:	d53e1100 	mrs	x0, scr_el3
    1574:	b2760000 	orr	x0, x0, #0x400
    1578:	d51e1100 	msr	scr_el3, x0
    157c:	d65f03c0 	ret

0000000000001580 <cm_get_context>:
    1580:	7100041f 	cmp	w0, #0x1
    1584:	540000e9 	b.ls	15a0 <cm_get_context+0x20>  // b.plast
    1588:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
    158c:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    1590:	9123b000 	add	x0, x0, #0x8ec
    1594:	910003fd 	mov	x29, sp
    1598:	528003a1 	mov	w1, #0x1d                  	// #29
    159c:	94000902 	bl	39a4 <__assert>
    15a0:	b0080781 	adrp	x1, 100f2000 <platform_normal_stacks+0x3f00>
    15a4:	911f0021 	add	x1, x1, #0x7c0
    15a8:	f8605820 	ldr	x0, [x1, w0, uxtw #3]
    15ac:	d65f03c0 	ret

00000000000015b0 <cm_set_context>:
    15b0:	7100043f 	cmp	w1, #0x1
    15b4:	540000e9 	b.ls	15d0 <cm_set_context+0x20>  // b.plast
    15b8:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
    15bc:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    15c0:	9123b000 	add	x0, x0, #0x8ec
    15c4:	910003fd 	mov	x29, sp
    15c8:	52800461 	mov	w1, #0x23                  	// #35
    15cc:	940008f6 	bl	39a4 <__assert>
    15d0:	b0080782 	adrp	x2, 100f2000 <platform_normal_stacks+0x3f00>
    15d4:	911f0042 	add	x2, x2, #0x7c0
    15d8:	f8215840 	str	x0, [x2, w1, uxtw #3]
    15dc:	d65f03c0 	ret

00000000000015e0 <bl1_prepare_next_image>:
    15e0:	a9bd7bfd 	stp	x29, x30, [sp, #-48]!
    15e4:	910003fd 	mov	x29, sp
    15e8:	a90153f3 	stp	x19, x20, [sp, #16]
    15ec:	a9025bf5 	stp	x21, x22, [sp, #32]
    15f0:	d5380401 	mrs	x1, id_aa64pfr0_el1
    15f4:	d3441c21 	ubfx	x1, x1, #4, #4
    15f8:	f100043f 	cmp	x1, #0x1
    15fc:	54000121 	b.ne	1620 <bl1_prepare_next_image+0x40>  // b.any
    1600:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    1604:	91242c00 	add	x0, x0, #0x90b
    1608:	94000193 	bl	1c54 <tf_log>
    160c:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    1610:	91256c00 	add	x0, x0, #0x95b
    1614:	94000275 	bl	1fe8 <backtrace>
    1618:	94000223 	bl	1ea4 <console_flush>
    161c:	940007b5 	bl	34f0 <do_panic>
    1620:	2a0003f6 	mov	w22, w0
    1624:	940000fa 	bl	1a0c <bl1_plat_get_image_desc>
    1628:	aa0003f5 	mov	x21, x0
    162c:	b50000a0 	cbnz	x0, 1640 <bl1_prepare_next_image+0x60>
    1630:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    1634:	9123b000 	add	x0, x0, #0x8ec
    1638:	528007e1 	mov	w1, #0x3f                  	// #63
    163c:	940008da 	bl	39a4 <__assert>
    1640:	b9402c13 	ldr	w19, [x0, #44]
    1644:	9100a014 	add	x20, x0, #0x28
    1648:	12000273 	and	w19, w19, #0x1
    164c:	2a1303e0 	mov	w0, w19
    1650:	97ffffcc 	bl	1580 <cm_get_context>
    1654:	b50000e0 	cbnz	x0, 1670 <bl1_prepare_next_image+0x90>
    1658:	b0080780 	adrp	x0, 100f2000 <platform_normal_stacks+0x3f00>
    165c:	910c8000 	add	x0, x0, #0x320
    1660:	52804a02 	mov	w2, #0x250                 	// #592
    1664:	2a1303e1 	mov	w1, w19
    1668:	9ba20260 	umaddl	x0, w19, w2, x0
    166c:	97ffffd1 	bl	15b0 <cm_set_context>
    1670:	340002d3 	cbz	w19, 16c8 <bl1_prepare_next_image+0xe8>
    1674:	d5380400 	mrs	x0, id_aa64pfr0_el1
    1678:	f2780c1f 	tst	x0, #0xf00
    167c:	52800041 	mov	w1, #0x2                   	// #2
    1680:	1a810261 	csel	w1, w19, w1, eq  // eq = none
    1684:	52807820 	mov	w0, #0x3c1                 	// #961
    1688:	2a010801 	orr	w1, w0, w1, lsl #2
    168c:	b9001281 	str	w1, [x20, #16]
    1690:	aa1403e1 	mov	x1, x20
    1694:	2a1603e0 	mov	w0, w22
    1698:	940000da 	bl	1a00 <bl1_plat_set_ep_info>
    169c:	aa1403e0 	mov	x0, x20
    16a0:	94000079 	bl	1884 <cm_init_my_context>
    16a4:	2a1303e0 	mov	w0, w19
    16a8:	940000a0 	bl	1928 <cm_prepare_el3_exit>
    16ac:	52800080 	mov	w0, #0x4                   	// #4
    16b0:	b90006a0 	str	w0, [x21, #4]
    16b4:	aa1403e0 	mov	x0, x20
    16b8:	a94153f3 	ldp	x19, x20, [sp, #16]
    16bc:	a9425bf5 	ldp	x21, x22, [sp, #32]
    16c0:	a8c37bfd 	ldp	x29, x30, [sp], #48
    16c4:	14000156 	b	1c1c <print_entry_point_info>
    16c8:	52800021 	mov	w1, #0x1                   	// #1
    16cc:	17ffffee 	b	1684 <bl1_prepare_next_image+0xa4>

00000000000016d0 <errata_print_msg>:
    16d0:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
    16d4:	7100081f 	cmp	w0, #0x2
    16d8:	910003fd 	mov	x29, sp
    16dc:	540000a9 	b.ls	16f0 <errata_print_msg+0x20>  // b.plast
    16e0:	528009e1 	mov	w1, #0x4f                  	// #79
    16e4:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    16e8:	9125c800 	add	x0, x0, #0x972
    16ec:	940008ae 	bl	39a4 <__assert>
    16f0:	b5000061 	cbnz	x1, 16fc <errata_print_msg+0x2c>
    16f4:	52800a01 	mov	w1, #0x50                  	// #80
    16f8:	17fffffb 	b	16e4 <errata_print_msg+0x14>
    16fc:	aa0203e3 	mov	x3, x2
    1700:	b5000062 	cbnz	x2, 170c <errata_print_msg+0x3c>
    1704:	52800a21 	mov	w1, #0x51                  	// #81
    1708:	17fffff7 	b	16e4 <errata_print_msg+0x14>
    170c:	7100041f 	cmp	w0, #0x1
    1710:	540000a0 	b.eq	1724 <errata_print_msg+0x54>  // b.none
    1714:	7100081f 	cmp	w0, #0x2
    1718:	54000180 	b.eq	1748 <errata_print_msg+0x78>  // b.none
    171c:	a8c17bfd 	ldp	x29, x30, [sp], #16
    1720:	d65f03c0 	ret
    1724:	aa0103e2 	mov	x2, x1
    1728:	90000024 	adrp	x4, 5000 <__TEXT_END__>
    172c:	91262c84 	add	x4, x4, #0x98b
    1730:	90000021 	adrp	x1, 5000 <__TEXT_END__>
    1734:	91264c21 	add	x1, x1, #0x993
    1738:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    173c:	91265c00 	add	x0, x0, #0x997
    1740:	a8c17bfd 	ldp	x29, x30, [sp], #16
    1744:	14000144 	b	1c54 <tf_log>
    1748:	aa0103e2 	mov	x2, x1
    174c:	90000024 	adrp	x4, 5000 <__TEXT_END__>
    1750:	9126f884 	add	x4, x4, #0x9be
    1754:	90000021 	adrp	x1, 5000 <__TEXT_END__>
    1758:	91264c21 	add	x1, x1, #0x993
    175c:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    1760:	91271c00 	add	x0, x0, #0x9c7
    1764:	17fffff7 	b	1740 <errata_print_msg+0x70>

0000000000001768 <cm_setup_context>:
    1768:	a9bd7bfd 	stp	x29, x30, [sp, #-48]!
    176c:	910003fd 	mov	x29, sp
    1770:	a90153f3 	stp	x19, x20, [sp, #16]
    1774:	f90013f5 	str	x21, [sp, #32]
    1778:	b50000a0 	cbnz	x0, 178c <cm_setup_context+0x24>
    177c:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    1780:	9127b800 	add	x0, x0, #0x9ee
    1784:	52800941 	mov	w1, #0x4a                  	// #74
    1788:	94000887 	bl	39a4 <__assert>
    178c:	aa0103f4 	mov	x20, x1
    1790:	aa0003f3 	mov	x19, x0
    1794:	d2804a01 	mov	x1, #0x250                 	// #592
    1798:	b9400695 	ldr	w21, [x20, #4]
    179c:	94000790 	bl	35dc <zeromem>
    17a0:	120002b5 	and	w21, w21, #0x1
    17a4:	d53e1100 	mrs	x0, scr_el3
    17a8:	1281a0e2 	mov	w2, #0xfffff2f8            	// #-3336
    17ac:	0a000042 	and	w2, w2, w0
    17b0:	34000055 	cbz	w21, 17b8 <cm_setup_context+0x50>
    17b4:	32000042 	orr	w2, w2, #0x1
    17b8:	b9401280 	ldr	w0, [x20, #16]
    17bc:	d3441004 	ubfx	x4, x0, #4, #1
    17c0:	37200040 	tbnz	w0, #4, 17c8 <cm_setup_context+0x60>
    17c4:	32160042 	orr	w2, w2, #0x400
    17c8:	b9400683 	ldr	w3, [x20, #4]
    17cc:	36100043 	tbz	w3, #2, 17d4 <cm_setup_context+0x6c>
    17d0:	32150042 	orr	w2, w2, #0x800
    17d4:	121c7842 	and	w2, w2, #0xfffffff7
    17d8:	34000055 	cbz	w21, 17e0 <cm_setup_context+0x78>
    17dc:	32100442 	orr	w2, w2, #0x30000
    17e0:	d5380421 	mrs	x1, id_aa64pfr1_el1
    17e4:	53082c21 	ubfx	w1, w1, #8, #4
    17e8:	7100043f 	cmp	w1, #0x1
    17ec:	54000061 	b.ne	17f8 <cm_setup_context+0x90>  // b.any
    17f0:	32060042 	orr	w2, w2, #0x4000000
    17f4:	14000004 	b	1804 <cm_setup_context+0x9c>
    17f8:	7100083f 	cmp	w1, #0x2
    17fc:	1a9f02b5 	csel	w21, w21, wzr, eq  // eq = none
    1800:	35ffff95 	cbnz	w21, 17f0 <cm_setup_context+0x88>
    1804:	350003a4 	cbnz	w4, 1878 <cm_setup_context+0x110>
    1808:	d3420c01 	ubfx	x1, x0, #2, #2
    180c:	7100083f 	cmp	w1, #0x2
    1810:	54000041 	b.ne	1818 <cm_setup_context+0xb0>  // b.any
    1814:	32180042 	orr	w2, w2, #0x100
    1818:	d3687c63 	ubfiz	x3, x3, #24, #32
    181c:	7100009f 	cmp	w4, #0x0
    1820:	92670063 	and	x3, x3, #0x2000000
    1824:	d2810001 	mov	x1, #0x800                 	// #2048
    1828:	f2a61a01 	movk	x1, #0x30d0, lsl #16
    182c:	d2810705 	mov	x5, #0x838                 	// #2104
    1830:	f2a018a5 	movk	x5, #0xc5, lsl #16
    1834:	aa010061 	orr	x1, x3, x1
    1838:	aa050063 	orr	x3, x3, x5
    183c:	9a811063 	csel	x3, x3, x1, ne  // ne = any
    1840:	f900a263 	str	x3, [x19, #320]
    1844:	d5381021 	mrs	x1, actlr_el1
    1848:	f94013f5 	ldr	x21, [sp, #32]
    184c:	f9008262 	str	x2, [x19, #256]
    1850:	f9400682 	ldr	x2, [x20, #8]
    1854:	2a0003e0 	mov	w0, w0
    1858:	a9118a60 	stp	x0, x2, [x19, #280]
    185c:	aa1303e0 	mov	x0, x19
    1860:	d2800802 	mov	x2, #0x40                  	// #64
    1864:	f900a661 	str	x1, [x19, #328]
    1868:	91006281 	add	x1, x20, #0x18
    186c:	a94153f3 	ldp	x19, x20, [sp, #16]
    1870:	a8c37bfd 	ldp	x29, x30, [sp], #48
    1874:	14000865 	b	3a08 <memcpy>
    1878:	12000c01 	and	w1, w0, #0xf
    187c:	7100283f 	cmp	w1, #0xa
    1880:	17ffffe4 	b	1810 <cm_setup_context+0xa8>

0000000000001884 <cm_init_my_context>:
    1884:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
    1888:	910003fd 	mov	x29, sp
    188c:	f9000bf3 	str	x19, [sp, #16]
    1890:	aa0003f3 	mov	x19, x0
    1894:	b9400400 	ldr	w0, [x0, #4]
    1898:	12000000 	and	w0, w0, #0x1
    189c:	97ffff39 	bl	1580 <cm_get_context>
    18a0:	aa1303e1 	mov	x1, x19
    18a4:	f9400bf3 	ldr	x19, [sp, #16]
    18a8:	a8c27bfd 	ldp	x29, x30, [sp], #32
    18ac:	17ffffaf 	b	1768 <cm_setup_context>

00000000000018b0 <cm_el1_sysregs_context_restore>:
    18b0:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
    18b4:	910003fd 	mov	x29, sp
    18b8:	97ffff32 	bl	1580 <cm_get_context>
    18bc:	b50000a0 	cbnz	x0, 18d0 <cm_el1_sysregs_context_restore+0x20>
    18c0:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    18c4:	9127b800 	add	x0, x0, #0x9ee
    18c8:	52804501 	mov	w1, #0x228                 	// #552
    18cc:	94000836 	bl	39a4 <__assert>
    18d0:	a8c17bfd 	ldp	x29, x30, [sp], #16
    18d4:	9104c000 	add	x0, x0, #0x130
    18d8:	14000667 	b	3274 <el1_sysregs_context_restore>

00000000000018dc <cm_set_next_eret_context>:
    18dc:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
    18e0:	910003fd 	mov	x29, sp
    18e4:	97ffff27 	bl	1580 <cm_get_context>
    18e8:	b50000a0 	cbnz	x0, 18fc <cm_set_next_eret_context+0x20>
    18ec:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    18f0:	9127b800 	add	x0, x0, #0x9ee
    18f4:	52805281 	mov	w1, #0x294                 	// #660
    18f8:	9400082b 	bl	39a4 <__assert>
    18fc:	d5384201 	mrs	x1, spsel
    1900:	b40000a1 	cbz	x1, 1914 <cm_set_next_eret_context+0x38>
    1904:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    1908:	91285400 	add	x0, x0, #0xa15
    190c:	528008a1 	mov	w1, #0x45                  	// #69
    1910:	17fffffa 	b	18f8 <cm_set_next_eret_context+0x1c>
    1914:	d50041bf 	msr	spsel, #0x1
    1918:	9100001f 	mov	sp, x0
    191c:	d50040bf 	msr	spsel, #0x0
    1920:	a8c17bfd 	ldp	x29, x30, [sp], #16
    1924:	d65f03c0 	ret

0000000000001928 <cm_prepare_el3_exit>:
    1928:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
    192c:	910003fd 	mov	x29, sp
    1930:	f9000bf3 	str	x19, [sp, #16]
    1934:	2a0003f3 	mov	w19, w0
    1938:	97ffff12 	bl	1580 <cm_get_context>
    193c:	b50000a0 	cbnz	x0, 1950 <cm_prepare_el3_exit+0x28>
    1940:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    1944:	9127b800 	add	x0, x0, #0x9ee
    1948:	52802881 	mov	w1, #0x144                 	// #324
    194c:	94000816 	bl	39a4 <__assert>
    1950:	7100067f 	cmp	w19, #0x1
    1954:	54000121 	b.ne	1978 <cm_prepare_el3_exit+0x50>  // b.any
    1958:	f9408001 	ldr	x1, [x0, #256]
    195c:	364001a1 	tbz	w1, #8, 1990 <cm_prepare_el3_exit+0x68>
    1960:	f940a001 	ldr	x1, [x0, #320]
    1964:	52810600 	mov	w0, #0x830                 	// #2096
    1968:	72a618a0 	movk	w0, #0x30c5, lsl #16
    196c:	12070021 	and	w1, w1, #0x2000000
    1970:	2a000021 	orr	w1, w1, w0
    1974:	d51c1001 	msr	sctlr_el2, x1
    1978:	2a1303e0 	mov	w0, w19
    197c:	97ffffcd 	bl	18b0 <cm_el1_sysregs_context_restore>
    1980:	2a1303e0 	mov	w0, w19
    1984:	f9400bf3 	ldr	x19, [sp, #16]
    1988:	a8c27bfd 	ldp	x29, x30, [sp], #32
    198c:	17ffffd4 	b	18dc <cm_set_next_eret_context>
    1990:	d5380400 	mrs	x0, id_aa64pfr0_el1
    1994:	f2780c1f 	tst	x0, #0xf00
    1998:	54ffff00 	b.eq	1978 <cm_prepare_el3_exit+0x50>  // b.none
    199c:	d34a2821 	ubfx	x1, x1, #10, #1
    19a0:	d3618021 	lsl	x1, x1, #31
    19a4:	b2580421 	orr	x1, x1, #0x30000000000
    19a8:	d51c1101 	msr	hcr_el2, x1
    19ac:	d2867fe0 	mov	x0, #0x33ff                	// #13311
    19b0:	d51c1140 	msr	cptr_el2, x0
    19b4:	d2800060 	mov	x0, #0x3                   	// #3
    19b8:	d51ce100 	msr	cnthctl_el2, x0
    19bc:	d2800000 	mov	x0, #0x0                   	// #0
    19c0:	d51ce060 	msr	cntvoff_el2, x0
    19c4:	d5380001 	mrs	x1, midr_el1
    19c8:	d51c0001 	msr	vpidr_el2, x1
    19cc:	d53800a1 	mrs	x1, mpidr_el1
    19d0:	d51c00a1 	msr	vmpidr_el2, x1
    19d4:	d51c2100 	msr	vttbr_el2, x0
    19d8:	d53b9c01 	mrs	x1, pmcr_el0
    19dc:	530b3c21 	ubfx	w1, w1, #11, #5
    19e0:	52a08042 	mov	w2, #0x4020000             	// #67239936
    19e4:	2a020021 	orr	w1, w1, w2
    19e8:	d51c1121 	msr	mdcr_el2, x1
    19ec:	d51c1160 	msr	hstr_el2, x0
    19f0:	d51ce220 	msr	cnthp_ctl_el2, x0
    19f4:	17ffffe1 	b	1978 <cm_prepare_el3_exit+0x50>

00000000000019f8 <bl1_plat_get_next_image_id>:
    19f8:	52800020 	mov	w0, #0x1                   	// #1
    19fc:	d65f03c0 	ret

0000000000001a00 <bl1_plat_set_ep_info>:
    1a00:	d65f03c0 	ret

0000000000001a04 <bl1_plat_handle_pre_image_load>:
    1a04:	52800000 	mov	w0, #0x0                   	// #0
    1a08:	d65f03c0 	ret

0000000000001a0c <bl1_plat_get_image_desc>:
    1a0c:	b0080760 	adrp	x0, 100ee000 <__BL1_RAM_START__>
    1a10:	91000000 	add	x0, x0, #0x0
    1a14:	d65f03c0 	ret

0000000000001a18 <bl1_plat_handle_post_image_load>:
    1a18:	7100041f 	cmp	w0, #0x1
    1a1c:	54000281 	b.ne	1a6c <bl1_plat_handle_post_image_load+0x54>  // b.any
    1a20:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
    1a24:	910003fd 	mov	x29, sp
    1a28:	a90153f3 	stp	x19, x20, [sp, #16]
    1a2c:	97fffff8 	bl	1a0c <bl1_plat_get_image_desc>
    1a30:	aa0003f3 	mov	x19, x0
    1a34:	b50000a0 	cbnz	x0, 1a48 <bl1_plat_handle_post_image_load+0x30>
    1a38:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    1a3c:	9128f000 	add	x0, x0, #0xa3c
    1a40:	52800bc1 	mov	w1, #0x5e                  	// #94
    1a44:	940007d8 	bl	39a4 <__assert>
    1a48:	97fffce5 	bl	ddc <bl1_plat_sec_mem_layout>
    1a4c:	f9400014 	ldr	x20, [x0]
    1a50:	aa1403e1 	mov	x1, x20
    1a54:	97fffe18 	bl	12b4 <bl1_calc_bl2_mem_layout>
    1a58:	f9002674 	str	x20, [x19, #72]
    1a5c:	52800000 	mov	w0, #0x0                   	// #0
    1a60:	a94153f3 	ldp	x19, x20, [sp, #16]
    1a64:	a8c27bfd 	ldp	x29, x30, [sp], #32
    1a68:	d65f03c0 	ret
    1a6c:	52800000 	mov	w0, #0x0                   	// #0
    1a70:	d65f03c0 	ret

0000000000001a74 <load_auth_image>:
    1a74:	a9b97bfd 	stp	x29, x30, [sp, #-112]!
    1a78:	910003fd 	mov	x29, sp
    1a7c:	a90153f3 	stp	x19, x20, [sp, #16]
    1a80:	2a0003f4 	mov	w20, w0
    1a84:	a9025bf5 	stp	x21, x22, [sp, #32]
    1a88:	aa0103f5 	mov	x21, x1
    1a8c:	f9001bf7 	str	x23, [sp, #48]
    1a90:	90000037 	adrp	x23, 5000 <__TEXT_END__>
    1a94:	9129b6f7 	add	x23, x23, #0xa6d
    1a98:	b50000b5 	cbnz	x21, 1aac <load_auth_image+0x38>
    1a9c:	52800a01 	mov	w1, #0x50                  	// #80
    1aa0:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    1aa4:	91296800 	add	x0, x0, #0xa5a
    1aa8:	940007bf 	bl	39a4 <__assert>
    1aac:	394006a0 	ldrb	w0, [x21, #1]
    1ab0:	7100041f 	cmp	w0, #0x1
    1ab4:	54000068 	b.hi	1ac0 <load_auth_image+0x4c>  // b.pmore
    1ab8:	52800a21 	mov	w1, #0x51                  	// #81
    1abc:	17fffff9 	b	1aa0 <load_auth_image+0x2c>
    1ac0:	910163e2 	add	x2, sp, #0x58
    1ac4:	910123e1 	add	x1, sp, #0x48
    1ac8:	2a1403e0 	mov	w0, w20
    1acc:	f94006b6 	ldr	x22, [x21, #8]
    1ad0:	97fffd72 	bl	1098 <plat_get_image_source>
    1ad4:	2a0003f3 	mov	w19, w0
    1ad8:	34000120 	cbz	w0, 1afc <load_auth_image+0x88>
    1adc:	2a0003e2 	mov	w2, w0
    1ae0:	2a1403e1 	mov	w1, w20
    1ae4:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    1ae8:	9100e800 	add	x0, x0, #0x3a
    1aec:	9400005a 	bl	1c54 <tf_log>
    1af0:	9400010b 	bl	1f1c <plat_try_next_boot_source>
    1af4:	35fffd20 	cbnz	w0, 1a98 <load_auth_image+0x24>
    1af8:	1400002d 	b	1bac <load_auth_image+0x138>
    1afc:	f94027e0 	ldr	x0, [sp, #72]
    1b00:	910143e2 	add	x2, sp, #0x50
    1b04:	f9402fe1 	ldr	x1, [sp, #88]
    1b08:	97fffc00 	bl	b08 <io_open>
    1b0c:	2a0003f3 	mov	w19, w0
    1b10:	340000c0 	cbz	w0, 1b28 <load_auth_image+0xb4>
    1b14:	2a0003e2 	mov	w2, w0
    1b18:	2a1403e1 	mov	w1, w20
    1b1c:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    1b20:	9101ac00 	add	x0, x0, #0x6b
    1b24:	17fffff2 	b	1aec <load_auth_image+0x78>
    1b28:	aa1603e2 	mov	x2, x22
    1b2c:	2a1403e1 	mov	w1, w20
    1b30:	aa1703e0 	mov	x0, x23
    1b34:	94000048 	bl	1c54 <tf_log>
    1b38:	f9402be0 	ldr	x0, [sp, #80]
    1b3c:	910183e1 	add	x1, sp, #0x60
    1b40:	97fffc54 	bl	c90 <io_size>
    1b44:	2a0003f3 	mov	w19, w0
    1b48:	35000060 	cbnz	w0, 1b54 <load_auth_image+0xe0>
    1b4c:	f94033e2 	ldr	x2, [sp, #96]
    1b50:	b50000e2 	cbnz	x2, 1b6c <load_auth_image+0xf8>
    1b54:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    1b58:	912a5000 	add	x0, x0, #0xa94
    1b5c:	2a1303e2 	mov	w2, w19
    1b60:	2a1403e1 	mov	w1, w20
    1b64:	9400003c 	bl	1c54 <tf_log>
    1b68:	14000009 	b	1b8c <load_auth_image+0x118>
    1b6c:	b94016a0 	ldr	w0, [x21, #20]
    1b70:	eb00005f 	cmp	x2, x0
    1b74:	54000289 	b.ls	1bc4 <load_auth_image+0x150>  // b.plast
    1b78:	12800353 	mov	w19, #0xffffffe5            	// #-27
    1b7c:	2a1403e1 	mov	w1, w20
    1b80:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    1b84:	912b2c00 	add	x0, x0, #0xacb
    1b88:	94000033 	bl	1c54 <tf_log>
    1b8c:	f9402be0 	ldr	x0, [sp, #80]
    1b90:	97fffc7a 	bl	d78 <io_close>
    1b94:	f94027e0 	ldr	x0, [sp, #72]
    1b98:	97fffbc3 	bl	aa4 <io_dev_close>
    1b9c:	35fffab3 	cbnz	w19, 1af0 <load_auth_image+0x7c>
    1ba0:	b94012a1 	ldr	w1, [x21, #16]
    1ba4:	f94006a0 	ldr	x0, [x21, #8]
    1ba8:	94000663 	bl	3534 <flush_dcache_range>
    1bac:	2a1303e0 	mov	w0, w19
    1bb0:	a94153f3 	ldp	x19, x20, [sp, #16]
    1bb4:	a9425bf5 	ldp	x21, x22, [sp, #32]
    1bb8:	f9401bf7 	ldr	x23, [sp, #48]
    1bbc:	a8c77bfd 	ldp	x29, x30, [sp], #112
    1bc0:	d65f03c0 	ret
    1bc4:	f9402be0 	ldr	x0, [sp, #80]
    1bc8:	b90012a2 	str	w2, [x21, #16]
    1bcc:	9101a3e3 	add	x3, sp, #0x68
    1bd0:	aa1603e1 	mov	x1, x22
    1bd4:	97fffc49 	bl	cf8 <io_read>
    1bd8:	2a0003f3 	mov	w19, w0
    1bdc:	35000080 	cbnz	w0, 1bec <load_auth_image+0x178>
    1be0:	a94603e3 	ldp	x3, x0, [sp, #96]
    1be4:	eb03001f 	cmp	x0, x3
    1be8:	540000c2 	b.cs	1c00 <load_auth_image+0x18c>  // b.hs, b.nlast
    1bec:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    1bf0:	912bb000 	add	x0, x0, #0xaec
    1bf4:	2a1303e2 	mov	w2, w19
    1bf8:	2a1403e1 	mov	w1, w20
    1bfc:	17ffffda 	b	1b64 <load_auth_image+0xf0>
    1c00:	8b0302c3 	add	x3, x22, x3
    1c04:	aa1603e2 	mov	x2, x22
    1c08:	2a1403e1 	mov	w1, w20
    1c0c:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    1c10:	912c3800 	add	x0, x0, #0xb0e
    1c14:	94000010 	bl	1c54 <tf_log>
    1c18:	17ffffdd 	b	1b8c <load_auth_image+0x118>

0000000000001c1c <print_entry_point_info>:
    1c1c:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
    1c20:	910003fd 	mov	x29, sp
    1c24:	f9000bf3 	str	x19, [sp, #16]
    1c28:	aa0003f3 	mov	x19, x0
    1c2c:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    1c30:	912cc800 	add	x0, x0, #0xb32
    1c34:	f9400661 	ldr	x1, [x19, #8]
    1c38:	94000007 	bl	1c54 <tf_log>
    1c3c:	b9401261 	ldr	w1, [x19, #16]
    1c40:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    1c44:	912d4000 	add	x0, x0, #0xb50
    1c48:	f9400bf3 	ldr	x19, [sp, #16]
    1c4c:	a8c27bfd 	ldp	x29, x30, [sp], #32
    1c50:	14000001 	b	1c54 <tf_log>

0000000000001c54 <tf_log>:
    1c54:	a9b67bfd 	stp	x29, x30, [sp, #-160]!
    1c58:	910003fd 	mov	x29, sp
    1c5c:	a90153f3 	stp	x19, x20, [sp, #16]
    1c60:	aa0003f4 	mov	x20, x0
    1c64:	a9068be1 	stp	x1, x2, [sp, #104]
    1c68:	a90793e3 	stp	x3, x4, [sp, #120]
    1c6c:	a9089be5 	stp	x5, x6, [sp, #136]
    1c70:	f9004fe7 	str	x7, [sp, #152]
    1c74:	39400000 	ldrb	w0, [x0]
    1c78:	51000401 	sub	w1, w0, #0x1
    1c7c:	7100c43f 	cmp	w1, #0x31
    1c80:	540000a9 	b.ls	1c94 <tf_log+0x40>  // b.plast
    1c84:	52800441 	mov	w1, #0x22                  	// #34
    1c88:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    1c8c:	912d7800 	add	x0, x0, #0xb5e
    1c90:	94000745 	bl	39a4 <__assert>
    1c94:	52800142 	mov	w2, #0xa                   	// #10
    1c98:	1ac20801 	udiv	w1, w0, w2
    1c9c:	1b028021 	msub	w1, w1, w2, w0
    1ca0:	34000061 	cbz	w1, 1cac <tf_log+0x58>
    1ca4:	52800461 	mov	w1, #0x23                  	// #35
    1ca8:	17fffff8 	b	1c88 <tf_log+0x34>
    1cac:	b0080761 	adrp	x1, 100ee000 <__BL1_RAM_START__>
    1cb0:	b9408021 	ldr	w1, [x1, #128]
    1cb4:	6b00003f 	cmp	w1, w0
    1cb8:	54000263 	b.cc	1d04 <tf_log+0xb0>  // b.lo, b.ul, b.last
    1cbc:	9400009a 	bl	1f24 <plat_log_get_prefix>
    1cc0:	aa0003f3 	mov	x19, x0
    1cc4:	39400260 	ldrb	w0, [x19]
    1cc8:	35000240 	cbnz	w0, 1d10 <tf_log+0xbc>
    1ccc:	910283e0 	add	x0, sp, #0xa0
    1cd0:	a90403e0 	stp	x0, x0, [sp, #64]
    1cd4:	910183e0 	add	x0, sp, #0x60
    1cd8:	f9002be0 	str	x0, [sp, #80]
    1cdc:	128006e0 	mov	w0, #0xffffffc8            	// #-56
    1ce0:	b9005be0 	str	w0, [sp, #88]
    1ce4:	b9005fff 	str	wzr, [sp, #92]
    1ce8:	a94407e0 	ldp	x0, x1, [sp, #64]
    1cec:	a90207e0 	stp	x0, x1, [sp, #32]
    1cf0:	a94507e0 	ldp	x0, x1, [sp, #80]
    1cf4:	a90307e0 	stp	x0, x1, [sp, #48]
    1cf8:	910083e1 	add	x1, sp, #0x20
    1cfc:	91000680 	add	x0, x20, #0x1
    1d00:	9400078b 	bl	3b2c <vprintf>
    1d04:	a94153f3 	ldp	x19, x20, [sp, #16]
    1d08:	a8ca7bfd 	ldp	x29, x30, [sp], #160
    1d0c:	d65f03c0 	ret
    1d10:	91000673 	add	x19, x19, #0x1
    1d14:	9400089b 	bl	3f80 <putchar>
    1d18:	17ffffeb 	b	1cc4 <tf_log+0x70>

0000000000001d1c <console_is_registered>:
    1d1c:	b50000e0 	cbnz	x0, 1d38 <console_is_registered+0x1c>
    1d20:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
    1d24:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    1d28:	912db800 	add	x0, x0, #0xb6e
    1d2c:	910003fd 	mov	x29, sp
    1d30:	52800681 	mov	w1, #0x34                  	// #52
    1d34:	9400071c 	bl	39a4 <__assert>
    1d38:	b0080781 	adrp	x1, 100f2000 <platform_normal_stacks+0x3f00>
    1d3c:	f944c421 	ldr	x1, [x1, #2440]
    1d40:	b5000061 	cbnz	x1, 1d4c <console_is_registered+0x30>
    1d44:	52800000 	mov	w0, #0x0                   	// #0
    1d48:	d65f03c0 	ret
    1d4c:	eb00003f 	cmp	x1, x0
    1d50:	54000060 	b.eq	1d5c <console_is_registered+0x40>  // b.none
    1d54:	f9400021 	ldr	x1, [x1]
    1d58:	17fffffa 	b	1d40 <console_is_registered+0x24>
    1d5c:	52800020 	mov	w0, #0x1                   	// #1
    1d60:	d65f03c0 	ret

0000000000001d64 <console_register>:
    1d64:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
    1d68:	910003fd 	mov	x29, sp
    1d6c:	f9000bf3 	str	x19, [sp, #16]
    1d70:	aa0003f3 	mov	x19, x0
    1d74:	b0080760 	adrp	x0, 100ee000 <__BL1_RAM_START__>
    1d78:	9103a000 	add	x0, x0, #0xe8
    1d7c:	eb00027f 	cmp	x19, x0
    1d80:	54000123 	b.cc	1da4 <console_register+0x40>  // b.lo, b.ul, b.last
    1d84:	b0080780 	adrp	x0, 100f2000 <platform_normal_stacks+0x3f00>
    1d88:	91040000 	add	x0, x0, #0x100
    1d8c:	eb00027f 	cmp	x19, x0
    1d90:	540000a2 	b.cs	1da4 <console_register+0x40>  // b.hs, b.nlast
    1d94:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    1d98:	912db800 	add	x0, x0, #0xb6e
    1d9c:	52800281 	mov	w1, #0x14                  	// #20
    1da0:	94000701 	bl	39a4 <__assert>
    1da4:	aa1303e0 	mov	x0, x19
    1da8:	97ffffdd 	bl	1d1c <console_is_registered>
    1dac:	7100041f 	cmp	w0, #0x1
    1db0:	540000a0 	b.eq	1dc4 <console_register+0x60>  // b.none
    1db4:	b0080780 	adrp	x0, 100f2000 <platform_normal_stacks+0x3f00>
    1db8:	f944c401 	ldr	x1, [x0, #2440]
    1dbc:	f9000261 	str	x1, [x19]
    1dc0:	f904c413 	str	x19, [x0, #2440]
    1dc4:	52800020 	mov	w0, #0x1                   	// #1
    1dc8:	f9400bf3 	ldr	x19, [sp, #16]
    1dcc:	a8c27bfd 	ldp	x29, x30, [sp], #32
    1dd0:	d65f03c0 	ret

0000000000001dd4 <console_set_scope>:
    1dd4:	b50000e0 	cbnz	x0, 1df0 <console_set_scope+0x1c>
    1dd8:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
    1ddc:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    1de0:	912db800 	add	x0, x0, #0xb6e
    1de4:	910003fd 	mov	x29, sp
    1de8:	52800881 	mov	w1, #0x44                  	// #68
    1dec:	940006ee 	bl	39a4 <__assert>
    1df0:	f9400402 	ldr	x2, [x0, #8]
    1df4:	2a0103e1 	mov	w1, w1
    1df8:	92785c42 	and	x2, x2, #0xffffff00
    1dfc:	aa010041 	orr	x1, x2, x1
    1e00:	f9000401 	str	x1, [x0, #8]
    1e04:	d65f03c0 	ret

0000000000001e08 <console_putc>:
    1e08:	a9bd7bfd 	stp	x29, x30, [sp, #-48]!
    1e0c:	910003fd 	mov	x29, sp
    1e10:	a90153f3 	stp	x19, x20, [sp, #16]
    1e14:	12800ff4 	mov	w20, #0xffffff80            	// #-128
    1e18:	a9025bf5 	stp	x21, x22, [sp, #32]
    1e1c:	2a0003f5 	mov	w21, w0
    1e20:	b0080780 	adrp	x0, 100f2000 <platform_normal_stacks+0x3f00>
    1e24:	f944c413 	ldr	x19, [x0, #2440]
    1e28:	b0080776 	adrp	x22, 100ee000 <__BL1_RAM_START__>
    1e2c:	910212d6 	add	x22, x22, #0x84
    1e30:	b50000d3 	cbnz	x19, 1e48 <console_putc+0x40>
    1e34:	2a1403e0 	mov	w0, w20
    1e38:	a94153f3 	ldp	x19, x20, [sp, #16]
    1e3c:	a9425bf5 	ldp	x21, x22, [sp, #32]
    1e40:	a8c37bfd 	ldp	x29, x30, [sp], #48
    1e44:	d65f03c0 	ret
    1e48:	f9400660 	ldr	x0, [x19, #8]
    1e4c:	394002c1 	ldrb	w1, [x22]
    1e50:	ea00003f 	tst	x1, x0
    1e54:	54000180 	b.eq	1e84 <console_putc+0x7c>  // b.none
    1e58:	f9400a62 	ldr	x2, [x19, #16]
    1e5c:	b4000142 	cbz	x2, 1e84 <console_putc+0x7c>
    1e60:	71002abf 	cmp	w21, #0xa
    1e64:	54000140 	b.eq	1e8c <console_putc+0x84>  // b.none
    1e68:	f9400a62 	ldr	x2, [x19, #16]
    1e6c:	aa1303e1 	mov	x1, x19
    1e70:	2a1503e0 	mov	w0, w21
    1e74:	d63f0040 	blr	x2
    1e78:	3102029f 	cmn	w20, #0x80
    1e7c:	7a401280 	ccmp	w20, w0, #0x0, ne  // ne = any
    1e80:	1a80d294 	csel	w20, w20, w0, le
    1e84:	f9400273 	ldr	x19, [x19]
    1e88:	17ffffea 	b	1e30 <console_putc+0x28>
    1e8c:	3647fee0 	tbz	w0, #8, 1e68 <console_putc+0x60>
    1e90:	aa1303e1 	mov	x1, x19
    1e94:	528001a0 	mov	w0, #0xd                   	// #13
    1e98:	d63f0040 	blr	x2
    1e9c:	36fffe60 	tbz	w0, #31, 1e68 <console_putc+0x60>
    1ea0:	17fffff6 	b	1e78 <console_putc+0x70>

0000000000001ea4 <console_flush>:
    1ea4:	a9bd7bfd 	stp	x29, x30, [sp, #-48]!
    1ea8:	910003fd 	mov	x29, sp
    1eac:	a90153f3 	stp	x19, x20, [sp, #16]
    1eb0:	b0080780 	adrp	x0, 100f2000 <platform_normal_stacks+0x3f00>
    1eb4:	f944c413 	ldr	x19, [x0, #2440]
    1eb8:	f90013f5 	str	x21, [sp, #32]
    1ebc:	b0080775 	adrp	x21, 100ee000 <__BL1_RAM_START__>
    1ec0:	910212b5 	add	x21, x21, #0x84
    1ec4:	12800ff4 	mov	w20, #0xffffff80            	// #-128
    1ec8:	b50000d3 	cbnz	x19, 1ee0 <console_flush+0x3c>
    1ecc:	2a1403e0 	mov	w0, w20
    1ed0:	a94153f3 	ldp	x19, x20, [sp, #16]
    1ed4:	f94013f5 	ldr	x21, [sp, #32]
    1ed8:	a8c37bfd 	ldp	x29, x30, [sp], #48
    1edc:	d65f03c0 	ret
    1ee0:	f9400660 	ldr	x0, [x19, #8]
    1ee4:	394002a1 	ldrb	w1, [x21]
    1ee8:	ea00003f 	tst	x1, x0
    1eec:	54000100 	b.eq	1f0c <console_flush+0x68>  // b.none
    1ef0:	f9401261 	ldr	x1, [x19, #32]
    1ef4:	b40000c1 	cbz	x1, 1f0c <console_flush+0x68>
    1ef8:	aa1303e0 	mov	x0, x19
    1efc:	d63f0020 	blr	x1
    1f00:	3102029f 	cmn	w20, #0x80
    1f04:	7a401280 	ccmp	w20, w0, #0x0, ne  // ne = any
    1f08:	1a80d294 	csel	w20, w20, w0, le
    1f0c:	f9400273 	ldr	x19, [x19]
    1f10:	17ffffee 	b	1ec8 <console_flush+0x24>

0000000000001f14 <plat_error_handler>:
    1f14:	d503207f 	wfi
    1f18:	17ffffff 	b	1f14 <plat_error_handler>

0000000000001f1c <plat_try_next_boot_source>:
    1f1c:	52800000 	mov	w0, #0x0                   	// #0
    1f20:	d65f03c0 	ret

0000000000001f24 <plat_log_get_prefix>:
    1f24:	7100c81f 	cmp	w0, #0x32
    1f28:	52800641 	mov	w1, #0x32                  	// #50
    1f2c:	1a819000 	csel	w0, w0, w1, ls  // ls = plast
    1f30:	52800141 	mov	w1, #0xa                   	// #10
    1f34:	6b01001f 	cmp	w0, w1
    1f38:	1a812000 	csel	w0, w0, w1, cs  // cs = hs, nlast
    1f3c:	1ac10800 	udiv	w0, w0, w1
    1f40:	90000021 	adrp	x1, 5000 <__TEXT_END__>
    1f44:	912f0021 	add	x1, x1, #0xbc0
    1f48:	51000400 	sub	w0, w0, #0x1
    1f4c:	f8607820 	ldr	x0, [x1, x0, lsl #3]
    1f50:	d65f03c0 	ret

0000000000001f54 <is_address_readable>:
    1f54:	d5384241 	mrs	x1, currentel
    1f58:	53020c21 	ubfx	w1, w1, #2, #2
    1f5c:	71000c3f 	cmp	w1, #0x3
    1f60:	540000e1 	b.ne	1f7c <is_address_readable+0x28>  // b.any
    1f64:	d50e7800 	at	s1e3r, x0
    1f68:	d5033fdf 	isb
    1f6c:	d5387400 	mrs	x0, par_el1
    1f70:	aa2003e0 	mvn	x0, x0
    1f74:	12000000 	and	w0, w0, #0x1
    1f78:	d65f03c0 	ret
    1f7c:	7100083f 	cmp	w1, #0x2
    1f80:	54000061 	b.ne	1f8c <is_address_readable+0x38>  // b.any
    1f84:	d50c7800 	at	s1e2r, x0
    1f88:	17fffff8 	b	1f68 <is_address_readable+0x14>
    1f8c:	d5087800 	at	s1e1r, x0
    1f90:	17fffff6 	b	1f68 <is_address_readable+0x14>

0000000000001f94 <is_valid_object.constprop.0>:
    1f94:	aa0003e2 	mov	x2, x0
    1f98:	d1000400 	sub	x0, x0, #0x1
    1f9c:	b100481f 	cmn	x0, #0x12
    1fa0:	54000208 	b.hi	1fe0 <is_valid_object.constprop.0+0x4c>  // b.pmore
    1fa4:	f2400843 	ands	x3, x2, #0x7
    1fa8:	540001c1 	b.ne	1fe0 <is_valid_object.constprop.0+0x4c>  // b.any
    1fac:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
    1fb0:	910003fd 	mov	x29, sp
    1fb4:	8b030040 	add	x0, x2, x3
    1fb8:	97ffffe7 	bl	1f54 <is_address_readable>
    1fbc:	72001c00 	ands	w0, w0, #0xff
    1fc0:	540000c0 	b.eq	1fd8 <is_valid_object.constprop.0+0x44>  // b.none
    1fc4:	91000463 	add	x3, x3, #0x1
    1fc8:	f100407f 	cmp	x3, #0x10
    1fcc:	54ffff41 	b.ne	1fb4 <is_valid_object.constprop.0+0x20>  // b.any
    1fd0:	a8c17bfd 	ldp	x29, x30, [sp], #16
    1fd4:	d65f03c0 	ret
    1fd8:	52800000 	mov	w0, #0x0                   	// #0
    1fdc:	17fffffd 	b	1fd0 <is_valid_object.constprop.0+0x3c>
    1fe0:	52800000 	mov	w0, #0x0                   	// #0
    1fe4:	d65f03c0 	ret

0000000000001fe8 <backtrace>:
    1fe8:	a9bc7bfd 	stp	x29, x30, [sp, #-64]!
    1fec:	910003fd 	mov	x29, sp
    1ff0:	a90153f3 	stp	x19, x20, [sp, #16]
    1ff4:	aa1d03f4 	mov	x20, x29
    1ff8:	a9025bf5 	stp	x21, x22, [sp, #32]
    1ffc:	aa1e03f6 	mov	x22, x30
    2000:	aa0003f5 	mov	x21, x0
    2004:	f9001bf7 	str	x23, [sp, #48]
    2008:	97ffffa7 	bl	1ea4 <console_flush>
    200c:	aa1503e1 	mov	x1, x21
    2010:	f0000000 	adrp	x0, 5000 <__TEXT_END__>
    2014:	912fd800 	add	x0, x0, #0xbf6
    2018:	940007c5 	bl	3f2c <printf>
    201c:	d5384240 	mrs	x0, currentel
    2020:	53020c00 	ubfx	w0, w0, #2, #2
    2024:	71000c1f 	cmp	w0, #0x3
    2028:	540002e0 	b.eq	2084 <backtrace+0x9c>  // b.none
    202c:	f0000013 	adrp	x19, 5000 <__TEXT_END__>
    2030:	7100081f 	cmp	w0, #0x2
    2034:	f0000001 	adrp	x1, 5000 <__TEXT_END__>
    2038:	912fc260 	add	x0, x19, #0xbf0
    203c:	912fb033 	add	x19, x1, #0xbec
    2040:	9a800273 	csel	x19, x19, x0, eq  // eq = none
    2044:	aa1403e0 	mov	x0, x20
    2048:	97ffffd3 	bl	1f94 <is_valid_object.constprop.0>
    204c:	72001c1f 	tst	w0, #0xff
    2050:	54000201 	b.ne	2090 <backtrace+0xa8>  // b.any
    2054:	f0000000 	adrp	x0, 5000 <__TEXT_END__>
    2058:	91303000 	add	x0, x0, #0xc0c
    205c:	aa1403e1 	mov	x1, x20
    2060:	940007b3 	bl	3f2c <printf>
    2064:	aa1503e1 	mov	x1, x21
    2068:	f0000000 	adrp	x0, 5000 <__TEXT_END__>
    206c:	9132bc00 	add	x0, x0, #0xcaf
    2070:	a94153f3 	ldp	x19, x20, [sp, #16]
    2074:	a9425bf5 	ldp	x21, x22, [sp, #32]
    2078:	f9401bf7 	ldr	x23, [sp, #48]
    207c:	a8c47bfd 	ldp	x29, x30, [sp], #64
    2080:	140007ab 	b	3f2c <printf>
    2084:	f0000013 	adrp	x19, 5000 <__TEXT_END__>
    2088:	912fa273 	add	x19, x19, #0xbe8
    208c:	17ffffee 	b	2044 <backtrace+0x5c>
    2090:	f9400680 	ldr	x0, [x20, #8]
    2094:	eb0002df 	cmp	x22, x0
    2098:	540000a0 	b.eq	20ac <backtrace+0xc4>  // b.none
    209c:	f0000000 	adrp	x0, 5000 <__TEXT_END__>
    20a0:	91312000 	add	x0, x0, #0xc48
    20a4:	aa1403e1 	mov	x1, x20
    20a8:	17ffffee 	b	2060 <backtrace+0x78>
    20ac:	52800036 	mov	w22, #0x1                   	// #1
    20b0:	f0000017 	adrp	x23, 5000 <__TEXT_END__>
    20b4:	9131f2f7 	add	x23, x23, #0xc7c
    20b8:	aa1303e2 	mov	x2, x19
    20bc:	aa1703e0 	mov	x0, x23
    20c0:	f0ffffe3 	adrp	x3, 1000 <open_memmap+0x58>
    20c4:	913fa063 	add	x3, x3, #0xfe8
    20c8:	52800001 	mov	w1, #0x0                   	// #0
    20cc:	94000798 	bl	3f2c <printf>
    20d0:	aa1403e0 	mov	x0, x20
    20d4:	97ffffb0 	bl	1f94 <is_valid_object.constprop.0>
    20d8:	72001c1f 	tst	w0, #0xff
    20dc:	54fffc40 	b.eq	2064 <backtrace+0x7c>  // b.none
    20e0:	f9400683 	ldr	x3, [x20, #8]
    20e4:	f1001063 	subs	x3, x3, #0x4
    20e8:	54fffbe0 	b.eq	2064 <backtrace+0x7c>  // b.none
    20ec:	f240047f 	tst	x3, #0x3
    20f0:	54fffba1 	b.ne	2064 <backtrace+0x7c>  // b.any
    20f4:	aa0303e0 	mov	x0, x3
    20f8:	97ffff97 	bl	1f54 <is_address_readable>
    20fc:	72001c1f 	tst	w0, #0xff
    2100:	54fffb20 	b.eq	2064 <backtrace+0x7c>  // b.none
    2104:	2a1603e1 	mov	w1, w22
    2108:	aa1303e2 	mov	x2, x19
    210c:	aa1703e0 	mov	x0, x23
    2110:	110006d6 	add	w22, w22, #0x1
    2114:	94000786 	bl	3f2c <printf>
    2118:	710052df 	cmp	w22, #0x14
    211c:	f9400294 	ldr	x20, [x20]
    2120:	54fffd81 	b.ne	20d0 <backtrace+0xe8>  // b.any
    2124:	f0000000 	adrp	x0, 5000 <__TEXT_END__>
    2128:	91322c00 	add	x0, x0, #0xc8b
    212c:	94000780 	bl	3f2c <printf>
    2130:	17ffffcd 	b	2064 <backtrace+0x7c>

0000000000002134 <rpi3_console_init>:
    2134:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
    2138:	2a0003e1 	mov	w1, w0
    213c:	52984002 	mov	w2, #0xc200                	// #49664
    2140:	72a00022 	movk	w2, #0x1, lsl #16
    2144:	910003fd 	mov	x29, sp
    2148:	d28a0800 	mov	x0, #0x5040                	// #20544
    214c:	f2a7e420 	movk	x0, #0x3f21, lsl #16
    2150:	f9000bf3 	str	x19, [sp, #16]
    2154:	90080793 	adrp	x19, 100f2000 <platform_normal_stacks+0x3f00>
    2158:	911f4273 	add	x19, x19, #0x7d0
    215c:	aa1303e3 	mov	x3, x19
    2160:	940005a2 	bl	37e8 <console_16550_register>
    2164:	350000c0 	cbnz	w0, 217c <rpi3_console_init+0x48>
    2168:	f0000000 	adrp	x0, 5000 <__TEXT_END__>
    216c:	91330c00 	add	x0, x0, #0xcc3
    2170:	97ffff9e 	bl	1fe8 <backtrace>
    2174:	97ffff4c 	bl	1ea4 <console_flush>
    2178:	940004de 	bl	34f0 <do_panic>
    217c:	aa1303e0 	mov	x0, x19
    2180:	52800021 	mov	w1, #0x1                   	// #1
    2184:	f9400bf3 	ldr	x19, [sp, #16]
    2188:	a8c27bfd 	ldp	x29, x30, [sp], #32
    218c:	17ffff12 	b	1dd4 <console_set_scope>

0000000000002190 <rpi3_setup_page_tables>:
    2190:	a9bc7bfd 	stp	x29, x30, [sp, #-64]!
    2194:	910003fd 	mov	x29, sp
    2198:	a90153f3 	stp	x19, x20, [sp, #16]
    219c:	aa0403f4 	mov	x20, x4
    21a0:	aa0603f3 	mov	x19, x6
    21a4:	a9025bf5 	stp	x21, x22, [sp, #32]
    21a8:	aa0703f6 	mov	x22, x7
    21ac:	aa0203f5 	mov	x21, x2
    21b0:	aa0103e2 	mov	x2, x1
    21b4:	aa0003e1 	mov	x1, x0
    21b8:	a90363f7 	stp	x23, x24, [sp, #48]
    21bc:	aa0503f7 	mov	x23, x5
    21c0:	aa0303f8 	mov	x24, x3
    21c4:	52800143 	mov	w3, #0xa                   	// #10
    21c8:	940000d6 	bl	2520 <mmap_add_region>
    21cc:	cb150302 	sub	x2, x24, x21
    21d0:	aa1503e1 	mov	x1, x21
    21d4:	aa1503e0 	mov	x0, x21
    21d8:	52800043 	mov	w3, #0x2                   	// #2
    21dc:	940000d1 	bl	2520 <mmap_add_region>
    21e0:	cb1402e2 	sub	x2, x23, x20
    21e4:	aa1403e1 	mov	x1, x20
    21e8:	aa1403e0 	mov	x0, x20
    21ec:	52800443 	mov	w3, #0x22                  	// #34
    21f0:	940000cc 	bl	2520 <mmap_add_region>
    21f4:	cb1302c2 	sub	x2, x22, x19
    21f8:	aa1303e1 	mov	x1, x19
    21fc:	52800103 	mov	w3, #0x8                   	// #8
    2200:	aa1303e0 	mov	x0, x19
    2204:	940000c7 	bl	2520 <mmap_add_region>
    2208:	f0000000 	adrp	x0, 5000 <__TEXT_END__>
    220c:	91336000 	add	x0, x0, #0xcd8
    2210:	940000d1 	bl	2554 <mmap_add>
    2214:	a94153f3 	ldp	x19, x20, [sp, #16]
    2218:	a9425bf5 	ldp	x21, x22, [sp, #32]
    221c:	a94363f7 	ldp	x23, x24, [sp, #48]
    2220:	a8c47bfd 	ldp	x29, x30, [sp], #64
    2224:	140000d0 	b	2564 <init_xlat_tables>

0000000000002228 <tcr_physical_addr_size_bits>:
    2228:	f2503c1f 	tst	x0, #0xffff000000000000
    222c:	540000e0 	b.eq	2248 <tcr_physical_addr_size_bits+0x20>  // b.none
    2230:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
    2234:	f0000000 	adrp	x0, 5000 <__TEXT_END__>
    2238:	91368000 	add	x0, x0, #0xda0
    223c:	910003fd 	mov	x29, sp
    2240:	52800761 	mov	w1, #0x3b                  	// #59
    2244:	940005d8 	bl	39a4 <__assert>
    2248:	f2540c1f 	tst	x0, #0xf00000000000
    224c:	54000141 	b.ne	2274 <tcr_physical_addr_size_bits+0x4c>  // b.any
    2250:	f256041f 	tst	x0, #0xc0000000000
    2254:	54000141 	b.ne	227c <tcr_physical_addr_size_bits+0x54>  // b.any
    2258:	f258041f 	tst	x0, #0x30000000000
    225c:	54000141 	b.ne	2284 <tcr_physical_addr_size_bits+0x5c>  // b.any
    2260:	f25c0c1f 	tst	x0, #0xf000000000
    2264:	54000141 	b.ne	228c <tcr_physical_addr_size_bits+0x64>  // b.any
    2268:	f2600c1f 	tst	x0, #0xf00000000
    226c:	9a9f07e0 	cset	x0, ne  // ne = any
    2270:	d65f03c0 	ret
    2274:	d28000a0 	mov	x0, #0x5                   	// #5
    2278:	d65f03c0 	ret
    227c:	d2800080 	mov	x0, #0x4                   	// #4
    2280:	d65f03c0 	ret
    2284:	d2800060 	mov	x0, #0x3                   	// #3
    2288:	d65f03c0 	ret
    228c:	d2800040 	mov	x0, #0x2                   	// #2
    2290:	d65f03c0 	ret

0000000000002294 <xlat_arch_get_max_supported_pa>:
    2294:	d5380700 	mrs	x0, id_aa64mmfr0_el1
    2298:	92400c00 	and	x0, x0, #0xf
    229c:	f100181f 	cmp	x0, #0x6
    22a0:	540000e9 	b.ls	22bc <xlat_arch_get_max_supported_pa+0x28>  // b.plast
    22a4:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
    22a8:	f0000000 	adrp	x0, 5000 <__TEXT_END__>
    22ac:	91368000 	add	x0, x0, #0xda0
    22b0:	910003fd 	mov	x29, sp
    22b4:	52800c81 	mov	w1, #0x64                  	// #100
    22b8:	940005bb 	bl	39a4 <__assert>
    22bc:	f0000001 	adrp	x1, 5000 <__TEXT_END__>
    22c0:	91374021 	add	x1, x1, #0xdd0
    22c4:	b8607821 	ldr	w1, [x1, x0, lsl #2]
    22c8:	d2800020 	mov	x0, #0x1                   	// #1
    22cc:	9ac12000 	lsl	x0, x0, x1
    22d0:	d1000400 	sub	x0, x0, #0x1
    22d4:	d65f03c0 	ret

00000000000022d8 <xlat_get_min_virt_addr_space_size>:
    22d8:	d5380740 	mrs	x0, id_aa64mmfr2_el1
    22dc:	531c7c00 	lsr	w0, w0, #28
    22e0:	d2a00021 	mov	x1, #0x10000               	// #65536
    22e4:	f100041f 	cmp	x0, #0x1
    22e8:	d2a04000 	mov	x0, #0x2000000             	// #33554432
    22ec:	9a800020 	csel	x0, x1, x0, eq  // eq = none
    22f0:	d65f03c0 	ret

00000000000022f4 <is_dcache_enabled>:
    22f4:	d5384240 	mrs	x0, currentel
    22f8:	53020c00 	ubfx	w0, w0, #2, #2
    22fc:	7100041f 	cmp	w0, #0x1
    2300:	54000081 	b.ne	2310 <is_dcache_enabled+0x1c>  // b.any
    2304:	d5381000 	mrs	x0, sctlr_el1
    2308:	53020800 	ubfx	w0, w0, #2, #1
    230c:	d65f03c0 	ret
    2310:	7100081f 	cmp	w0, #0x2
    2314:	54000061 	b.ne	2320 <is_dcache_enabled+0x2c>  // b.any
    2318:	d53c1000 	mrs	x0, sctlr_el2
    231c:	17fffffb 	b	2308 <is_dcache_enabled+0x14>
    2320:	d53e1000 	mrs	x0, sctlr_el3
    2324:	17fffff9 	b	2308 <is_dcache_enabled+0x14>

0000000000002328 <xlat_arch_regime_get_xn_desc>:
    2328:	7100041f 	cmp	w0, #0x1
    232c:	54000160 	b.eq	2358 <xlat_arch_regime_get_xn_desc+0x30>  // b.none
    2330:	51000801 	sub	w1, w0, #0x2
    2334:	d2e00800 	mov	x0, #0x40000000000000      	// #18014398509481984
    2338:	7100043f 	cmp	w1, #0x1
    233c:	54000109 	b.ls	235c <xlat_arch_regime_get_xn_desc+0x34>  // b.plast
    2340:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
    2344:	f0000000 	adrp	x0, 5000 <__TEXT_END__>
    2348:	91368000 	add	x0, x0, #0xda0
    234c:	910003fd 	mov	x29, sp
    2350:	52801341 	mov	w1, #0x9a                  	// #154
    2354:	94000594 	bl	39a4 <__assert>
    2358:	d2e00c00 	mov	x0, #0x60000000000000      	// #27021597764222976
    235c:	d65f03c0 	ret

0000000000002360 <xlat_arch_current_el>:
    2360:	d5384241 	mrs	x1, currentel
    2364:	53020c20 	ubfx	w0, w1, #2, #2
    2368:	721e043f 	tst	w1, #0xc
    236c:	540000e1 	b.ne	2388 <xlat_arch_current_el+0x28>  // b.any
    2370:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
    2374:	f0000000 	adrp	x0, 5000 <__TEXT_END__>
    2378:	91368000 	add	x0, x0, #0xda0
    237c:	910003fd 	mov	x29, sp
    2380:	52801ae1 	mov	w1, #0xd7                  	// #215
    2384:	94000588 	bl	39a4 <__assert>
    2388:	d65f03c0 	ret

000000000000238c <is_mmu_enabled_ctx>:
    238c:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
    2390:	910003fd 	mov	x29, sp
    2394:	b9405800 	ldr	w0, [x0, #88]
    2398:	7100041f 	cmp	w0, #0x1
    239c:	54000161 	b.ne	23c8 <is_mmu_enabled_ctx+0x3c>  // b.any
    23a0:	97fffff0 	bl	2360 <xlat_arch_current_el>
    23a4:	350000a0 	cbnz	w0, 23b8 <is_mmu_enabled_ctx+0x2c>
    23a8:	52800f81 	mov	w1, #0x7c                  	// #124
    23ac:	f0000000 	adrp	x0, 5000 <__TEXT_END__>
    23b0:	91368000 	add	x0, x0, #0xda0
    23b4:	9400057c 	bl	39a4 <__assert>
    23b8:	d5381000 	mrs	x0, sctlr_el1
    23bc:	12000000 	and	w0, w0, #0x1
    23c0:	a8c17bfd 	ldp	x29, x30, [sp], #16
    23c4:	d65f03c0 	ret
    23c8:	7100081f 	cmp	w0, #0x2
    23cc:	54000101 	b.ne	23ec <is_mmu_enabled_ctx+0x60>  // b.any
    23d0:	97ffffe4 	bl	2360 <xlat_arch_current_el>
    23d4:	7100041f 	cmp	w0, #0x1
    23d8:	54000068 	b.hi	23e4 <is_mmu_enabled_ctx+0x58>  // b.pmore
    23dc:	52800fe1 	mov	w1, #0x7f                  	// #127
    23e0:	17fffff3 	b	23ac <is_mmu_enabled_ctx+0x20>
    23e4:	d53c1000 	mrs	x0, sctlr_el2
    23e8:	17fffff5 	b	23bc <is_mmu_enabled_ctx+0x30>
    23ec:	71000c1f 	cmp	w0, #0x3
    23f0:	54000060 	b.eq	23fc <is_mmu_enabled_ctx+0x70>  // b.none
    23f4:	52801041 	mov	w1, #0x82                  	// #130
    23f8:	17ffffed 	b	23ac <is_mmu_enabled_ctx+0x20>
    23fc:	97ffffd9 	bl	2360 <xlat_arch_current_el>
    2400:	7100081f 	cmp	w0, #0x2
    2404:	54000068 	b.hi	2410 <is_mmu_enabled_ctx+0x84>  // b.pmore
    2408:	52801061 	mov	w1, #0x83                  	// #131
    240c:	17ffffe8 	b	23ac <is_mmu_enabled_ctx+0x20>
    2410:	d53e1000 	mrs	x0, sctlr_el3
    2414:	17ffffea 	b	23bc <is_mmu_enabled_ctx+0x30>

0000000000002418 <setup_mmu_cfg>:
    2418:	a9bd7bfd 	stp	x29, x30, [sp, #-48]!
    241c:	b100049f 	cmn	x4, #0x1
    2420:	910003fd 	mov	x29, sp
    2424:	a90153f3 	stp	x19, x20, [sp, #16]
    2428:	a9025bf5 	stp	x21, x22, [sp, #32]
    242c:	540000a1 	b.ne	2440 <setup_mmu_cfg+0x28>  // b.any
    2430:	52801d81 	mov	w1, #0xec                  	// #236
    2434:	f0000000 	adrp	x0, 5000 <__TEXT_END__>
    2438:	91368000 	add	x0, x0, #0xda0
    243c:	9400055a 	bl	39a4 <__assert>
    2440:	2a0103e6 	mov	w6, w1
    2444:	91000493 	add	x19, x4, #0x1
    2448:	aa0003f5 	mov	x21, x0
    244c:	97ffffa3 	bl	22d8 <xlat_get_min_virt_addr_space_size>
    2450:	eb13001f 	cmp	x0, x19
    2454:	54000069 	b.ls	2460 <setup_mmu_cfg+0x48>  // b.plast
    2458:	52801e01 	mov	w1, #0xf0                  	// #240
    245c:	17fffff6 	b	2434 <setup_mmu_cfg+0x1c>
    2460:	d2e00020 	mov	x0, #0x1000000000000       	// #281474976710656
    2464:	eb00027f 	cmp	x19, x0
    2468:	54000069 	b.ls	2474 <setup_mmu_cfg+0x5c>  // b.plast
    246c:	52801e41 	mov	w1, #0xf2                  	// #242
    2470:	17fffff1 	b	2434 <setup_mmu_cfg+0x1c>
    2474:	ea13009f 	tst	x4, x19
    2478:	54000060 	b.eq	2484 <setup_mmu_cfg+0x6c>  // b.none
    247c:	52801e61 	mov	w1, #0xf3                  	// #243
    2480:	17ffffed 	b	2434 <setup_mmu_cfg+0x1c>
    2484:	dac00261 	rbit	x1, x19
    2488:	aa0203f4 	mov	x20, x2
    248c:	dac01021 	clz	x1, x1
    2490:	52800813 	mov	w19, #0x40                  	// #64
    2494:	2a0503f6 	mov	w22, w5
    2498:	4b010261 	sub	w1, w19, w1
    249c:	37080066 	tbnz	w6, #1, 24a8 <setup_mmu_cfg+0x90>
    24a0:	5286a000 	mov	w0, #0x3500                	// #13568
    24a4:	2a000021 	orr	w1, w1, w0
    24a8:	93407c33 	sxtw	x19, w1
    24ac:	aa0303e0 	mov	x0, x3
    24b0:	97ffff5e 	bl	2228 <tcr_physical_addr_size_bits>
    24b4:	710006df 	cmp	w22, #0x1
    24b8:	540001e1 	b.ne	24f4 <setup_mmu_cfg+0xdc>  // b.any
    24bc:	aa008261 	orr	x1, x19, x0, lsl #32
    24c0:	b2690021 	orr	x1, x1, #0x800000
    24c4:	d5380740 	mrs	x0, id_aa64mmfr2_el1
    24c8:	f2400c1f 	tst	x0, #0xf
    24cc:	54000040 	b.eq	24d4 <setup_mmu_cfg+0xbc>  // b.none
    24d0:	b2400294 	orr	x20, x20, #0x1
    24d4:	d2809fe0 	mov	x0, #0x4ff                 	// #1279
    24d8:	f2a00880 	movk	x0, #0x44, lsl #16
    24dc:	a90006a0 	stp	x0, x1, [x21]
    24e0:	f9000ab4 	str	x20, [x21, #16]
    24e4:	a94153f3 	ldp	x19, x20, [sp, #16]
    24e8:	a9425bf5 	ldp	x21, x22, [sp, #32]
    24ec:	a8c37bfd 	ldp	x29, x30, [sp], #48
    24f0:	d65f03c0 	ret
    24f4:	71000adf 	cmp	w22, #0x2
    24f8:	d370bc01 	lsl	x1, x0, #16
    24fc:	540000a1 	b.ne	2510 <setup_mmu_cfg+0xf8>  // b.any
    2500:	aa130021 	orr	x1, x1, x19
    2504:	d2b01000 	mov	x0, #0x80800000            	// #2155872256
    2508:	aa000021 	orr	x1, x1, x0
    250c:	17ffffee 	b	24c4 <setup_mmu_cfg+0xac>
    2510:	71000edf 	cmp	w22, #0x3
    2514:	54ffff60 	b.eq	2500 <setup_mmu_cfg+0xe8>  // b.none
    2518:	52802341 	mov	w1, #0x11a                 	// #282
    251c:	17ffffc6 	b	2434 <setup_mmu_cfg+0x1c>

0000000000002520 <mmap_add_region>:
    2520:	a9bc7bfd 	stp	x29, x30, [sp, #-64]!
    2524:	910003fd 	mov	x29, sp
    2528:	a90187e0 	stp	x0, x1, [sp, #24]
    252c:	d2a80000 	mov	x0, #0x40000000            	// #1073741824
    2530:	910063e1 	add	x1, sp, #0x18
    2534:	f90017e2 	str	x2, [sp, #40]
    2538:	b90033e3 	str	w3, [sp, #48]
    253c:	f9001fe0 	str	x0, [sp, #56]
    2540:	90080760 	adrp	x0, 100ee000 <__BL1_RAM_START__>
    2544:	91022000 	add	x0, x0, #0x88
    2548:	94000121 	bl	29cc <mmap_add_region_ctx>
    254c:	a8c47bfd 	ldp	x29, x30, [sp], #64
    2550:	d65f03c0 	ret

0000000000002554 <mmap_add>:
    2554:	aa0003e1 	mov	x1, x0
    2558:	90080760 	adrp	x0, 100ee000 <__BL1_RAM_START__>
    255c:	91022000 	add	x0, x0, #0x88
    2560:	140001b2 	b	2c28 <mmap_add_ctx>

0000000000002564 <init_xlat_tables>:
    2564:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
    2568:	910003fd 	mov	x29, sp
    256c:	f9000bf3 	str	x19, [sp, #16]
    2570:	90080773 	adrp	x19, 100ee000 <__BL1_RAM_START__>
    2574:	91022273 	add	x19, x19, #0x88
    2578:	b9405a60 	ldr	w0, [x19, #88]
    257c:	3100041f 	cmn	w0, #0x1
    2580:	540000a0 	b.eq	2594 <init_xlat_tables+0x30>  // b.none
    2584:	52800c01 	mov	w1, #0x60                  	// #96
    2588:	f0000000 	adrp	x0, 5000 <__TEXT_END__>
    258c:	9137b000 	add	x0, x0, #0xdec
    2590:	94000505 	bl	39a4 <__assert>
    2594:	97ffff73 	bl	2360 <xlat_arch_current_el>
    2598:	7100041f 	cmp	w0, #0x1
    259c:	540000c1 	b.ne	25b4 <init_xlat_tables+0x50>  // b.any
    25a0:	b9005a60 	str	w0, [x19, #88]
    25a4:	aa1303e0 	mov	x0, x19
    25a8:	f9400bf3 	ldr	x19, [sp, #16]
    25ac:	a8c27bfd 	ldp	x29, x30, [sp], #32
    25b0:	140001ad 	b	2c64 <init_xlat_tables_ctx>
    25b4:	7100081f 	cmp	w0, #0x2
    25b8:	54ffff40 	b.eq	25a0 <init_xlat_tables+0x3c>  // b.none
    25bc:	71000c1f 	cmp	w0, #0x3
    25c0:	54ffff00 	b.eq	25a0 <init_xlat_tables+0x3c>  // b.none
    25c4:	52800d21 	mov	w1, #0x69                  	// #105
    25c8:	17fffff0 	b	2588 <init_xlat_tables+0x24>

00000000000025cc <enable_mmu_el3>:
    25cc:	90080762 	adrp	x2, 100ee000 <__BL1_RAM_START__>
    25d0:	91022042 	add	x2, x2, #0x88
    25d4:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
    25d8:	2a0003e1 	mov	w1, w0
    25dc:	52800065 	mov	w5, #0x3                   	// #3
    25e0:	910003fd 	mov	x29, sp
    25e4:	f9400444 	ldr	x4, [x2, #8]
    25e8:	f9402043 	ldr	x3, [x2, #64]
    25ec:	f9401842 	ldr	x2, [x2, #48]
    25f0:	f9000bf3 	str	x19, [sp, #16]
    25f4:	2a0003f3 	mov	w19, w0
    25f8:	90080780 	adrp	x0, 100f2000 <platform_normal_stacks+0x3f00>
    25fc:	91264000 	add	x0, x0, #0x990
    2600:	97ffff86 	bl	2418 <setup_mmu_cfg>
    2604:	2a1303e0 	mov	w0, w19
    2608:	f9400bf3 	ldr	x19, [sp, #16]
    260c:	a8c27bfd 	ldp	x29, x30, [sp], #32
    2610:	140004c9 	b	3934 <enable_mmu_direct_el3>

0000000000002614 <xlat_clean_dcache_range>:
    2614:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
    2618:	910003fd 	mov	x29, sp
    261c:	a90153f3 	stp	x19, x20, [sp, #16]
    2620:	aa0003f3 	mov	x19, x0
    2624:	aa0103f4 	mov	x20, x1
    2628:	97ffff33 	bl	22f4 <is_dcache_enabled>
    262c:	72001c1f 	tst	w0, #0xff
    2630:	540000c0 	b.eq	2648 <xlat_clean_dcache_range+0x34>  // b.none
    2634:	aa1403e1 	mov	x1, x20
    2638:	aa1303e0 	mov	x0, x19
    263c:	a94153f3 	ldp	x19, x20, [sp, #16]
    2640:	a8c27bfd 	ldp	x29, x30, [sp], #32
    2644:	140003ca 	b	356c <clean_dcache_range>
    2648:	a94153f3 	ldp	x19, x20, [sp, #16]
    264c:	a8c27bfd 	ldp	x29, x30, [sp], #32
    2650:	d65f03c0 	ret

0000000000002654 <xlat_desc>:
    2654:	12800104 	mov	w4, #0xfffffff7            	// #-9
    2658:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
    265c:	92800005 	mov	x5, #0xffffffffffffffff    	// #-1
    2660:	1b047c64 	mul	w4, w3, w4
    2664:	910003fd 	mov	x29, sp
    2668:	11009c84 	add	w4, w4, #0x27
    266c:	a90153f3 	stp	x19, x20, [sp, #16]
    2670:	9ac420a4 	lsl	x4, x5, x4
    2674:	ea24005f 	bics	xzr, x2, x4
    2678:	540000a0 	b.eq	268c <xlat_desc+0x38>  // b.none
    267c:	52800e41 	mov	w1, #0x72                  	// #114
    2680:	f0000000 	adrp	x0, 5000 <__TEXT_END__>
    2684:	91385400 	add	x0, x0, #0xe15
    2688:	940004c7 	bl	39a4 <__assert>
    268c:	71000c7f 	cmp	w3, #0x3
    2690:	d37f7c23 	ubfiz	x3, x1, #1, #32
    2694:	927b0063 	and	x3, x3, #0x20
    2698:	d2800073 	mov	x19, #0x3                   	// #3
    269c:	9a9f0673 	csinc	x19, x19, xzr, eq  // eq = none
    26a0:	f27d003f 	tst	x1, #0x8
    26a4:	aa020062 	orr	x2, x3, x2
    26a8:	b9405800 	ldr	w0, [x0, #88]
    26ac:	d2801003 	mov	x3, #0x80                  	// #128
    26b0:	9a8313e3 	csel	x3, xzr, x3, ne  // ne = any
    26b4:	aa030273 	orr	x19, x19, x3
    26b8:	7100041f 	cmp	w0, #0x1
    26bc:	aa020273 	orr	x19, x19, x2
    26c0:	540001a1 	b.ne	26f4 <xlat_desc+0xa0>  // b.any
    26c4:	b2760262 	orr	x2, x19, #0x400
    26c8:	f27a003f 	tst	x1, #0x40
    26cc:	d2808803 	mov	x3, #0x440                 	// #1088
    26d0:	aa030273 	orr	x19, x19, x3
    26d4:	9a821273 	csel	x19, x19, x2, ne  // ne = any
    26d8:	72000834 	ands	w20, w1, #0x7
    26dc:	540001c1 	b.ne	2714 <xlat_desc+0xc0>  // b.any
    26e0:	97ffff12 	bl	2328 <xlat_arch_regime_get_xn_desc>
    26e4:	aa000273 	orr	x19, x19, x0
    26e8:	d2804080 	mov	x0, #0x204                 	// #516
    26ec:	aa000260 	orr	x0, x19, x0
    26f0:	14000011 	b	2734 <xlat_desc+0xe0>
    26f4:	51000802 	sub	w2, w0, #0x2
    26f8:	7100045f 	cmp	w2, #0x1
    26fc:	54000069 	b.ls	2708 <xlat_desc+0xb4>  // b.plast
    2700:	52801281 	mov	w1, #0x94                  	// #148
    2704:	17ffffdf 	b	2680 <xlat_desc+0x2c>
    2708:	d2808802 	mov	x2, #0x440                 	// #1088
    270c:	aa020273 	orr	x19, x19, x2
    2710:	17fffff2 	b	26d8 <xlat_desc+0x84>
    2714:	52800502 	mov	w2, #0x28                  	// #40
    2718:	6a02003f 	tst	w1, w2
    271c:	54000060 	b.eq	2728 <xlat_desc+0xd4>  // b.none
    2720:	97ffff02 	bl	2328 <xlat_arch_regime_get_xn_desc>
    2724:	aa000273 	orr	x19, x19, x0
    2728:	71000a9f 	cmp	w20, #0x2
    272c:	540000a1 	b.ne	2740 <xlat_desc+0xec>  // b.any
    2730:	b2780660 	orr	x0, x19, #0x300
    2734:	a94153f3 	ldp	x19, x20, [sp, #16]
    2738:	a8c27bfd 	ldp	x29, x30, [sp], #32
    273c:	d65f03c0 	ret
    2740:	7100069f 	cmp	w20, #0x1
    2744:	54000060 	b.eq	2750 <xlat_desc+0xfc>  // b.none
    2748:	52801a81 	mov	w1, #0xd4                  	// #212
    274c:	17ffffcd 	b	2680 <xlat_desc+0x2c>
    2750:	d2804100 	mov	x0, #0x208                 	// #520
    2754:	17ffffe6 	b	26ec <xlat_desc+0x98>

0000000000002758 <xlat_tables_map_region>:
    2758:	a9b87bfd 	stp	x29, x30, [sp, #-128]!
    275c:	910003fd 	mov	x29, sp
    2760:	a90153f3 	stp	x19, x20, [sp, #16]
    2764:	a9025bf5 	stp	x21, x22, [sp, #32]
    2768:	a90363f7 	stp	x23, x24, [sp, #48]
    276c:	a9046bf9 	stp	x25, x26, [sp, #64]
    2770:	aa0003f9 	mov	x25, x0
    2774:	b9405000 	ldr	w0, [x0, #80]
    2778:	a90573fb 	stp	x27, x28, [sp, #80]
    277c:	6b05001f 	cmp	w0, w5
    2780:	b90077e4 	str	w4, [sp, #116]
    2784:	54000088 	b.hi	2794 <xlat_tables_map_region+0x3c>  // b.pmore
    2788:	2a0503f6 	mov	w22, w5
    278c:	71000cbf 	cmp	w5, #0x3
    2790:	540000a9 	b.ls	27a4 <xlat_tables_map_region+0x4c>  // b.plast
    2794:	52804681 	mov	w1, #0x234                 	// #564
    2798:	f0000000 	adrp	x0, 5000 <__TEXT_END__>
    279c:	91385400 	add	x0, x0, #0xe15
    27a0:	94000481 	bl	39a4 <__assert>
    27a4:	12800115 	mov	w21, #0xfffffff7            	// #-9
    27a8:	aa0103fb 	mov	x27, x1
    27ac:	a9408420 	ldp	x0, x1, [x1, #8]
    27b0:	1b157cb5 	mul	w21, w5, w21
    27b4:	d2800038 	mov	x24, #0x1                   	// #1
    27b8:	92800017 	mov	x23, #0xffffffffffffffff    	// #-1
    27bc:	11009eb5 	add	w21, w21, #0x27
    27c0:	110004bc 	add	w28, w5, #0x1
    27c4:	9ad52318 	lsl	x24, x24, x21
    27c8:	cb1803f3 	neg	x19, x24
    27cc:	8a000273 	and	x19, x19, x0
    27d0:	eb02001f 	cmp	x0, x2
    27d4:	9a828273 	csel	x19, x19, x2, hi  // hi = pmore
    27d8:	8b010001 	add	x1, x0, x1
    27dc:	cb020274 	sub	x20, x19, x2
    27e0:	d1000421 	sub	x1, x1, #0x1
    27e4:	9ad522f7 	lsl	x23, x23, x21
    27e8:	aa3703e0 	mvn	x0, x23
    27ec:	9ad52694 	lsr	x20, x20, x21
    27f0:	b90073f4 	str	w20, [sp, #112]
    27f4:	8b344c74 	add	x20, x3, w20, uxtw #3
    27f8:	a90603e1 	stp	x1, x0, [sp, #96]
    27fc:	294e07e0 	ldp	w0, w1, [sp, #112]
    2800:	6b01001f 	cmp	w0, w1
    2804:	54000862 	b.cs	2910 <xlat_tables_map_region+0x1b8>  // b.hs, b.nlast
    2808:	a9409360 	ldp	x0, x4, [x27, #8]
    280c:	8b18027a 	add	x26, x19, x24
    2810:	f9400283 	ldr	x3, [x20]
    2814:	d1000757 	sub	x23, x26, #0x1
    2818:	12000461 	and	w1, w3, #0x3
    281c:	8b040004 	add	x4, x0, x4
    2820:	eb13001f 	cmp	x0, x19
    2824:	d1000484 	sub	x4, x4, #0x1
    2828:	54000408 	b.hi	28a8 <xlat_tables_map_region+0x150>  // b.pmore
    282c:	eb17009f 	cmp	x4, x23
    2830:	540003c3 	b.cc	28a8 <xlat_tables_map_region+0x150>  // b.lo, b.ul, b.last
    2834:	f9400362 	ldr	x2, [x27]
    2838:	71000edf 	cmp	w22, #0x3
    283c:	cb000042 	sub	x2, x2, x0
    2840:	8b130042 	add	x2, x2, x19
    2844:	540000c1 	b.ne	285c <xlat_tables_map_region+0x104>  // b.any
    2848:	71000c3f 	cmp	w1, #0x3
    284c:	54000520 	b.eq	28f0 <xlat_tables_map_region+0x198>  // b.none
    2850:	34000461 	cbz	w1, 28dc <xlat_tables_map_region+0x184>
    2854:	52803961 	mov	w1, #0x1cb                 	// #459
    2858:	17ffffd0 	b	2798 <xlat_tables_map_region+0x40>
    285c:	71000c3f 	cmp	w1, #0x3
    2860:	54000980 	b.eq	2990 <xlat_tables_map_region+0x238>  // b.none
    2864:	350001a1 	cbnz	w1, 2898 <xlat_tables_map_region+0x140>
    2868:	f94037e0 	ldr	x0, [sp, #104]
    286c:	ea00005f 	tst	x2, x0
    2870:	540000a1 	b.ne	2884 <xlat_tables_map_region+0x12c>  // b.any
    2874:	34000096 	cbz	w22, 2884 <xlat_tables_map_region+0x12c>
    2878:	f9401360 	ldr	x0, [x27, #32]
    287c:	9ad52400 	lsr	x0, x0, x21
    2880:	b50002e0 	cbnz	x0, 28dc <xlat_tables_map_region+0x184>
    2884:	29450720 	ldp	w0, w1, [x25, #40]
    2888:	6b00003f 	cmp	w1, w0
    288c:	5400046b 	b.lt	2918 <xlat_tables_map_region+0x1c0>  // b.tstop
    2890:	52800c21 	mov	w1, #0x61                  	// #97
    2894:	17ffffc1 	b	2798 <xlat_tables_map_region+0x40>
    2898:	7100043f 	cmp	w1, #0x1
    289c:	540002a0 	b.eq	28f0 <xlat_tables_map_region+0x198>  // b.none
    28a0:	52803e41 	mov	w1, #0x1f2                 	// #498
    28a4:	17ffffbd 	b	2798 <xlat_tables_map_region+0x40>
    28a8:	eb17001f 	cmp	x0, x23
    28ac:	54000069 	b.ls	28b8 <xlat_tables_map_region+0x160>  // b.plast
    28b0:	eb04027f 	cmp	x19, x4
    28b4:	540001e8 	b.hi	28f0 <xlat_tables_map_region+0x198>  // b.pmore
    28b8:	71000edf 	cmp	w22, #0x3
    28bc:	54000061 	b.ne	28c8 <xlat_tables_map_region+0x170>  // b.any
    28c0:	528040e1 	mov	w1, #0x207                 	// #519
    28c4:	17ffffb5 	b	2798 <xlat_tables_map_region+0x40>
    28c8:	34fffde1 	cbz	w1, 2884 <xlat_tables_map_region+0x12c>
    28cc:	71000c3f 	cmp	w1, #0x3
    28d0:	54000600 	b.eq	2990 <xlat_tables_map_region+0x238>  // b.none
    28d4:	52804241 	mov	w1, #0x212                 	// #530
    28d8:	17ffffb0 	b	2798 <xlat_tables_map_region+0x40>
    28dc:	b9401b61 	ldr	w1, [x27, #24]
    28e0:	2a1603e3 	mov	w3, w22
    28e4:	aa1903e0 	mov	x0, x25
    28e8:	97ffff5b 	bl	2654 <xlat_desc>
    28ec:	f9000280 	str	x0, [x20]
    28f0:	b94073e0 	ldr	w0, [sp, #112]
    28f4:	91002294 	add	x20, x20, #0x8
    28f8:	aa1a03f3 	mov	x19, x26
    28fc:	11000400 	add	w0, w0, #0x1
    2900:	b90073e0 	str	w0, [sp, #112]
    2904:	f94033e0 	ldr	x0, [sp, #96]
    2908:	eb1a001f 	cmp	x0, x26
    290c:	54fff788 	b.hi	27fc <xlat_tables_map_region+0xa4>  // b.pmore
    2910:	d1000673 	sub	x19, x19, #0x1
    2914:	14000017 	b	2970 <xlat_tables_map_region+0x218>
    2918:	f9401323 	ldr	x3, [x25, #32]
    291c:	11000420 	add	w0, w1, #0x1
    2920:	b9002f20 	str	w0, [x25, #44]
    2924:	93747c21 	sbfiz	x1, x1, #12, #32
    2928:	ab010063 	adds	x3, x3, x1
    292c:	54000220 	b.eq	2970 <xlat_tables_map_region+0x218>  // b.none
    2930:	b2400460 	orr	x0, x3, #0x3
    2934:	f9000280 	str	x0, [x20]
    2938:	aa1303e2 	mov	x2, x19
    293c:	2a1c03e5 	mov	w5, w28
    2940:	aa1b03e1 	mov	x1, x27
    2944:	52804004 	mov	w4, #0x200                 	// #512
    2948:	aa1903e0 	mov	x0, x25
    294c:	f9003fe3 	str	x3, [sp, #120]
    2950:	97ffff82 	bl	2758 <xlat_tables_map_region>
    2954:	aa0003f3 	mov	x19, x0
    2958:	f9403fe3 	ldr	x3, [sp, #120]
    295c:	d2820001 	mov	x1, #0x1000                	// #4096
    2960:	aa0303e0 	mov	x0, x3
    2964:	97ffff2c 	bl	2614 <xlat_clean_dcache_range>
    2968:	eb1302ff 	cmp	x23, x19
    296c:	54fffc20 	b.eq	28f0 <xlat_tables_map_region+0x198>  // b.none
    2970:	aa1303e0 	mov	x0, x19
    2974:	a94153f3 	ldp	x19, x20, [sp, #16]
    2978:	a9425bf5 	ldp	x21, x22, [sp, #32]
    297c:	a94363f7 	ldp	x23, x24, [sp, #48]
    2980:	a9446bf9 	ldp	x25, x26, [sp, #64]
    2984:	a94573fb 	ldp	x27, x28, [sp, #80]
    2988:	a8c87bfd 	ldp	x29, x30, [sp], #128
    298c:	d65f03c0 	ret
    2990:	92748c63 	and	x3, x3, #0xfffffffff000
    2994:	aa1303e2 	mov	x2, x19
    2998:	2a1c03e5 	mov	w5, w28
    299c:	aa1b03e1 	mov	x1, x27
    29a0:	52804004 	mov	w4, #0x200                 	// #512
    29a4:	aa1903e0 	mov	x0, x25
    29a8:	f9003fe3 	str	x3, [sp, #120]
    29ac:	97ffff6b 	bl	2758 <xlat_tables_map_region>
    29b0:	f9403fe3 	ldr	x3, [sp, #120]
    29b4:	aa0003f3 	mov	x19, x0
    29b8:	d2820001 	mov	x1, #0x1000                	// #4096
    29bc:	aa0303e0 	mov	x0, x3
    29c0:	97ffff15 	bl	2614 <xlat_clean_dcache_range>
    29c4:	eb17027f 	cmp	x19, x23
    29c8:	17ffffe9 	b	296c <xlat_tables_map_region+0x214>

00000000000029cc <mmap_add_region_ctx>:
    29cc:	a9bc7bfd 	stp	x29, x30, [sp, #-64]!
    29d0:	910003fd 	mov	x29, sp
    29d4:	a90363f7 	stp	x23, x24, [sp, #48]
    29d8:	aa0103f7 	mov	x23, x1
    29dc:	f9400821 	ldr	x1, [x1, #16]
    29e0:	a90153f3 	stp	x19, x20, [sp, #16]
    29e4:	a9025bf5 	stp	x21, x22, [sp, #32]
    29e8:	b4000fe1 	cbz	x1, 2be4 <mmap_add_region_ctx+0x218>
    29ec:	aa0003f4 	mov	x20, x0
    29f0:	39415000 	ldrb	w0, [x0, #84]
    29f4:	340000a0 	cbz	w0, 2a08 <mmap_add_region_ctx+0x3c>
    29f8:	528060e1 	mov	w1, #0x307                 	// #775
    29fc:	f0000000 	adrp	x0, 5000 <__TEXT_END__>
    2a00:	91385400 	add	x0, x0, #0xe15
    2a04:	940003e8 	bl	39a4 <__assert>
    2a08:	a94002e5 	ldp	x5, x0, [x23]
    2a0c:	f94012e2 	ldr	x2, [x23, #32]
    2a10:	aa0100a3 	orr	x3, x5, x1
    2a14:	aa000063 	orr	x3, x3, x0
    2a18:	f2402c7f 	tst	x3, #0xfff
    2a1c:	54000ac1 	b.ne	2b74 <mmap_add_region_ctx+0x1a8>  // b.any
    2a20:	f148005f 	cmp	x2, #0x200, lsl #12
    2a24:	d2a80003 	mov	x3, #0x40000000            	// #1073741824
    2a28:	fa431044 	ccmp	x2, x3, #0x4, ne  // ne = any
    2a2c:	54000060 	b.eq	2a38 <mmap_add_region_ctx+0x6c>  // b.none
    2a30:	f140045f 	cmp	x2, #0x1, lsl #12
    2a34:	54000a01 	b.ne	2b74 <mmap_add_region_ctx+0x1a8>  // b.any
    2a38:	8b0100b6 	add	x22, x5, x1
    2a3c:	8b000029 	add	x9, x1, x0
    2a40:	d10006d6 	sub	x22, x22, #0x1
    2a44:	d1000535 	sub	x21, x9, #0x1
    2a48:	eb1600bf 	cmp	x5, x22
    2a4c:	fa559002 	ccmp	x0, x21, #0x2, ls  // ls = plast
    2a50:	540009e8 	b.hi	2b8c <mmap_add_region_ctx+0x1c0>  // b.pmore
    2a54:	f9400682 	ldr	x2, [x20, #8]
    2a58:	eb0202bf 	cmp	x21, x2
    2a5c:	54000988 	b.hi	2b8c <mmap_add_region_ctx+0x1c0>  // b.pmore
    2a60:	f9400282 	ldr	x2, [x20]
    2a64:	eb0202df 	cmp	x22, x2
    2a68:	54000928 	b.hi	2b8c <mmap_add_region_ctx+0x1c0>  // b.pmore
    2a6c:	b9401a98 	ldr	w24, [x20, #24]
    2a70:	52800503 	mov	w3, #0x28                  	// #40
    2a74:	f9400a82 	ldr	x2, [x20, #16]
    2a78:	9b230b18 	smaddl	x24, w24, w3, x2
    2a7c:	f85e8303 	ldur	x3, [x24, #-24]
    2a80:	b50008a3 	cbnz	x3, 2b94 <mmap_add_region_ctx+0x1c8>
    2a84:	aa0203e6 	mov	x6, x2
    2a88:	cb05000a 	sub	x10, x0, x5
    2a8c:	f94008c3 	ldr	x3, [x6, #16]
    2a90:	b50002a3 	cbnz	x3, 2ae4 <mmap_add_region_ctx+0x118>
    2a94:	aa0203f3 	mov	x19, x2
    2a98:	a9408e60 	ldp	x0, x3, [x19, #8]
    2a9c:	8b000060 	add	x0, x3, x0
    2aa0:	d1000400 	sub	x0, x0, #0x1
    2aa4:	eb15001f 	cmp	x0, x21
    2aa8:	54000042 	b.cs	2ab0 <mmap_add_region_ctx+0xe4>  // b.hs, b.nlast
    2aac:	b5000783 	cbnz	x3, 2b9c <mmap_add_region_ctx+0x1d0>
    2ab0:	a9408263 	ldp	x3, x0, [x19, #8]
    2ab4:	8b030003 	add	x3, x0, x3
    2ab8:	eb03013f 	cmp	x9, x3
    2abc:	54000081 	b.ne	2acc <mmap_add_region_ctx+0x100>  // b.any
    2ac0:	b4000060 	cbz	x0, 2acc <mmap_add_region_ctx+0x100>
    2ac4:	eb00003f 	cmp	x1, x0
    2ac8:	540006e8 	b.hi	2ba4 <mmap_add_region_ctx+0x1d8>  // b.pmore
    2acc:	f9400840 	ldr	x0, [x2, #16]
    2ad0:	b4000940 	cbz	x0, 2bf8 <mmap_add_region_ctx+0x22c>
    2ad4:	eb18005f 	cmp	x2, x24
    2ad8:	540006a3 	b.cc	2bac <mmap_add_region_ctx+0x1e0>  // b.lo, b.ul, b.last
    2adc:	528067e1 	mov	w1, #0x33f                 	// #831
    2ae0:	17ffffc7 	b	29fc <mmap_add_region_ctx+0x30>
    2ae4:	a94010c7 	ldp	x7, x4, [x6]
    2ae8:	8b030088 	add	x8, x4, x3
    2aec:	eb04001f 	cmp	x0, x4
    2af0:	d1000508 	sub	x8, x8, #0x1
    2af4:	54000263 	b.cc	2b40 <mmap_add_region_ctx+0x174>  // b.lo, b.ul, b.last
    2af8:	eb0802bf 	cmp	x21, x8
    2afc:	54000269 	b.ls	2b48 <mmap_add_region_ctx+0x17c>  // b.plast
    2b00:	eb04001f 	cmp	x0, x4
    2b04:	54000220 	b.eq	2b48 <mmap_add_region_ctx+0x17c>  // b.none
    2b08:	eb0702df 	cmp	x22, x7
    2b0c:	54000863 	b.cc	2c18 <mmap_add_region_ctx+0x24c>  // b.lo, b.ul, b.last
    2b10:	8b070063 	add	x3, x3, x7
    2b14:	d1000463 	sub	x3, x3, #0x1
    2b18:	eb0300bf 	cmp	x5, x3
    2b1c:	1a9f97e3 	cset	w3, hi  // hi = pmore
    2b20:	eb0402bf 	cmp	x21, x4
    2b24:	54000243 	b.cc	2b6c <mmap_add_region_ctx+0x1a0>  // b.lo, b.ul, b.last
    2b28:	eb08001f 	cmp	x0, x8
    2b2c:	1a9f97e4 	cset	w4, hi  // hi = pmore
    2b30:	6a03009f 	tst	w4, w3
    2b34:	54000180 	b.eq	2b64 <mmap_add_region_ctx+0x198>  // b.none
    2b38:	9100a0c6 	add	x6, x6, #0x28
    2b3c:	17ffffd4 	b	2a8c <mmap_add_region_ctx+0xc0>
    2b40:	eb0802bf 	cmp	x21, x8
    2b44:	54fffe23 	b.cc	2b08 <mmap_add_region_ctx+0x13c>  // b.lo, b.ul, b.last
    2b48:	cb070087 	sub	x7, x4, x7
    2b4c:	eb0a00ff 	cmp	x7, x10
    2b50:	540000a1 	b.ne	2b64 <mmap_add_region_ctx+0x198>  // b.any
    2b54:	eb04001f 	cmp	x0, x4
    2b58:	54ffff01 	b.ne	2b38 <mmap_add_region_ctx+0x16c>  // b.any
    2b5c:	eb03003f 	cmp	x1, x3
    2b60:	54fffec1 	b.ne	2b38 <mmap_add_region_ctx+0x16c>  // b.any
    2b64:	12800001 	mov	w1, #0xffffffff            	// #-1
    2b68:	14000004 	b	2b78 <mmap_add_region_ctx+0x1ac>
    2b6c:	52800024 	mov	w4, #0x1                   	// #1
    2b70:	17fffff0 	b	2b30 <mmap_add_region_ctx+0x164>
    2b74:	128002a1 	mov	w1, #0xffffffea            	// #-22
    2b78:	f0000000 	adrp	x0, 5000 <__TEXT_END__>
    2b7c:	9138ec00 	add	x0, x0, #0xe3b
    2b80:	97fffc35 	bl	1c54 <tf_log>
    2b84:	52806181 	mov	w1, #0x30c                 	// #780
    2b88:	17ffff9d 	b	29fc <mmap_add_region_ctx+0x30>
    2b8c:	12800421 	mov	w1, #0xffffffde            	// #-34
    2b90:	17fffffa 	b	2b78 <mmap_add_region_ctx+0x1ac>
    2b94:	12800161 	mov	w1, #0xfffffff4            	// #-12
    2b98:	17fffff8 	b	2b78 <mmap_add_region_ctx+0x1ac>
    2b9c:	9100a273 	add	x19, x19, #0x28
    2ba0:	17ffffbe 	b	2a98 <mmap_add_region_ctx+0xcc>
    2ba4:	9100a273 	add	x19, x19, #0x28
    2ba8:	17ffffc2 	b	2ab0 <mmap_add_region_ctx+0xe4>
    2bac:	9100a042 	add	x2, x2, #0x28
    2bb0:	17ffffc7 	b	2acc <mmap_add_region_ctx+0x100>
    2bb4:	aa1703e1 	mov	x1, x23
    2bb8:	aa1303e0 	mov	x0, x19
    2bbc:	d2800502 	mov	x2, #0x28                  	// #40
    2bc0:	94000392 	bl	3a08 <memcpy>
    2bc4:	f9402280 	ldr	x0, [x20, #64]
    2bc8:	eb16001f 	cmp	x0, x22
    2bcc:	54000042 	b.cs	2bd4 <mmap_add_region_ctx+0x208>  // b.hs, b.nlast
    2bd0:	f9002296 	str	x22, [x20, #64]
    2bd4:	f9402680 	ldr	x0, [x20, #72]
    2bd8:	eb15001f 	cmp	x0, x21
    2bdc:	54000042 	b.cs	2be4 <mmap_add_region_ctx+0x218>  // b.hs, b.nlast
    2be0:	f9002695 	str	x21, [x20, #72]
    2be4:	a94153f3 	ldp	x19, x20, [sp, #16]
    2be8:	a9425bf5 	ldp	x21, x22, [sp, #32]
    2bec:	a94363f7 	ldp	x23, x24, [sp, #48]
    2bf0:	a8c47bfd 	ldp	x29, x30, [sp], #64
    2bf4:	d65f03c0 	ret
    2bf8:	cb130042 	sub	x2, x2, x19
    2bfc:	aa1303e1 	mov	x1, x19
    2c00:	9100a260 	add	x0, x19, #0x28
    2c04:	94000389 	bl	3a28 <memmove>
    2c08:	f9400b00 	ldr	x0, [x24, #16]
    2c0c:	b4fffd40 	cbz	x0, 2bb4 <mmap_add_region_ctx+0x1e8>
    2c10:	52806961 	mov	w1, #0x34b                 	// #843
    2c14:	17ffff7a 	b	29fc <mmap_add_region_ctx+0x30>
    2c18:	eb0402bf 	cmp	x21, x4
    2c1c:	54fff8e3 	b.cc	2b38 <mmap_add_region_ctx+0x16c>  // b.lo, b.ul, b.last
    2c20:	52800023 	mov	w3, #0x1                   	// #1
    2c24:	17ffffc1 	b	2b28 <mmap_add_region_ctx+0x15c>

0000000000002c28 <mmap_add_ctx>:
    2c28:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
    2c2c:	910003fd 	mov	x29, sp
    2c30:	a90153f3 	stp	x19, x20, [sp, #16]
    2c34:	aa0003f4 	mov	x20, x0
    2c38:	aa0103f3 	mov	x19, x1
    2c3c:	f9401260 	ldr	x0, [x19, #32]
    2c40:	b5000080 	cbnz	x0, 2c50 <mmap_add_ctx+0x28>
    2c44:	a94153f3 	ldp	x19, x20, [sp, #16]
    2c48:	a8c27bfd 	ldp	x29, x30, [sp], #32
    2c4c:	d65f03c0 	ret
    2c50:	aa1303e1 	mov	x1, x19
    2c54:	aa1403e0 	mov	x0, x20
    2c58:	9100a273 	add	x19, x19, #0x28
    2c5c:	97ffff5c 	bl	29cc <mmap_add_region_ctx>
    2c60:	17fffff7 	b	2c3c <mmap_add_ctx+0x14>

0000000000002c64 <init_xlat_tables_ctx>:
    2c64:	a9bd7bfd 	stp	x29, x30, [sp, #-48]!
    2c68:	910003fd 	mov	x29, sp
    2c6c:	a90153f3 	stp	x19, x20, [sp, #16]
    2c70:	f90013f5 	str	x21, [sp, #32]
    2c74:	b50000a0 	cbnz	x0, 2c88 <init_xlat_tables_ctx+0x24>
    2c78:	52809321 	mov	w1, #0x499                 	// #1177
    2c7c:	f0000000 	adrp	x0, 5000 <__TEXT_END__>
    2c80:	91385400 	add	x0, x0, #0xe15
    2c84:	94000348 	bl	39a4 <__assert>
    2c88:	39415001 	ldrb	w1, [x0, #84]
    2c8c:	aa0003f3 	mov	x19, x0
    2c90:	34000061 	cbz	w1, 2c9c <init_xlat_tables_ctx+0x38>
    2c94:	52809341 	mov	w1, #0x49a                 	// #1178
    2c98:	17fffff9 	b	2c7c <init_xlat_tables_ctx+0x18>
    2c9c:	b9405801 	ldr	w1, [x0, #88]
    2ca0:	51000421 	sub	w1, w1, #0x1
    2ca4:	7100083f 	cmp	w1, #0x2
    2ca8:	54000069 	b.ls	2cb4 <init_xlat_tables_ctx+0x50>  // b.plast
    2cac:	52809361 	mov	w1, #0x49b                 	// #1179
    2cb0:	17fffff3 	b	2c7c <init_xlat_tables_ctx+0x18>
    2cb4:	97fffdb6 	bl	238c <is_mmu_enabled_ctx>
    2cb8:	72001c1f 	tst	w0, #0xff
    2cbc:	54000060 	b.eq	2cc8 <init_xlat_tables_ctx+0x64>  // b.none
    2cc0:	528093c1 	mov	w1, #0x49e                 	// #1182
    2cc4:	17ffffee 	b	2c7c <init_xlat_tables_ctx+0x18>
    2cc8:	a940d275 	ldp	x21, x20, [x19, #8]
    2ccc:	97fffd83 	bl	22d8 <xlat_get_min_virt_addr_space_size>
    2cd0:	d1000400 	sub	x0, x0, #0x1
    2cd4:	eb0002bf 	cmp	x21, x0
    2cd8:	54000062 	b.cs	2ce4 <init_xlat_tables_ctx+0x80>  // b.hs, b.nlast
    2cdc:	52809441 	mov	w1, #0x4a2                 	// #1186
    2ce0:	17ffffe7 	b	2c7c <init_xlat_tables_ctx+0x18>
    2ce4:	f9400660 	ldr	x0, [x19, #8]
    2ce8:	92ffffe1 	mov	x1, #0xffffffffffff        	// #281474976710655
    2cec:	eb01001f 	cmp	x0, x1
    2cf0:	54000069 	b.ls	2cfc <init_xlat_tables_ctx+0x98>  // b.plast
    2cf4:	52809481 	mov	w1, #0x4a4                 	// #1188
    2cf8:	17ffffe1 	b	2c7c <init_xlat_tables_ctx+0x18>
    2cfc:	91000401 	add	x1, x0, #0x1
    2d00:	ea00003f 	tst	x1, x0
    2d04:	54000060 	b.eq	2d10 <init_xlat_tables_ctx+0xac>  // b.none
    2d08:	528094a1 	mov	w1, #0x4a5                 	// #1189
    2d0c:	17ffffdc 	b	2c7c <init_xlat_tables_ctx+0x18>
    2d10:	aa1403e0 	mov	x0, x20
    2d14:	9400004e 	bl	2e4c <xlat_mmap_print>
    2d18:	b9403a61 	ldr	w1, [x19, #56]
    2d1c:	d2800000 	mov	x0, #0x0                   	// #0
    2d20:	6b00003f 	cmp	w1, w0
    2d24:	540001a8 	b.hi	2d58 <init_xlat_tables_ctx+0xf4>  // b.pmore
    2d28:	b9402a63 	ldr	w3, [x19, #40]
    2d2c:	d2800000 	mov	x0, #0x0                   	// #0
    2d30:	6b00007f 	cmp	w3, w0
    2d34:	540001ac 	b.gt	2d68 <init_xlat_tables_ctx+0x104>
    2d38:	f9400a80 	ldr	x0, [x20, #16]
    2d3c:	b5000280 	cbnz	x0, 2d8c <init_xlat_tables_ctx+0x128>
    2d40:	f9400274 	ldr	x20, [x19]
    2d44:	97fffd54 	bl	2294 <xlat_arch_get_max_supported_pa>
    2d48:	eb00029f 	cmp	x20, x0
    2d4c:	540005a9 	b.ls	2e00 <init_xlat_tables_ctx+0x19c>  // b.plast
    2d50:	52809901 	mov	w1, #0x4c8                 	// #1224
    2d54:	17ffffca 	b	2c7c <init_xlat_tables_ctx+0x18>
    2d58:	f9401a62 	ldr	x2, [x19, #48]
    2d5c:	f820785f 	str	xzr, [x2, x0, lsl #3]
    2d60:	91000400 	add	x0, x0, #0x1
    2d64:	17ffffef 	b	2d20 <init_xlat_tables_ctx+0xbc>
    2d68:	f9401262 	ldr	x2, [x19, #32]
    2d6c:	d2800001 	mov	x1, #0x0                   	// #0
    2d70:	8b003042 	add	x2, x2, x0, lsl #12
    2d74:	f821785f 	str	xzr, [x2, x1, lsl #3]
    2d78:	91000421 	add	x1, x1, #0x1
    2d7c:	f108003f 	cmp	x1, #0x200
    2d80:	54ffffa1 	b.ne	2d74 <init_xlat_tables_ctx+0x110>  // b.any
    2d84:	91000400 	add	x0, x0, #0x1
    2d88:	17ffffea 	b	2d30 <init_xlat_tables_ctx+0xcc>
    2d8c:	b9403a64 	ldr	w4, [x19, #56]
    2d90:	aa1403e1 	mov	x1, x20
    2d94:	b9405265 	ldr	w5, [x19, #80]
    2d98:	d2800002 	mov	x2, #0x0                   	// #0
    2d9c:	f9401a63 	ldr	x3, [x19, #48]
    2da0:	aa1303e0 	mov	x0, x19
    2da4:	97fffe6d 	bl	2758 <xlat_tables_map_region>
    2da8:	aa0003f5 	mov	x21, x0
    2dac:	f9401a60 	ldr	x0, [x19, #48]
    2db0:	b9403a61 	ldr	w1, [x19, #56]
    2db4:	d37df021 	lsl	x1, x1, #3
    2db8:	97fffe17 	bl	2614 <xlat_clean_dcache_range>
    2dbc:	a9408e81 	ldp	x1, x3, [x20, #8]
    2dc0:	8b030020 	add	x0, x1, x3
    2dc4:	d1000400 	sub	x0, x0, #0x1
    2dc8:	eb15001f 	cmp	x0, x21
    2dcc:	54000160 	b.eq	2df8 <init_xlat_tables_ctx+0x194>  // b.none
    2dd0:	b9401a84 	ldr	w4, [x20, #24]
    2dd4:	f0000000 	adrp	x0, 5000 <__TEXT_END__>
    2dd8:	91399800 	add	x0, x0, #0xe66
    2ddc:	f9400282 	ldr	x2, [x20]
    2de0:	97fffb9d 	bl	1c54 <tf_log>
    2de4:	f0000000 	adrp	x0, 5000 <__TEXT_END__>
    2de8:	913ad400 	add	x0, x0, #0xeb5
    2dec:	97fffc7f 	bl	1fe8 <backtrace>
    2df0:	97fffc2d 	bl	1ea4 <console_flush>
    2df4:	940001bf 	bl	34f0 <do_panic>
    2df8:	9100a294 	add	x20, x20, #0x28
    2dfc:	17ffffcf 	b	2d38 <init_xlat_tables_ctx+0xd4>
    2e00:	f9400660 	ldr	x0, [x19, #8]
    2e04:	f9402661 	ldr	x1, [x19, #72]
    2e08:	eb00003f 	cmp	x1, x0
    2e0c:	54000069 	b.ls	2e18 <init_xlat_tables_ctx+0x1b4>  // b.plast
    2e10:	52809921 	mov	w1, #0x4c9                 	// #1225
    2e14:	17ffff9a 	b	2c7c <init_xlat_tables_ctx+0x18>
    2e18:	f9400260 	ldr	x0, [x19]
    2e1c:	f9402261 	ldr	x1, [x19, #64]
    2e20:	eb00003f 	cmp	x1, x0
    2e24:	54000069 	b.ls	2e30 <init_xlat_tables_ctx+0x1cc>  // b.plast
    2e28:	52809941 	mov	w1, #0x4ca                 	// #1226
    2e2c:	17ffff94 	b	2c7c <init_xlat_tables_ctx+0x18>
    2e30:	52800020 	mov	w0, #0x1                   	// #1
    2e34:	39015260 	strb	w0, [x19, #84]
    2e38:	aa1303e0 	mov	x0, x19
    2e3c:	a94153f3 	ldp	x19, x20, [sp, #16]
    2e40:	f94013f5 	ldr	x21, [sp, #32]
    2e44:	a8c37bfd 	ldp	x29, x30, [sp], #48
    2e48:	14000002 	b	2e50 <xlat_tables_print>

0000000000002e4c <xlat_mmap_print>:
    2e4c:	d65f03c0 	ret

0000000000002e50 <xlat_tables_print>:
    2e50:	d65f03c0 	ret

0000000000002e54 <check_errata_819472>:
    2e54:	d2800021 	mov	x1, #0x1                   	// #1
    2e58:	140000f6 	b	3230 <cpu_rev_var_ls>

0000000000002e5c <check_errata_824069>:
    2e5c:	d2800041 	mov	x1, #0x2                   	// #2
    2e60:	140000f4 	b	3230 <cpu_rev_var_ls>

0000000000002e64 <errata_a53_826319_wa>:
    2e64:	aa1e03f1 	mov	x17, x30
    2e68:	94000007 	bl	2e84 <check_errata_826319>
    2e6c:	b40000a0 	cbz	x0, 2e80 <errata_a53_826319_wa+0x1c>
    2e70:	d539f001 	mrs	x1, s3_1_c15_c0_0
    2e74:	9271f821 	and	x1, x1, #0xffffffffffffbfff
    2e78:	b27d0021 	orr	x1, x1, #0x8
    2e7c:	d519f001 	msr	s3_1_c15_c0_0, x1
    2e80:	d65f0220 	ret	x17

0000000000002e84 <check_errata_826319>:
    2e84:	d2800041 	mov	x1, #0x2                   	// #2
    2e88:	140000ea 	b	3230 <cpu_rev_var_ls>

0000000000002e8c <check_errata_827319>:
    2e8c:	d2800041 	mov	x1, #0x2                   	// #2
    2e90:	140000e8 	b	3230 <cpu_rev_var_ls>

0000000000002e94 <a53_disable_non_temporal_hint>:
    2e94:	aa1e03f1 	mov	x17, x30
    2e98:	94000006 	bl	2eb0 <check_errata_disable_non_temporal_hint>
    2e9c:	b4000080 	cbz	x0, 2eac <a53_disable_non_temporal_hint+0x18>
    2ea0:	d539f201 	mrs	x1, s3_1_c15_c2_0
    2ea4:	b2680021 	orr	x1, x1, #0x1000000
    2ea8:	d519f201 	msr	s3_1_c15_c2_0, x1
    2eac:	d65f0220 	ret	x17

0000000000002eb0 <check_errata_disable_non_temporal_hint>:
    2eb0:	d2800061 	mov	x1, #0x3                   	// #3
    2eb4:	140000df 	b	3230 <cpu_rev_var_ls>

0000000000002eb8 <errata_a53_855873_wa>:
    2eb8:	aa1e03f1 	mov	x17, x30
    2ebc:	94000006 	bl	2ed4 <check_errata_855873>
    2ec0:	b4000080 	cbz	x0, 2ed0 <errata_a53_855873_wa+0x18>
    2ec4:	d539f201 	mrs	x1, s3_1_c15_c2_0
    2ec8:	b2540021 	orr	x1, x1, #0x100000000000
    2ecc:	d519f201 	msr	s3_1_c15_c2_0, x1
    2ed0:	d65f0220 	ret	x17

0000000000002ed4 <check_errata_855873>:
    2ed4:	d2800061 	mov	x1, #0x3                   	// #3
    2ed8:	140000db 	b	3244 <cpu_rev_var_hs>

0000000000002edc <check_errata_835769>:
    2edc:	f100101f 	cmp	x0, #0x4
    2ee0:	540000c8 	b.hi	2ef8 <errata_not_applies>  // b.pmore
    2ee4:	f100041f 	cmp	x0, #0x1
    2ee8:	d2800020 	mov	x0, #0x1                   	// #1
    2eec:	54000089 	b.ls	2efc <exit_check_errata_835769>  // b.plast
    2ef0:	d53800c1 	mrs	x1, revidr_el1
    2ef4:	36380041 	tbz	w1, #7, 2efc <exit_check_errata_835769>

0000000000002ef8 <errata_not_applies>:
    2ef8:	d2800000 	mov	x0, #0x0                   	// #0

0000000000002efc <exit_check_errata_835769>:
    2efc:	d65f03c0 	ret

0000000000002f00 <check_errata_843419>:
    2f00:	d2800021 	mov	x1, #0x1                   	// #1
    2f04:	d2800002 	mov	x2, #0x0                   	// #0
    2f08:	f100101f 	cmp	x0, #0x4
    2f0c:	9a829020 	csel	x0, x1, x2, ls  // ls = plast
    2f10:	54000081 	b.ne	2f20 <exit_check_errata_843419>  // b.any
    2f14:	d53800c3 	mrs	x3, revidr_el1
    2f18:	36400043 	tbz	w3, #8, 2f20 <exit_check_errata_843419>
    2f1c:	aa0203e0 	mov	x0, x2

0000000000002f20 <exit_check_errata_843419>:
    2f20:	d65f03c0 	ret

0000000000002f24 <cortex_a53_reset_func>:
    2f24:	aa1e03f3 	mov	x19, x30
    2f28:	940000be 	bl	3220 <cpu_get_rev_var>
    2f2c:	aa0003f2 	mov	x18, x0
    2f30:	aa1203e0 	mov	x0, x18
    2f34:	97ffffcc 	bl	2e64 <errata_a53_826319_wa>
    2f38:	aa1203e0 	mov	x0, x18
    2f3c:	97ffffd6 	bl	2e94 <a53_disable_non_temporal_hint>
    2f40:	aa1203e0 	mov	x0, x18
    2f44:	97ffffdd 	bl	2eb8 <errata_a53_855873_wa>
    2f48:	d539f220 	mrs	x0, s3_1_c15_c2_1
    2f4c:	b27a0000 	orr	x0, x0, #0x40
    2f50:	d519f220 	msr	s3_1_c15_c2_1, x0
    2f54:	d5033fdf 	isb
    2f58:	d65f0260 	ret	x19

0000000000002f5c <cortex_a53_errata_report>:
    2f5c:	a9bf7be8 	stp	x8, x30, [sp, #-16]!
    2f60:	940000b0 	bl	3220 <cpu_get_rev_var>
    2f64:	aa0003e8 	mov	x8, x0
    2f68:	aa0803e0 	mov	x0, x8
    2f6c:	97ffffba 	bl	2e54 <check_errata_819472>
    2f70:	b4000040 	cbz	x0, 2f78 <cortex_a53_errata_report+0x1c>
    2f74:	d2800040 	mov	x0, #0x2                   	// #2
    2f78:	30017ce1 	adr	x1, 5f15 <cortex_a53_cpu_str>
    2f7c:	50017a62 	adr	x2, 5eca <cortex_a53_errata_819472_str>
    2f80:	97fff9d4 	bl	16d0 <errata_print_msg>
    2f84:	aa0803e0 	mov	x0, x8
    2f88:	97ffffb5 	bl	2e5c <check_errata_824069>
    2f8c:	b4000040 	cbz	x0, 2f94 <cortex_a53_errata_report+0x38>
    2f90:	d2800040 	mov	x0, #0x2                   	// #2
    2f94:	30017c01 	adr	x1, 5f15 <cortex_a53_cpu_str>
    2f98:	300179c2 	adr	x2, 5ed1 <cortex_a53_errata_824069_str>
    2f9c:	97fff9cd 	bl	16d0 <errata_print_msg>
    2fa0:	aa0803e0 	mov	x0, x8
    2fa4:	97ffffb8 	bl	2e84 <check_errata_826319>
    2fa8:	30017b61 	adr	x1, 5f15 <cortex_a53_cpu_str>
    2fac:	10017962 	adr	x2, 5ed8 <cortex_a53_errata_826319_str>
    2fb0:	97fff9c8 	bl	16d0 <errata_print_msg>
    2fb4:	aa0803e0 	mov	x0, x8
    2fb8:	97ffffb5 	bl	2e8c <check_errata_827319>
    2fbc:	b4000040 	cbz	x0, 2fc4 <cortex_a53_errata_report+0x68>
    2fc0:	d2800040 	mov	x0, #0x2                   	// #2
    2fc4:	30017a81 	adr	x1, 5f15 <cortex_a53_cpu_str>
    2fc8:	700178a2 	adr	x2, 5edf <cortex_a53_errata_827319_str>
    2fcc:	97fff9c1 	bl	16d0 <errata_print_msg>
    2fd0:	aa0803e0 	mov	x0, x8
    2fd4:	97ffffc2 	bl	2edc <check_errata_835769>
    2fd8:	300179e1 	adr	x1, 5f15 <cortex_a53_cpu_str>
    2fdc:	50017842 	adr	x2, 5ee6 <cortex_a53_errata_835769_str>
    2fe0:	97fff9bc 	bl	16d0 <errata_print_msg>
    2fe4:	aa0803e0 	mov	x0, x8
    2fe8:	97ffffb2 	bl	2eb0 <check_errata_disable_non_temporal_hint>
    2fec:	30017941 	adr	x1, 5f15 <cortex_a53_cpu_str>
    2ff0:	300177e2 	adr	x2, 5eed <cortex_a53_errata_disable_non_temporal_hint_str>
    2ff4:	97fff9b7 	bl	16d0 <errata_print_msg>
    2ff8:	aa0803e0 	mov	x0, x8
    2ffc:	97ffffc1 	bl	2f00 <check_errata_843419>
    3000:	300178a1 	adr	x1, 5f15 <cortex_a53_cpu_str>
    3004:	70017802 	adr	x2, 5f07 <cortex_a53_errata_843419_str>
    3008:	97fff9b2 	bl	16d0 <errata_print_msg>
    300c:	aa0803e0 	mov	x0, x8
    3010:	97ffffb1 	bl	2ed4 <check_errata_855873>
    3014:	30017801 	adr	x1, 5f15 <cortex_a53_cpu_str>
    3018:	500177a2 	adr	x2, 5f0e <cortex_a53_errata_855873_str>
    301c:	97fff9ad 	bl	16d0 <errata_print_msg>
    3020:	a8c17be8 	ldp	x8, x30, [sp], #16
    3024:	d65f03c0 	ret

0000000000003028 <plat_get_my_stack>:
    3028:	aa1e03ea 	mov	x10, x30
    302c:	9400000a 	bl	3054 <plat_my_core_pos>
    3030:	90080762 	adrp	x2, 100ef000 <platform_normal_stacks+0xf00>
    3034:	91040042 	add	x2, x2, #0x100
    3038:	d2820001 	mov	x1, #0x1000                	// #4096
    303c:	9b010800 	madd	x0, x0, x1, x2
    3040:	d65f0140 	ret	x10

0000000000003044 <plat_set_my_stack>:
    3044:	aa1e03e9 	mov	x9, x30
    3048:	97fffff8 	bl	3028 <plat_get_my_stack>
    304c:	9100001f 	mov	sp, x0
    3050:	d65f0120 	ret	x9

0000000000003054 <plat_my_core_pos>:
    3054:	d53800a0 	mrs	x0, mpidr_el1
    3058:	14000001 	b	305c <plat_rpi3_calc_core_pos>

000000000000305c <plat_rpi3_calc_core_pos>:
    305c:	92401c01 	and	x1, x0, #0xff
    3060:	92781c00 	and	x0, x0, #0xff00
    3064:	8b401820 	add	x0, x1, x0, lsr #6
    3068:	d65f03c0 	ret

000000000000306c <plat_is_my_cpu_primary>:
    306c:	d53800a0 	mrs	x0, mpidr_el1
    3070:	92403c00 	and	x0, x0, #0xffff
    3074:	f100001f 	cmp	x0, #0x0
    3078:	1a9f17e0 	cset	w0, eq  // eq = none
    307c:	d65f03c0 	ret

0000000000003080 <plat_secondary_cold_boot_setup>:
    3080:	97fffff5 	bl	3054 <plat_my_core_pos>
    3084:	d37df000 	lsl	x0, x0, #3
    3088:	d2800102 	mov	x2, #0x8                   	// #8
    308c:	f2a20002 	movk	x2, #0x1000, lsl #16
    3090:	8b020000 	add	x0, x0, x2
    3094:	d2800001 	mov	x1, #0x0                   	// #0
    3098:	f9000001 	str	x1, [x0]

000000000000309c <poll_mailbox>:
    309c:	d503205f 	wfe
    30a0:	f9400001 	ldr	x1, [x0]
    30a4:	f100043f 	cmp	x1, #0x1
    30a8:	54ffffa1 	b.ne	309c <poll_mailbox>  // b.any
    30ac:	d2a20000 	mov	x0, #0x10000000            	// #268435456
    30b0:	f9400001 	ldr	x1, [x0]
    30b4:	d61f0020 	br	x1

00000000000030b8 <plat_get_my_entrypoint>:
    30b8:	d2800000 	mov	x0, #0x0                   	// #0
    30bc:	d65f03c0 	ret

00000000000030c0 <platform_mem_init>:
    30c0:	d65f03c0 	ret

00000000000030c4 <plat_crash_console_init>:
    30c4:	d28a0800 	mov	x0, #0x5040                	// #20544
    30c8:	f2a7e420 	movk	x0, #0x3f21, lsl #16
    30cc:	d28ca001 	mov	x1, #0x6500                	// #25856
    30d0:	f2a3b9a1 	movk	x1, #0x1dcd, lsl #16
    30d4:	d2984002 	mov	x2, #0xc200                	// #49664
    30d8:	f2a00022 	movk	x2, #0x1, lsl #16
    30dc:	140001a7 	b	3778 <console_16550_core_init>

00000000000030e0 <plat_crash_console_putc>:
    30e0:	d28a0801 	mov	x1, #0x5040                	// #20544
    30e4:	f2a7e421 	movk	x1, #0x3f21, lsl #16
    30e8:	140001d5 	b	383c <console_16550_core_putc>

00000000000030ec <plat_crash_console_flush>:
    30ec:	d28a0800 	mov	x0, #0x5040                	// #20544
    30f0:	f2a7e420 	movk	x0, #0x3f21, lsl #16
    30f4:	140001fe 	b	38ec <console_16550_core_flush>

00000000000030f8 <smc_handler64>:
    30f8:	d280009e 	mov	x30, #0x4                   	// #4
    30fc:	eb0003df 	cmp	x30, x0
    3100:	540003c1 	b.ne	3178 <smc_handler>  // b.any
    3104:	d53e111e 	mrs	x30, scr_el3
    3108:	f24003df 	tst	x30, #0x1
    310c:	540002e1 	b.ne	3168 <unexpected_sync_exception>  // b.any
    3110:	f9408bfe 	ldr	x30, [sp, #272]
    3114:	d50040bf 	msr	spsel, #0x0
    3118:	910003df 	mov	sp, x30
    311c:	aa0103f4 	mov	x20, x1
    3120:	aa1403e0 	mov	x0, x20
    3124:	97fff8e5 	bl	14b8 <bl1_print_next_bl_ep_info>
    3128:	a9408680 	ldp	x0, x1, [x20, #8]
    312c:	d51e4020 	msr	elr_el3, x0
    3130:	d51e4001 	msr	spsr_el3, x1
    3134:	d3420c20 	ubfx	x0, x1, #2, #2
    3138:	f1000c1f 	cmp	x0, #0x3
    313c:	54000161 	b.ne	3168 <unexpected_sync_exception>  // b.any
    3140:	94000187 	bl	375c <disable_mmu_icache_el3>
    3144:	d50e871f 	tlbi	alle3
    3148:	d5033b9f 	dsb	ish
    314c:	aa1403e0 	mov	x0, x20
    3150:	94000187 	bl	376c <bl1_plat_prepare_exit>
    3154:	a9449e86 	ldp	x6, x7, [x20, #72]
    3158:	a9439684 	ldp	x4, x5, [x20, #56]
    315c:	a9428e82 	ldp	x2, x3, [x20, #40]
    3160:	a9418680 	ldp	x0, x1, [x20, #24]
    3164:	d69f03e0 	eret

0000000000003168 <unexpected_sync_exception>:
    3168:	d2800100 	mov	x0, #0x8                   	// #8
    316c:	9400017e 	bl	3764 <plat_report_exception>
    3170:	94000180 	bl	3770 <plat_panic_handler>
    3174:	d503201f 	nop

0000000000003178 <smc_handler>:
    3178:	94000072 	bl	3340 <save_gp_pmcr_pauth_regs>
    317c:	aa1f03e5 	mov	x5, xzr
    3180:	910003e6 	mov	x6, sp
    3184:	f94088cc 	ldr	x12, [x6, #272]
    3188:	d50040bf 	msr	spsel, #0x0
    318c:	9100019f 	mov	sp, x12
    3190:	d53e4010 	mrs	x16, spsr_el3
    3194:	d53e4031 	mrs	x17, elr_el3
    3198:	d53e1112 	mrs	x18, scr_el3
    319c:	a911c4d0 	stp	x16, x17, [x6, #280]
    31a0:	f90080d2 	str	x18, [x6, #256]
    31a4:	b3400247 	bfxil	x7, x18, #0, #1
    31a8:	97fff8cf 	bl	14e4 <bl1_smc_handler>
    31ac:	1400009c 	b	341c <el3_exit>

00000000000031b0 <reset_handler>:
    31b0:	aa1e03f3 	mov	x19, x30
    31b4:	9400016d 	bl	3768 <plat_reset_handler>
    31b8:	9400000b 	bl	31e4 <get_cpu_ops_ptr>
    31bc:	f100001f 	cmp	x0, #0x0
    31c0:	54000081 	b.ne	31d0 <reset_handler+0x20>  // b.any
    31c4:	10016ae0 	adr	x0, 5f20 <cortex_a53_cpu_str+0xb>
    31c8:	d2800461 	mov	x1, #0x23                  	// #35
    31cc:	1400009f 	b	3448 <asm_assert>
    31d0:	f9400402 	ldr	x2, [x0, #8]
    31d4:	aa1303fe 	mov	x30, x19
    31d8:	b4000042 	cbz	x2, 31e0 <reset_handler+0x30>
    31dc:	d61f0040 	br	x2
    31e0:	d65f03c0 	ret

00000000000031e4 <get_cpu_ops_ptr>:
    31e4:	10017264 	adr	x4, 6030 <__CPU_OPS_START__>
    31e8:	100173c5 	adr	x5, 6060 <__DATA_ROM_START__>
    31ec:	d2800000 	mov	x0, #0x0                   	// #0
    31f0:	d5380002 	mrs	x2, midr_el1
    31f4:	d29ffe03 	mov	x3, #0xfff0                	// #65520
    31f8:	f2bfe003 	movk	x3, #0xff00, lsl #16
    31fc:	0a030042 	and	w2, w2, w3
    3200:	eb05009f 	cmp	x4, x5
    3204:	540000c0 	b.eq	321c <error_exit>  // b.none
    3208:	f8430481 	ldr	x1, [x4], #48
    320c:	0a030021 	and	w1, w1, w3
    3210:	6b02003f 	cmp	w1, w2
    3214:	54ffff61 	b.ne	3200 <get_cpu_ops_ptr+0x1c>  // b.any
    3218:	d100c080 	sub	x0, x4, #0x30

000000000000321c <error_exit>:
    321c:	d65f03c0 	ret

0000000000003220 <cpu_get_rev_var>:
    3220:	d5380001 	mrs	x1, midr_el1
    3224:	d3505c20 	ubfx	x0, x1, #16, #8
    3228:	b3400c20 	bfxil	x0, x1, #0, #4
    322c:	d65f03c0 	ret

0000000000003230 <cpu_rev_var_ls>:
    3230:	d2800022 	mov	x2, #0x1                   	// #1
    3234:	d2800003 	mov	x3, #0x0                   	// #0
    3238:	eb01001f 	cmp	x0, x1
    323c:	9a839040 	csel	x0, x2, x3, ls  // ls = plast
    3240:	d65f03c0 	ret

0000000000003244 <cpu_rev_var_hs>:
    3244:	d2800022 	mov	x2, #0x1                   	// #1
    3248:	d2800003 	mov	x3, #0x0                   	// #0
    324c:	eb01001f 	cmp	x0, x1
    3250:	9a832040 	csel	x0, x2, x3, cs  // cs = hs, nlast
    3254:	d65f03c0 	ret

0000000000003258 <print_errata_status>:
    3258:	a9bf7bff 	stp	xzr, x30, [sp, #-16]!
    325c:	97ffffe2 	bl	31e4 <get_cpu_ops_ptr>
    3260:	a8c17bff 	ldp	xzr, x30, [sp], #16
    3264:	f9401401 	ldr	x1, [x0, #40]
    3268:	b5000041 	cbnz	x1, 3270 <print_errata_status+0x18>
    326c:	d65f03c0 	ret
    3270:	d61f0020 	br	x1

0000000000003274 <el1_sysregs_context_restore>:
    3274:	a9402809 	ldp	x9, x10, [x0]
    3278:	d5184009 	msr	spsr_el1, x9
    327c:	d518402a 	msr	elr_el1, x10
    3280:	a941400f 	ldp	x15, x16, [x0, #16]
    3284:	d518100f 	msr	sctlr_el1, x15
    3288:	d5181030 	msr	actlr_el1, x16
    328c:	a9422411 	ldp	x17, x9, [x0, #32]
    3290:	d5181051 	msr	cpacr_el1, x17
    3294:	d51a0009 	msr	csselr_el1, x9
    3298:	a9432c0a 	ldp	x10, x11, [x0, #48]
    329c:	d51c410a 	msr	sp_el1, x10
    32a0:	d518520b 	msr	esr_el1, x11
    32a4:	a944340c 	ldp	x12, x13, [x0, #64]
    32a8:	d518200c 	msr	ttbr0_el1, x12
    32ac:	d518202d 	msr	ttbr1_el1, x13
    32b0:	a9453c0e 	ldp	x14, x15, [x0, #80]
    32b4:	d518a20e 	msr	mair_el1, x14
    32b8:	d518a30f 	msr	amair_el1, x15
    32bc:	a9464410 	ldp	x16, x17, [x0, #96]
    32c0:	d5182050 	msr	tcr_el1, x16
    32c4:	d518d091 	msr	tpidr_el1, x17
    32c8:	a9472809 	ldp	x9, x10, [x0, #112]
    32cc:	d51bd049 	msr	tpidr_el0, x9
    32d0:	d51bd06a 	msr	tpidrro_el0, x10
    32d4:	a948380d 	ldp	x13, x14, [x0, #128]
    32d8:	d518740d 	msr	par_el1, x13
    32dc:	d518600e 	msr	far_el1, x14
    32e0:	a949400f 	ldp	x15, x16, [x0, #144]
    32e4:	d518510f 	msr	afsr0_el1, x15
    32e8:	d5185130 	msr	afsr1_el1, x16
    32ec:	a94a2411 	ldp	x17, x9, [x0, #160]
    32f0:	d518d031 	msr	contextidr_el1, x17
    32f4:	d518c009 	msr	vbar_el1, x9
    32f8:	a94b300b 	ldp	x11, x12, [x0, #176]
    32fc:	d51c432b 	msr	spsr_abt, x11
    3300:	d51c434c 	msr	spsr_und, x12
    3304:	a94c380d 	ldp	x13, x14, [x0, #192]
    3308:	d51c430d 	msr	spsr_irq, x13
    330c:	d51c436e 	msr	spsr_fiq, x14
    3310:	a94d400f 	ldp	x15, x16, [x0, #208]
    3314:	d51c300f 	msr	dacr32_el2, x15
    3318:	d51c5030 	msr	ifsr32_el2, x16
    331c:	a94e2c0a 	ldp	x10, x11, [x0, #224]
    3320:	d51be22a 	msr	cntp_ctl_el0, x10
    3324:	d51be24b 	msr	cntp_cval_el0, x11
    3328:	a94f340c 	ldp	x12, x13, [x0, #240]
    332c:	d51be32c 	msr	cntv_ctl_el0, x12
    3330:	d51be34d 	msr	cntv_cval_el0, x13
    3334:	f940800e 	ldr	x14, [x0, #256]
    3338:	d518e10e 	msr	cntkctl_el1, x14
    333c:	d65f03c0 	ret

0000000000003340 <save_gp_pmcr_pauth_regs>:
    3340:	a90007e0 	stp	x0, x1, [sp]
    3344:	a9010fe2 	stp	x2, x3, [sp, #16]
    3348:	a90217e4 	stp	x4, x5, [sp, #32]
    334c:	a9031fe6 	stp	x6, x7, [sp, #48]
    3350:	a90427e8 	stp	x8, x9, [sp, #64]
    3354:	a9052fea 	stp	x10, x11, [sp, #80]
    3358:	a90637ec 	stp	x12, x13, [sp, #96]
    335c:	a9073fee 	stp	x14, x15, [sp, #112]
    3360:	a90847f0 	stp	x16, x17, [sp, #128]
    3364:	a9094ff2 	stp	x18, x19, [sp, #144]
    3368:	a90a57f4 	stp	x20, x21, [sp, #160]
    336c:	a90b5ff6 	stp	x22, x23, [sp, #176]
    3370:	a90c67f8 	stp	x24, x25, [sp, #192]
    3374:	a90d6ffa 	stp	x26, x27, [sp, #208]
    3378:	a90e77fc 	stp	x28, x29, [sp, #224]
    337c:	d5384112 	mrs	x18, sp_el0
    3380:	f9007ff2 	str	x18, [sp, #248]
    3384:	d53e1329 	mrs	x9, mdcr_el3
    3388:	f269013f 	tst	x9, #0x800000
    338c:	54000121 	b.ne	33b0 <save_gp_pmcr_pauth_regs+0x70>  // b.any
    3390:	d53b9c09 	mrs	x9, pmcr_el0
    3394:	d53e110a 	mrs	x10, scr_el3
    3398:	f240015f 	tst	x10, #0x1
    339c:	54000040 	b.eq	33a4 <save_gp_pmcr_pauth_regs+0x64>  // b.none
    33a0:	f90097e9 	str	x9, [sp, #296]
    33a4:	b27b0129 	orr	x9, x9, #0x20
    33a8:	d51b9c09 	msr	pmcr_el0, x9
    33ac:	d5033fdf 	isb
    33b0:	d65f03c0 	ret

00000000000033b4 <restore_gp_pmcr_pauth_regs>:
    33b4:	d53e1100 	mrs	x0, scr_el3
    33b8:	f240001f 	tst	x0, #0x1
    33bc:	540000c0 	b.eq	33d4 <restore_gp_pmcr_pauth_regs+0x20>  // b.none
    33c0:	d53e1320 	mrs	x0, mdcr_el3
    33c4:	f269001f 	tst	x0, #0x800000
    33c8:	54000061 	b.ne	33d4 <restore_gp_pmcr_pauth_regs+0x20>  // b.any
    33cc:	f94097e0 	ldr	x0, [sp, #296]
    33d0:	d51b9c00 	msr	pmcr_el0, x0
    33d4:	a94007e0 	ldp	x0, x1, [sp]
    33d8:	a9410fe2 	ldp	x2, x3, [sp, #16]
    33dc:	a94217e4 	ldp	x4, x5, [sp, #32]
    33e0:	a9431fe6 	ldp	x6, x7, [sp, #48]
    33e4:	a94427e8 	ldp	x8, x9, [sp, #64]
    33e8:	a9452fea 	ldp	x10, x11, [sp, #80]
    33ec:	a94637ec 	ldp	x12, x13, [sp, #96]
    33f0:	a9473fee 	ldp	x14, x15, [sp, #112]
    33f4:	a94847f0 	ldp	x16, x17, [sp, #128]
    33f8:	a9494ff2 	ldp	x18, x19, [sp, #144]
    33fc:	a94a57f4 	ldp	x20, x21, [sp, #160]
    3400:	a94b5ff6 	ldp	x22, x23, [sp, #176]
    3404:	a94c67f8 	ldp	x24, x25, [sp, #192]
    3408:	a94d6ffa 	ldp	x26, x27, [sp, #208]
    340c:	f9407ffc 	ldr	x28, [sp, #248]
    3410:	d518411c 	msr	sp_el0, x28
    3414:	a94e77fc 	ldp	x28, x29, [sp, #224]
    3418:	d65f03c0 	ret

000000000000341c <el3_exit>:
    341c:	910003f1 	mov	x17, sp
    3420:	d50041bf 	msr	spsel, #0x1
    3424:	f9008bf1 	str	x17, [sp, #272]
    3428:	f94083f2 	ldr	x18, [sp, #256]
    342c:	a951c7f0 	ldp	x16, x17, [sp, #280]
    3430:	d51e1112 	msr	scr_el3, x18
    3434:	d51e4010 	msr	spsr_el3, x16
    3438:	d51e4031 	msr	elr_el3, x17
    343c:	97ffffde 	bl	33b4 <restore_gp_pmcr_pauth_regs>
    3440:	f9407bfe 	ldr	x30, [sp, #240]
    3444:	d69f03e0 	eret

0000000000003448 <asm_assert>:
    3448:	aa0003e5 	mov	x5, x0
    344c:	aa0103e6 	mov	x6, x1
    3450:	97ffff1d 	bl	30c4 <plat_crash_console_init>
    3454:	b4000260 	cbz	x0, 34a0 <_assert_loop>
    3458:	70015724 	adr	x4, 5f3f <assert_msg1>
    345c:	94000013 	bl	34a8 <asm_print_str>
    3460:	aa0503e4 	mov	x4, x5
    3464:	94000011 	bl	34a8 <asm_print_str>
    3468:	30015724 	adr	x4, 5f4d <assert_msg2>
    346c:	9400000f 	bl	34a8 <asm_print_str>
    3470:	f270bcdf 	tst	x6, #0xffffffffffff0000
    3474:	54000161 	b.ne	34a0 <_assert_loop>  // b.any
    3478:	aa0603e4 	mov	x4, x6
    347c:	d2800146 	mov	x6, #0xa                   	// #10
    3480:	d284e205 	mov	x5, #0x2710                	// #10000

0000000000003484 <dec_print_loop>:
    3484:	9ac50880 	udiv	x0, x4, x5
    3488:	9b059004 	msub	x4, x0, x5, x4
    348c:	9100c000 	add	x0, x0, #0x30
    3490:	97ffff14 	bl	30e0 <plat_crash_console_putc>
    3494:	9ac608a5 	udiv	x5, x5, x6
    3498:	b5ffff65 	cbnz	x5, 3484 <dec_print_loop>
    349c:	97ffff14 	bl	30ec <plat_crash_console_flush>

00000000000034a0 <_assert_loop>:
    34a0:	940000b4 	bl	3770 <plat_panic_handler>
    34a4:	d503201f 	nop

00000000000034a8 <asm_print_str>:
    34a8:	aa1e03e3 	mov	x3, x30
    34ac:	38401480 	ldrb	w0, [x4], #1
    34b0:	b4000060 	cbz	x0, 34bc <asm_print_str+0x14>
    34b4:	97ffff0b 	bl	30e0 <plat_crash_console_putc>
    34b8:	17fffffd 	b	34ac <asm_print_str+0x4>
    34bc:	d65f0060 	ret	x3

00000000000034c0 <asm_print_hex>:
    34c0:	d2800805 	mov	x5, #0x40                  	// #64

00000000000034c4 <asm_print_hex_bits>:
    34c4:	aa1e03e3 	mov	x3, x30
    34c8:	d10010a5 	sub	x5, x5, #0x4
    34cc:	9ac52480 	lsr	x0, x4, x5
    34d0:	92400c00 	and	x0, x0, #0xf
    34d4:	f100281f 	cmp	x0, #0xa
    34d8:	54000043 	b.cc	34e0 <asm_print_hex_bits+0x1c>  // b.lo, b.ul, b.last
    34dc:	91009c00 	add	x0, x0, #0x27
    34e0:	9100c000 	add	x0, x0, #0x30
    34e4:	97fffeff 	bl	30e0 <plat_crash_console_putc>
    34e8:	b5ffff05 	cbnz	x5, 34c8 <asm_print_hex_bits+0x4>
    34ec:	d65f0060 	ret	x3

00000000000034f0 <do_panic>:
    34f0:	f81f0fe0 	str	x0, [sp, #-16]!
    34f4:	d5384240 	mrs	x0, currentel
    34f8:	d3420c00 	ubfx	x0, x0, #2, #2
    34fc:	f1000c1f 	cmp	x0, #0x3
    3500:	f84107e0 	ldr	x0, [sp], #16
    3504:	54000020 	b.eq	3508 <el3_panic>  // b.none

0000000000003508 <el3_panic>:
    3508:	aa1e03e6 	mov	x6, x30
    350c:	97fffeee 	bl	30c4 <plat_crash_console_init>
    3510:	b40000e0 	cbz	x0, 352c <_panic_handler>
    3514:	10015204 	adr	x4, 5f54 <panic_msg>
    3518:	97ffffe4 	bl	34a8 <asm_print_str>
    351c:	aa0603e4 	mov	x4, x6
    3520:	d1001084 	sub	x4, x4, #0x4
    3524:	97ffffe7 	bl	34c0 <asm_print_hex>
    3528:	97fffef1 	bl	30ec <plat_crash_console_flush>

000000000000352c <_panic_handler>:
    352c:	aa0603fe 	mov	x30, x6
    3530:	14000090 	b	3770 <plat_panic_handler>

0000000000003534 <flush_dcache_range>:
    3534:	b40001a1 	cbz	x1, 3568 <exit_loop_civac>
    3538:	d53b0023 	mrs	x3, ctr_el0
    353c:	d3504c63 	ubfx	x3, x3, #16, #4
    3540:	d2800082 	mov	x2, #0x4                   	// #4
    3544:	9ac32042 	lsl	x2, x2, x3
    3548:	8b010001 	add	x1, x0, x1
    354c:	d1000443 	sub	x3, x2, #0x1
    3550:	8a230000 	bic	x0, x0, x3

0000000000003554 <loop_civac>:
    3554:	d50b7e20 	dc	civac, x0
    3558:	8b020000 	add	x0, x0, x2
    355c:	eb01001f 	cmp	x0, x1
    3560:	54ffffa3 	b.cc	3554 <loop_civac>  // b.lo, b.ul, b.last
    3564:	d5033f9f 	dsb	sy

0000000000003568 <exit_loop_civac>:
    3568:	d65f03c0 	ret

000000000000356c <clean_dcache_range>:
    356c:	b40001a1 	cbz	x1, 35a0 <exit_loop_cvac>
    3570:	d53b0023 	mrs	x3, ctr_el0
    3574:	d3504c63 	ubfx	x3, x3, #16, #4
    3578:	d2800082 	mov	x2, #0x4                   	// #4
    357c:	9ac32042 	lsl	x2, x2, x3
    3580:	8b010001 	add	x1, x0, x1
    3584:	d1000443 	sub	x3, x2, #0x1
    3588:	8a230000 	bic	x0, x0, x3

000000000000358c <loop_cvac>:
    358c:	d50b7a20 	dc	cvac, x0
    3590:	8b020000 	add	x0, x0, x2
    3594:	eb01001f 	cmp	x0, x1
    3598:	54ffffa3 	b.cc	358c <loop_cvac>  // b.lo, b.ul, b.last
    359c:	d5033f9f 	dsb	sy

00000000000035a0 <exit_loop_cvac>:
    35a0:	d65f03c0 	ret

00000000000035a4 <inv_dcache_range>:
    35a4:	b40001a1 	cbz	x1, 35d8 <exit_loop_ivac>
    35a8:	d53b0023 	mrs	x3, ctr_el0
    35ac:	d3504c63 	ubfx	x3, x3, #16, #4
    35b0:	d2800082 	mov	x2, #0x4                   	// #4
    35b4:	9ac32042 	lsl	x2, x2, x3
    35b8:	8b010001 	add	x1, x0, x1
    35bc:	d1000443 	sub	x3, x2, #0x1
    35c0:	8a230000 	bic	x0, x0, x3

00000000000035c4 <loop_ivac>:
    35c4:	d5087620 	dc	ivac, x0
    35c8:	8b020000 	add	x0, x0, x2
    35cc:	eb01001f 	cmp	x0, x1
    35d0:	54ffffa3 	b.cc	35c4 <loop_ivac>  // b.lo, b.ul, b.last
    35d4:	d5033f9f 	dsb	sy

00000000000035d8 <exit_loop_ivac>:
    35d8:	d65f03c0 	ret

00000000000035dc <zeromem>:
    35dc:	8b010002 	add	x2, x0, x1
    35e0:	1400003b 	b	36cc <zero_normalmem+0xe8>

00000000000035e4 <zero_normalmem>:
    35e4:	d53e1004 	mrs	x4, sctlr_el3
    35e8:	f240009f 	tst	x4, #0x1
    35ec:	54000081 	b.ne	35fc <zero_normalmem+0x18>  // b.any
    35f0:	30014ba0 	adr	x0, 5f65 <panic_msg+0x11>
    35f4:	d2801581 	mov	x1, #0xac                  	// #172
    35f8:	17ffff94 	b	3448 <asm_assert>
    35fc:	8b010002 	add	x2, x0, x1
    3600:	d53b00e3 	mrs	x3, dczid_el0
    3604:	d3400c63 	ubfx	x3, x3, #0, #4
    3608:	d2800085 	mov	x5, #0x4                   	// #4
    360c:	9ac320a3 	lsl	x3, x5, x3
    3610:	f100407f 	cmp	x3, #0x10
    3614:	54000082 	b.cs	3624 <zero_normalmem+0x40>  // b.hs, b.nlast
    3618:	30014a60 	adr	x0, 5f65 <panic_msg+0x11>
    361c:	d28018c1 	mov	x1, #0xc6                  	// #198
    3620:	17ffff8a 	b	3448 <asm_assert>
    3624:	eb03003f 	cmp	x1, x3
    3628:	54000523 	b.cc	36cc <zero_normalmem+0xe8>  // b.lo, b.ul, b.last
    362c:	d1000461 	sub	x1, x3, #0x1
    3630:	ea01001f 	tst	x0, x1
    3634:	54000260 	b.eq	3680 <zero_normalmem+0x9c>  // b.none
    3638:	aa010004 	orr	x4, x0, x1
    363c:	91000484 	add	x4, x4, #0x1
    3640:	b4000464 	cbz	x4, 36cc <zero_normalmem+0xe8>
    3644:	eb02009f 	cmp	x4, x2
    3648:	54000428 	b.hi	36cc <zero_normalmem+0xe8>  // b.pmore
    364c:	f2400c1f 	tst	x0, #0xf
    3650:	540000e0 	b.eq	366c <zero_normalmem+0x88>  // b.none
    3654:	b2400c05 	orr	x5, x0, #0xf
    3658:	910004a5 	add	x5, x5, #0x1
    365c:	b4000385 	cbz	x5, 36cc <zero_normalmem+0xe8>
    3660:	3800141f 	strb	wzr, [x0], #1
    3664:	eb05001f 	cmp	x0, x5
    3668:	54ffffc1 	b.ne	3660 <zero_normalmem+0x7c>  // b.any
    366c:	eb04001f 	cmp	x0, x4
    3670:	54000082 	b.cs	3680 <zero_normalmem+0x9c>  // b.hs, b.nlast
    3674:	a8817c1f 	stp	xzr, xzr, [x0], #16
    3678:	eb04001f 	cmp	x0, x4
    367c:	54ffffc3 	b.cc	3674 <zero_normalmem+0x90>  // b.lo, b.ul, b.last
    3680:	8a210044 	bic	x4, x2, x1
    3684:	eb04001f 	cmp	x0, x4
    3688:	540000a2 	b.cs	369c <zero_normalmem+0xb8>  // b.hs, b.nlast
    368c:	d50b7420 	dc	zva, x0
    3690:	8b030000 	add	x0, x0, x3
    3694:	eb04001f 	cmp	x0, x4
    3698:	54ffffa3 	b.cc	368c <zero_normalmem+0xa8>  // b.lo, b.ul, b.last
    369c:	927cec44 	and	x4, x2, #0xfffffffffffffff0
    36a0:	eb04001f 	cmp	x0, x4
    36a4:	54000082 	b.cs	36b4 <zero_normalmem+0xd0>  // b.hs, b.nlast
    36a8:	a8817c1f 	stp	xzr, xzr, [x0], #16
    36ac:	eb04001f 	cmp	x0, x4
    36b0:	54ffffc3 	b.cc	36a8 <zero_normalmem+0xc4>  // b.lo, b.ul, b.last
    36b4:	eb02001f 	cmp	x0, x2
    36b8:	54000080 	b.eq	36c8 <zero_normalmem+0xe4>  // b.none
    36bc:	3800141f 	strb	wzr, [x0], #1
    36c0:	eb02001f 	cmp	x0, x2
    36c4:	54ffffc1 	b.ne	36bc <zero_normalmem+0xd8>  // b.any
    36c8:	d65f03c0 	ret
    36cc:	f2400c1f 	tst	x0, #0xf
    36d0:	54fffe60 	b.eq	369c <zero_normalmem+0xb8>  // b.none
    36d4:	b2400c04 	orr	x4, x0, #0xf
    36d8:	91000484 	add	x4, x4, #0x1
    36dc:	b4fffec4 	cbz	x4, 36b4 <zero_normalmem+0xd0>
    36e0:	eb02009f 	cmp	x4, x2
    36e4:	54fffe82 	b.cs	36b4 <zero_normalmem+0xd0>  // b.hs, b.nlast
    36e8:	3800141f 	strb	wzr, [x0], #1
    36ec:	eb04001f 	cmp	x0, x4
    36f0:	54ffffc1 	b.ne	36e8 <zero_normalmem+0x104>  // b.any
    36f4:	17ffffea 	b	369c <zero_normalmem+0xb8>

00000000000036f8 <memcpy16>:
    36f8:	aa010003 	orr	x3, x0, x1
    36fc:	f2400c7f 	tst	x3, #0xf
    3700:	54000080 	b.eq	3710 <m_loop16>  // b.none
    3704:	30014300 	adr	x0, 5f65 <panic_msg+0x11>
    3708:	d2803101 	mov	x1, #0x188                 	// #392
    370c:	17ffff4f 	b	3448 <asm_assert>

0000000000003710 <m_loop16>:
    3710:	f100405f 	cmp	x2, #0x10
    3714:	540000a3 	b.cc	3728 <m_loop1>  // b.lo, b.ul, b.last
    3718:	a8c11023 	ldp	x3, x4, [x1], #16
    371c:	a8811003 	stp	x3, x4, [x0], #16
    3720:	d1004042 	sub	x2, x2, #0x10
    3724:	17fffffb 	b	3710 <m_loop16>

0000000000003728 <m_loop1>:
    3728:	b40000a2 	cbz	x2, 373c <m_end>
    372c:	38401423 	ldrb	w3, [x1], #1
    3730:	38001403 	strb	w3, [x0], #1
    3734:	f1000442 	subs	x2, x2, #0x1
    3738:	54ffff81 	b.ne	3728 <m_loop1>  // b.any

000000000000373c <m_end>:
    373c:	d65f03c0 	ret

0000000000003740 <disable_mmu_el3>:
    3740:	d28000a1 	mov	x1, #0x5                   	// #5

0000000000003744 <do_disable_mmu_el3>:
    3744:	d53e1000 	mrs	x0, sctlr_el3
    3748:	8a210000 	bic	x0, x0, x1
    374c:	d51e1000 	msr	sctlr_el3, x0
    3750:	d5033fdf 	isb
    3754:	d5033f9f 	dsb	sy
    3758:	d65f03c0 	ret

000000000000375c <disable_mmu_icache_el3>:
    375c:	d28200a1 	mov	x1, #0x1005                	// #4101
    3760:	17fffff9 	b	3744 <do_disable_mmu_el3>

0000000000003764 <plat_report_exception>:
    3764:	d65f03c0 	ret

0000000000003768 <plat_reset_handler>:
    3768:	d65f03c0 	ret

000000000000376c <bl1_plat_prepare_exit>:
    376c:	d65f03c0 	ret

0000000000003770 <plat_panic_handler>:
    3770:	d503207f 	wfi
    3774:	17ffffff 	b	3770 <plat_panic_handler>

0000000000003778 <console_16550_core_init>:
    3778:	b4000340 	cbz	x0, 37e0 <init_fail>
    377c:	34000321 	cbz	w1, 37e0 <init_fail>
    3780:	34000302 	cbz	w2, 37e0 <init_fail>
    3784:	531c6c42 	lsl	w2, w2, #4
    3788:	1ac20822 	udiv	w2, w1, w2
    378c:	12001c41 	and	w1, w2, #0xff
    3790:	53087c42 	lsr	w2, w2, #8
    3794:	12001c42 	and	w2, w2, #0xff
    3798:	b9400c03 	ldr	w3, [x0, #12]
    379c:	32190063 	orr	w3, w3, #0x80
    37a0:	b9000c03 	str	w3, [x0, #12]
    37a4:	b9000001 	str	w1, [x0]
    37a8:	b9000402 	str	w2, [x0, #4]
    37ac:	12801002 	mov	w2, #0xffffff7f            	// #-129
    37b0:	0a020063 	and	w3, w3, w2
    37b4:	b9000c03 	str	w3, [x0, #12]
    37b8:	52800063 	mov	w3, #0x3                   	// #3
    37bc:	b9000c03 	str	w3, [x0, #12]
    37c0:	52800003 	mov	w3, #0x0                   	// #0
    37c4:	b9000403 	str	w3, [x0, #4]
    37c8:	52800123 	mov	w3, #0x9                   	// #9
    37cc:	b9000803 	str	w3, [x0, #8]
    37d0:	52800063 	mov	w3, #0x3                   	// #3
    37d4:	b9001003 	str	w3, [x0, #16]
    37d8:	52800020 	mov	w0, #0x1                   	// #1
    37dc:	d65f03c0 	ret

00000000000037e0 <init_fail>:
    37e0:	52800000 	mov	w0, #0x0                   	// #0
    37e4:	d65f03c0 	ret

00000000000037e8 <console_16550_register>:
    37e8:	aa1e03e7 	mov	x7, x30
    37ec:	aa0303e6 	mov	x6, x3
    37f0:	b4000246 	cbz	x6, 3838 <register_fail>
    37f4:	f90014c0 	str	x0, [x6, #40]
    37f8:	97ffffe0 	bl	3778 <console_16550_core_init>
    37fc:	b40001e0 	cbz	x0, 3838 <register_fail>
    3800:	aa0603e0 	mov	x0, x6
    3804:	aa0703fe 	mov	x30, x7
    3808:	90000001 	adrp	x1, 3000 <cortex_a53_errata_report+0xa4>
    380c:	91222021 	add	x1, x1, #0x888
    3810:	f9000801 	str	x1, [x0, #16]
    3814:	90000001 	adrp	x1, 3000 <cortex_a53_errata_report+0xa4>
    3818:	91234021 	add	x1, x1, #0x8d0
    381c:	f9000c01 	str	x1, [x0, #24]
    3820:	90000001 	adrp	x1, 3000 <cortex_a53_errata_report+0xa4>
    3824:	91246021 	add	x1, x1, #0x918
    3828:	f9001001 	str	x1, [x0, #32]
    382c:	d28000a1 	mov	x1, #0x5                   	// #5
    3830:	f9000401 	str	x1, [x0, #8]
    3834:	17fff94c 	b	1d64 <console_register>

0000000000003838 <register_fail>:
    3838:	d65f00e0 	ret	x7

000000000000383c <console_16550_core_putc>:
    383c:	f100003f 	cmp	x1, #0x0
    3840:	54000081 	b.ne	3850 <console_16550_core_putc+0x14>  // b.any
    3844:	100139e0 	adr	x0, 5f80 <panic_msg+0x2c>
    3848:	d28010a1 	mov	x1, #0x85                  	// #133
    384c:	17fffeff 	b	3448 <asm_assert>
    3850:	7100281f 	cmp	w0, #0xa
    3854:	540000e1 	b.ne	3870 <console_16550_core_putc+0x34>  // b.any
    3858:	b9401422 	ldr	w2, [x1, #20]
    385c:	121b0442 	and	w2, w2, #0x60
    3860:	7101805f 	cmp	w2, #0x60
    3864:	54ffffa1 	b.ne	3858 <console_16550_core_putc+0x1c>  // b.any
    3868:	528001a2 	mov	w2, #0xd                   	// #13
    386c:	b9000022 	str	w2, [x1]
    3870:	b9401422 	ldr	w2, [x1, #20]
    3874:	121b0442 	and	w2, w2, #0x60
    3878:	7101805f 	cmp	w2, #0x60
    387c:	54ffffa1 	b.ne	3870 <console_16550_core_putc+0x34>  // b.any
    3880:	b9000020 	str	w0, [x1]
    3884:	d65f03c0 	ret

0000000000003888 <console_16550_putc>:
    3888:	f100003f 	cmp	x1, #0x0
    388c:	54000081 	b.ne	389c <console_16550_putc+0x14>  // b.any
    3890:	10013780 	adr	x0, 5f80 <panic_msg+0x2c>
    3894:	d2801521 	mov	x1, #0xa9                  	// #169
    3898:	17fffeec 	b	3448 <asm_assert>
    389c:	f9401421 	ldr	x1, [x1, #40]
    38a0:	17ffffe7 	b	383c <console_16550_core_putc>

00000000000038a4 <console_16550_core_getc>:
    38a4:	f100001f 	cmp	x0, #0x0
    38a8:	54000081 	b.ne	38b8 <console_16550_core_getc+0x14>  // b.any
    38ac:	100136a0 	adr	x0, 5f80 <panic_msg+0x2c>
    38b0:	d2801781 	mov	x1, #0xbc                  	// #188
    38b4:	17fffee5 	b	3448 <asm_assert>
    38b8:	b9401401 	ldr	w1, [x0, #20]
    38bc:	36000061 	tbz	w1, #0, 38c8 <no_char>
    38c0:	b9400000 	ldr	w0, [x0]
    38c4:	d65f03c0 	ret

00000000000038c8 <no_char>:
    38c8:	12800000 	mov	w0, #0xffffffff            	// #-1
    38cc:	d65f03c0 	ret

00000000000038d0 <console_16550_getc>:
    38d0:	f100003f 	cmp	x1, #0x0
    38d4:	54000081 	b.ne	38e4 <console_16550_getc+0x14>  // b.any
    38d8:	10013540 	adr	x0, 5f80 <panic_msg+0x2c>
    38dc:	d2801ac1 	mov	x1, #0xd6                  	// #214
    38e0:	17fffeda 	b	3448 <asm_assert>
    38e4:	f9401400 	ldr	x0, [x0, #40]
    38e8:	17ffffef 	b	38a4 <console_16550_core_getc>

00000000000038ec <console_16550_core_flush>:
    38ec:	f100001f 	cmp	x0, #0x0
    38f0:	54000081 	b.ne	3900 <console_16550_core_flush+0x14>  // b.any
    38f4:	10013460 	adr	x0, 5f80 <panic_msg+0x2c>
    38f8:	d2801d01 	mov	x1, #0xe8                  	// #232
    38fc:	17fffed3 	b	3448 <asm_assert>
    3900:	b9401401 	ldr	w1, [x0, #20]
    3904:	121b0421 	and	w1, w1, #0x60
    3908:	7101803f 	cmp	w1, #0x60
    390c:	54ffffa1 	b.ne	3900 <console_16550_core_flush+0x14>  // b.any
    3910:	52800000 	mov	w0, #0x0                   	// #0
    3914:	d65f03c0 	ret

0000000000003918 <console_16550_flush>:
    3918:	f100001f 	cmp	x0, #0x0
    391c:	54000081 	b.ne	392c <console_16550_flush+0x14>  // b.any
    3920:	10013300 	adr	x0, 5f80 <panic_msg+0x2c>
    3924:	d2802021 	mov	x1, #0x101                 	// #257
    3928:	17fffec8 	b	3448 <asm_assert>
    392c:	f9401400 	ldr	x0, [x0, #40]
    3930:	17ffffef 	b	38ec <console_16550_core_flush>

0000000000003934 <enable_mmu_direct_el3>:
    3934:	d53e1001 	mrs	x1, sctlr_el3
    3938:	f240003f 	tst	x1, #0x1
    393c:	54000080 	b.eq	394c <enable_mmu_direct_el3+0x18>  // b.none
    3940:	10013340 	adr	x0, 5fa8 <panic_msg+0x54>
    3944:	d2800541 	mov	x1, #0x2a                  	// #42
    3948:	17fffec0 	b	3448 <asm_assert>
    394c:	d50e871f 	tlbi	alle3
    3950:	aa0003e7 	mov	x7, x0
    3954:	f0080760 	adrp	x0, 100f2000 <platform_normal_stacks+0x3f00>
    3958:	91264000 	add	x0, x0, #0x990
    395c:	f9400001 	ldr	x1, [x0]
    3960:	d51ea201 	msr	mair_el3, x1
    3964:	f9400402 	ldr	x2, [x0, #8]
    3968:	d51e2042 	msr	tcr_el3, x2
    396c:	f9400803 	ldr	x3, [x0, #16]
    3970:	d51e2003 	msr	ttbr0_el3, x3
    3974:	d5033b9f 	dsb	ish
    3978:	d5033fdf 	isb
    397c:	d53e1004 	mrs	x4, sctlr_el3
    3980:	d28000a5 	mov	x5, #0x5                   	// #5
    3984:	f2a00105 	movk	x5, #0x8, lsl #16
    3988:	aa050084 	orr	x4, x4, x5
    398c:	927df885 	and	x5, x4, #0xfffffffffffffffb
    3990:	f24000ff 	tst	x7, #0x1
    3994:	9a8410a4 	csel	x4, x5, x4, ne  // ne = any
    3998:	d51e1004 	msr	sctlr_el3, x4
    399c:	d5033fdf 	isb
    39a0:	d65f03c0 	ret

00000000000039a4 <__assert>:
    39a4:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
    39a8:	2a0103e2 	mov	w2, w1
    39ac:	aa0003e1 	mov	x1, x0
    39b0:	910003fd 	mov	x29, sp
    39b4:	d0000000 	adrp	x0, 5000 <__TEXT_END__>
    39b8:	913f4000 	add	x0, x0, #0xfd0
    39bc:	9400015c 	bl	3f2c <printf>
    39c0:	d0000000 	adrp	x0, 5000 <__TEXT_END__>
    39c4:	913f7c00 	add	x0, x0, #0xfdf
    39c8:	97fff988 	bl	1fe8 <backtrace>
    39cc:	97fff936 	bl	1ea4 <console_flush>
    39d0:	97ffff68 	bl	3770 <plat_panic_handler>

00000000000039d4 <memcmp>:
    39d4:	d1000421 	sub	x1, x1, #0x1
    39d8:	d2800004 	mov	x4, #0x0                   	// #0
    39dc:	eb04005f 	cmp	x2, x4
    39e0:	54000061 	b.ne	39ec <memcmp+0x18>  // b.any
    39e4:	52800000 	mov	w0, #0x0                   	// #0
    39e8:	14000007 	b	3a04 <memcmp+0x30>
    39ec:	38646803 	ldrb	w3, [x0, x4]
    39f0:	91000484 	add	x4, x4, #0x1
    39f4:	38646825 	ldrb	w5, [x1, x4]
    39f8:	6b05007f 	cmp	w3, w5
    39fc:	54ffff00 	b.eq	39dc <memcmp+0x8>  // b.none
    3a00:	4b050060 	sub	w0, w3, w5
    3a04:	d65f03c0 	ret

0000000000003a08 <memcpy>:
    3a08:	d2800003 	mov	x3, #0x0                   	// #0
    3a0c:	eb03005f 	cmp	x2, x3
    3a10:	54000041 	b.ne	3a18 <memcpy+0x10>  // b.any
    3a14:	d65f03c0 	ret
    3a18:	38636824 	ldrb	w4, [x1, x3]
    3a1c:	38236804 	strb	w4, [x0, x3]
    3a20:	91000463 	add	x3, x3, #0x1
    3a24:	17fffffa 	b	3a0c <memcpy+0x4>

0000000000003a28 <memmove>:
    3a28:	cb010006 	sub	x6, x0, x1
    3a2c:	aa0003e5 	mov	x5, x0
    3a30:	eb0200df 	cmp	x6, x2
    3a34:	54000043 	b.cc	3a3c <memmove+0x14>  // b.lo, b.ul, b.last
    3a38:	17fffff4 	b	3a08 <memcpy>
    3a3c:	8b020024 	add	x4, x1, x2
    3a40:	8b020000 	add	x0, x0, x2
    3a44:	eb05001f 	cmp	x0, x5
    3a48:	54000041 	b.ne	3a50 <memmove+0x28>  // b.any
    3a4c:	d65f03c0 	ret
    3a50:	385ffc81 	ldrb	w1, [x4, #-1]!
    3a54:	381ffc01 	strb	w1, [x0, #-1]!
    3a58:	17fffffb 	b	3a44 <memmove+0x1c>

0000000000003a5c <unsigned_num_print>:
    3a5c:	a9ba7bfd 	stp	x29, x30, [sp, #-96]!
    3a60:	2a0103e1 	mov	w1, w1
    3a64:	910003fd 	mov	x29, sp
    3a68:	a9025bf5 	stp	x21, x22, [sp, #32]
    3a6c:	910123f5 	add	x21, sp, #0x48
    3a70:	f9001bf7 	str	x23, [sp, #48]
    3a74:	12001c57 	and	w23, w2, #0xff
    3a78:	a90153f3 	stp	x19, x20, [sp, #16]
    3a7c:	2a0303f3 	mov	w19, w3
    3a80:	d2800003 	mov	x3, #0x0                   	// #0
    3a84:	9ac10807 	udiv	x7, x0, x1
    3a88:	11000474 	add	w20, w3, #0x1
    3a8c:	9b0180e6 	msub	x6, x7, x1, x0
    3a90:	12001cc4 	and	w4, w6, #0xff
    3a94:	f10024df 	cmp	x6, #0x9
    3a98:	1100c085 	add	w5, w4, #0x30
    3a9c:	11015c84 	add	w4, w4, #0x57
    3aa0:	12001ca5 	and	w5, w5, #0xff
    3aa4:	12001c84 	and	w4, w4, #0xff
    3aa8:	1a858084 	csel	w4, w4, w5, hi  // hi = pmore
    3aac:	38356864 	strb	w4, [x3, x21]
    3ab0:	eb00003f 	cmp	x1, x0
    3ab4:	91000463 	add	x3, x3, #0x1
    3ab8:	540001c9 	b.ls	3af0 <unsigned_num_print+0x94>  // b.plast
    3abc:	7100027f 	cmp	w19, #0x0
    3ac0:	540002cc 	b.gt	3b18 <unsigned_num_print+0xbc>
    3ac4:	52800013 	mov	w19, #0x0                   	// #0
    3ac8:	93407e96 	sxtw	x22, w20
    3acc:	d10006d6 	sub	x22, x22, #0x1
    3ad0:	310006df 	cmn	w22, #0x1
    3ad4:	54000261 	b.ne	3b20 <unsigned_num_print+0xc4>  // b.any
    3ad8:	0b140260 	add	w0, w19, w20
    3adc:	a94153f3 	ldp	x19, x20, [sp, #16]
    3ae0:	a9425bf5 	ldp	x21, x22, [sp, #32]
    3ae4:	f9401bf7 	ldr	x23, [sp, #48]
    3ae8:	a8c67bfd 	ldp	x29, x30, [sp], #96
    3aec:	d65f03c0 	ret
    3af0:	aa0703e0 	mov	x0, x7
    3af4:	17ffffe4 	b	3a84 <unsigned_num_print+0x28>
    3af8:	510006d6 	sub	w22, w22, #0x1
    3afc:	2a1703e0 	mov	w0, w23
    3b00:	94000120 	bl	3f80 <putchar>
    3b04:	6b1402df 	cmp	w22, w20
    3b08:	54ffff8c 	b.gt	3af8 <unsigned_num_print+0x9c>
    3b0c:	6b140260 	subs	w0, w19, w20
    3b10:	1a9fa013 	csel	w19, w0, wzr, ge  // ge = tcont
    3b14:	17ffffed 	b	3ac8 <unsigned_num_print+0x6c>
    3b18:	2a1303f6 	mov	w22, w19
    3b1c:	17fffffa 	b	3b04 <unsigned_num_print+0xa8>
    3b20:	38766aa0 	ldrb	w0, [x21, x22]
    3b24:	94000117 	bl	3f80 <putchar>
    3b28:	17ffffe9 	b	3acc <unsigned_num_print+0x70>

0000000000003b2c <vprintf>:
    3b2c:	a9b97bfd 	stp	x29, x30, [sp, #-112]!
    3b30:	910003fd 	mov	x29, sp
    3b34:	a90153f3 	stp	x19, x20, [sp, #16]
    3b38:	b9401834 	ldr	w20, [x1, #24]
    3b3c:	a90363f7 	stp	x23, x24, [sp, #48]
    3b40:	a9405c33 	ldp	x19, x23, [x1]
    3b44:	a9025bf5 	stp	x21, x22, [sp, #32]
    3b48:	aa0003f6 	mov	x22, x0
    3b4c:	a90573fb 	stp	x27, x28, [sp, #80]
    3b50:	d000001b 	adrp	x27, 5000 <__TEXT_END__>
    3b54:	913ff37b 	add	x27, x27, #0xffc
    3b58:	52800015 	mov	w21, #0x0                   	// #0
    3b5c:	a9046bf9 	stp	x25, x26, [sp, #64]
    3b60:	5280001a 	mov	w26, #0x0                   	// #0
    3b64:	394002c0 	ldrb	w0, [x22]
    3b68:	35000120 	cbnz	w0, 3b8c <vprintf+0x60>
    3b6c:	2a1503e0 	mov	w0, w21
    3b70:	a94153f3 	ldp	x19, x20, [sp, #16]
    3b74:	a9425bf5 	ldp	x21, x22, [sp, #32]
    3b78:	a94363f7 	ldp	x23, x24, [sp, #48]
    3b7c:	a9446bf9 	ldp	x25, x26, [sp, #64]
    3b80:	a94573fb 	ldp	x27, x28, [sp, #80]
    3b84:	a8c77bfd 	ldp	x29, x30, [sp], #112
    3b88:	d65f03c0 	ret
    3b8c:	910006d6 	add	x22, x22, #0x1
    3b90:	7100941f 	cmp	w0, #0x25
    3b94:	54001c21 	b.ne	3f18 <vprintf+0x3ec>  // b.any
    3b98:	52800018 	mov	w24, #0x0                   	// #0
    3b9c:	52800000 	mov	w0, #0x0                   	// #0
    3ba0:	14000002 	b	3ba8 <vprintf+0x7c>
    3ba4:	5280061a 	mov	w26, #0x30                  	// #48
    3ba8:	394002c1 	ldrb	w1, [x22]
    3bac:	7100c03f 	cmp	w1, #0x30
    3bb0:	540019e0 	b.eq	3eec <vprintf+0x3c0>  // b.none
    3bb4:	51019021 	sub	w1, w1, #0x64
    3bb8:	12001c22 	and	w2, w1, #0xff
    3bbc:	7100585f 	cmp	w2, #0x16
    3bc0:	54001b28 	b.hi	3f24 <vprintf+0x3f8>  // b.pmore
    3bc4:	7100583f 	cmp	w1, #0x16
    3bc8:	54001ae8 	b.hi	3f24 <vprintf+0x3f8>  // b.pmore
    3bcc:	78615b61 	ldrh	w1, [x27, w1, uxtw #1]
    3bd0:	10000062 	adr	x2, 3bdc <vprintf+0xb0>
    3bd4:	8b21a841 	add	x1, x2, w1, sxth #2
    3bd8:	d61f0020 	br	x1
    3bdc:	7100041f 	cmp	w0, #0x1
    3be0:	5400022d 	b.le	3c24 <vprintf+0xf8>
    3be4:	37f802f4 	tbnz	w20, #31, 3c40 <vprintf+0x114>
    3be8:	91003e60 	add	x0, x19, #0xf
    3bec:	2a1403e1 	mov	w1, w20
    3bf0:	927df000 	and	x0, x0, #0xfffffffffffffff8
    3bf4:	f9400279 	ldr	x25, [x19]
    3bf8:	2a0103f4 	mov	w20, w1
    3bfc:	aa0003f3 	mov	x19, x0
    3c00:	b6f80459 	tbz	x25, #63, 3c88 <vprintf+0x15c>
    3c04:	528005a0 	mov	w0, #0x2d                  	// #45
    3c08:	940000de 	bl	3f80 <putchar>
    3c0c:	cb1903e0 	neg	x0, x25
    3c10:	51000718 	sub	w24, w24, #0x1
    3c14:	2a1803e3 	mov	w3, w24
    3c18:	2a1a03e2 	mov	w2, w26
    3c1c:	52800141 	mov	w1, #0xa                   	// #10
    3c20:	1400006e 	b	3dd8 <vprintf+0x2ac>
    3c24:	54fffe00 	b.eq	3be4 <vprintf+0xb8>  // b.none
    3c28:	37f801f4 	tbnz	w20, #31, 3c64 <vprintf+0x138>
    3c2c:	91002e60 	add	x0, x19, #0xb
    3c30:	2a1403e1 	mov	w1, w20
    3c34:	927df000 	and	x0, x0, #0xfffffffffffffff8
    3c38:	b9800279 	ldrsw	x25, [x19]
    3c3c:	17ffffef 	b	3bf8 <vprintf+0xcc>
    3c40:	11002281 	add	w1, w20, #0x8
    3c44:	7100003f 	cmp	w1, #0x0
    3c48:	5400008d 	b.le	3c58 <vprintf+0x12c>
    3c4c:	91003e60 	add	x0, x19, #0xf
    3c50:	927df000 	and	x0, x0, #0xfffffffffffffff8
    3c54:	17ffffe8 	b	3bf4 <vprintf+0xc8>
    3c58:	aa1303e0 	mov	x0, x19
    3c5c:	8b34c2f3 	add	x19, x23, w20, sxtw
    3c60:	17ffffe5 	b	3bf4 <vprintf+0xc8>
    3c64:	11002281 	add	w1, w20, #0x8
    3c68:	7100003f 	cmp	w1, #0x0
    3c6c:	5400008d 	b.le	3c7c <vprintf+0x150>
    3c70:	91002e60 	add	x0, x19, #0xb
    3c74:	927df000 	and	x0, x0, #0xfffffffffffffff8
    3c78:	17fffff0 	b	3c38 <vprintf+0x10c>
    3c7c:	aa1303e0 	mov	x0, x19
    3c80:	8b34c2f3 	add	x19, x23, w20, sxtw
    3c84:	17ffffed 	b	3c38 <vprintf+0x10c>
    3c88:	aa1903e0 	mov	x0, x25
    3c8c:	17ffffe2 	b	3c14 <vprintf+0xe8>
    3c90:	37f80154 	tbnz	w20, #31, 3cb8 <vprintf+0x18c>
    3c94:	91003e78 	add	x24, x19, #0xf
    3c98:	2a1403f9 	mov	w25, w20
    3c9c:	927df318 	and	x24, x24, #0xfffffffffffffff8
    3ca0:	f9400260 	ldr	x0, [x19]
    3ca4:	b5000300 	cbnz	x0, 3d04 <vprintf+0x1d8>
    3ca8:	d0000000 	adrp	x0, 5000 <__TEXT_END__>
    3cac:	913f9800 	add	x0, x0, #0xfe6
    3cb0:	52800381 	mov	w1, #0x1c                  	// #28
    3cb4:	97ffff3c 	bl	39a4 <__assert>
    3cb8:	11002299 	add	w25, w20, #0x8
    3cbc:	7100033f 	cmp	w25, #0x0
    3cc0:	5400008d 	b.le	3cd0 <vprintf+0x1a4>
    3cc4:	91003e78 	add	x24, x19, #0xf
    3cc8:	927df318 	and	x24, x24, #0xfffffffffffffff8
    3ccc:	17fffff5 	b	3ca0 <vprintf+0x174>
    3cd0:	aa1303f8 	mov	x24, x19
    3cd4:	8b34c2f3 	add	x19, x23, w20, sxtw
    3cd8:	17fffff2 	b	3ca0 <vprintf+0x174>
    3cdc:	940000a9 	bl	3f80 <putchar>
    3ce0:	2a1303e1 	mov	w1, w19
    3ce4:	91000673 	add	x19, x19, #0x1
    3ce8:	38736a80 	ldrb	w0, [x20, x19]
    3cec:	35ffff80 	cbnz	w0, 3cdc <vprintf+0x1b0>
    3cf0:	0b0102b5 	add	w21, w21, w1
    3cf4:	2a1903f4 	mov	w20, w25
    3cf8:	aa1803f3 	mov	x19, x24
    3cfc:	910006d6 	add	x22, x22, #0x1
    3d00:	17ffff99 	b	3b64 <vprintf+0x38>
    3d04:	d1000414 	sub	x20, x0, #0x1
    3d08:	d2800013 	mov	x19, #0x0                   	// #0
    3d0c:	17fffff5 	b	3ce0 <vprintf+0x1b4>
    3d10:	37f801f4 	tbnz	w20, #31, 3d4c <vprintf+0x220>
    3d14:	91003e79 	add	x25, x19, #0xf
    3d18:	2a1403fc 	mov	w28, w20
    3d1c:	927df339 	and	x25, x25, #0xfffffffffffffff8
    3d20:	f9400265 	ldr	x5, [x19]
    3d24:	b50003a5 	cbnz	x5, 3d98 <vprintf+0x26c>
    3d28:	2a1803e3 	mov	w3, w24
    3d2c:	2a1a03e2 	mov	w2, w26
    3d30:	aa0503e0 	mov	x0, x5
    3d34:	52800201 	mov	w1, #0x10                  	// #16
    3d38:	2a1c03f4 	mov	w20, w28
    3d3c:	97ffff48 	bl	3a5c <unsigned_num_print>
    3d40:	aa1903f3 	mov	x19, x25
    3d44:	0b0002b5 	add	w21, w21, w0
    3d48:	17ffffed 	b	3cfc <vprintf+0x1d0>
    3d4c:	1100229c 	add	w28, w20, #0x8
    3d50:	7100039f 	cmp	w28, #0x0
    3d54:	5400008d 	b.le	3d64 <vprintf+0x238>
    3d58:	91003e79 	add	x25, x19, #0xf
    3d5c:	927df339 	and	x25, x25, #0xfffffffffffffff8
    3d60:	17fffff0 	b	3d20 <vprintf+0x1f4>
    3d64:	aa1303f9 	mov	x25, x19
    3d68:	8b34c2f3 	add	x19, x23, w20, sxtw
    3d6c:	17ffffed 	b	3d20 <vprintf+0x1f4>
    3d70:	f90037e5 	str	x5, [sp, #104]
    3d74:	94000083 	bl	3f80 <putchar>
    3d78:	f94037e5 	ldr	x5, [sp, #104]
    3d7c:	2a1303e1 	mov	w1, w19
    3d80:	91000673 	add	x19, x19, #0x1
    3d84:	38746a60 	ldrb	w0, [x19, x20]
    3d88:	35ffff40 	cbnz	w0, 3d70 <vprintf+0x244>
    3d8c:	0b0102b5 	add	w21, w21, w1
    3d90:	51000b18 	sub	w24, w24, #0x2
    3d94:	17ffffe5 	b	3d28 <vprintf+0x1fc>
    3d98:	d0000014 	adrp	x20, 5000 <__TEXT_END__>
    3d9c:	913fde94 	add	x20, x20, #0xff7
    3da0:	d2800013 	mov	x19, #0x0                   	// #0
    3da4:	17fffff6 	b	3d7c <vprintf+0x250>
    3da8:	7100041f 	cmp	w0, #0x1
    3dac:	540001cd 	b.le	3de4 <vprintf+0x2b8>
    3db0:	37f80294 	tbnz	w20, #31, 3e00 <vprintf+0x2d4>
    3db4:	91003e61 	add	x1, x19, #0xf
    3db8:	2a1403e2 	mov	w2, w20
    3dbc:	927df021 	and	x1, x1, #0xfffffffffffffff8
    3dc0:	f9400260 	ldr	x0, [x19]
    3dc4:	2a0203f4 	mov	w20, w2
    3dc8:	2a1803e3 	mov	w3, w24
    3dcc:	2a1a03e2 	mov	w2, w26
    3dd0:	aa0103f3 	mov	x19, x1
    3dd4:	52800201 	mov	w1, #0x10                  	// #16
    3dd8:	97ffff21 	bl	3a5c <unsigned_num_print>
    3ddc:	0b0002b5 	add	w21, w21, w0
    3de0:	17ffffc7 	b	3cfc <vprintf+0x1d0>
    3de4:	54fffe60 	b.eq	3db0 <vprintf+0x284>  // b.none
    3de8:	37f801f4 	tbnz	w20, #31, 3e24 <vprintf+0x2f8>
    3dec:	91002e61 	add	x1, x19, #0xb
    3df0:	2a1403e2 	mov	w2, w20
    3df4:	927df021 	and	x1, x1, #0xfffffffffffffff8
    3df8:	b9400260 	ldr	w0, [x19]
    3dfc:	17fffff2 	b	3dc4 <vprintf+0x298>
    3e00:	11002282 	add	w2, w20, #0x8
    3e04:	7100005f 	cmp	w2, #0x0
    3e08:	5400008d 	b.le	3e18 <vprintf+0x2ec>
    3e0c:	91003e61 	add	x1, x19, #0xf
    3e10:	927df021 	and	x1, x1, #0xfffffffffffffff8
    3e14:	17ffffeb 	b	3dc0 <vprintf+0x294>
    3e18:	aa1303e1 	mov	x1, x19
    3e1c:	8b34c2f3 	add	x19, x23, w20, sxtw
    3e20:	17ffffe8 	b	3dc0 <vprintf+0x294>
    3e24:	11002282 	add	w2, w20, #0x8
    3e28:	7100005f 	cmp	w2, #0x0
    3e2c:	5400008d 	b.le	3e3c <vprintf+0x310>
    3e30:	91002e61 	add	x1, x19, #0xb
    3e34:	927df021 	and	x1, x1, #0xfffffffffffffff8
    3e38:	17fffff0 	b	3df8 <vprintf+0x2cc>
    3e3c:	aa1303e1 	mov	x1, x19
    3e40:	8b34c2f3 	add	x19, x23, w20, sxtw
    3e44:	17ffffed 	b	3df8 <vprintf+0x2cc>
    3e48:	910006d6 	add	x22, x22, #0x1
    3e4c:	52800040 	mov	w0, #0x2                   	// #2
    3e50:	17ffff56 	b	3ba8 <vprintf+0x7c>
    3e54:	11000400 	add	w0, w0, #0x1
    3e58:	910006d6 	add	x22, x22, #0x1
    3e5c:	17ffff53 	b	3ba8 <vprintf+0x7c>
    3e60:	7100041f 	cmp	w0, #0x1
    3e64:	5400012d 	b.le	3e88 <vprintf+0x35c>
    3e68:	37f801f4 	tbnz	w20, #31, 3ea4 <vprintf+0x378>
    3e6c:	91003e61 	add	x1, x19, #0xf
    3e70:	2a1403e2 	mov	w2, w20
    3e74:	927df021 	and	x1, x1, #0xfffffffffffffff8
    3e78:	f9400260 	ldr	x0, [x19]
    3e7c:	2a0203f4 	mov	w20, w2
    3e80:	aa0103f3 	mov	x19, x1
    3e84:	17ffff64 	b	3c14 <vprintf+0xe8>
    3e88:	54ffff00 	b.eq	3e68 <vprintf+0x33c>  // b.none
    3e8c:	37f801f4 	tbnz	w20, #31, 3ec8 <vprintf+0x39c>
    3e90:	91002e61 	add	x1, x19, #0xb
    3e94:	2a1403e2 	mov	w2, w20
    3e98:	927df021 	and	x1, x1, #0xfffffffffffffff8
    3e9c:	b9400260 	ldr	w0, [x19]
    3ea0:	17fffff7 	b	3e7c <vprintf+0x350>
    3ea4:	11002282 	add	w2, w20, #0x8
    3ea8:	7100005f 	cmp	w2, #0x0
    3eac:	5400008d 	b.le	3ebc <vprintf+0x390>
    3eb0:	91003e61 	add	x1, x19, #0xf
    3eb4:	927df021 	and	x1, x1, #0xfffffffffffffff8
    3eb8:	17fffff0 	b	3e78 <vprintf+0x34c>
    3ebc:	aa1303e1 	mov	x1, x19
    3ec0:	8b34c2f3 	add	x19, x23, w20, sxtw
    3ec4:	17ffffed 	b	3e78 <vprintf+0x34c>
    3ec8:	11002282 	add	w2, w20, #0x8
    3ecc:	7100005f 	cmp	w2, #0x0
    3ed0:	5400008d 	b.le	3ee0 <vprintf+0x3b4>
    3ed4:	91002e61 	add	x1, x19, #0xb
    3ed8:	927df021 	and	x1, x1, #0xfffffffffffffff8
    3edc:	17fffff0 	b	3e9c <vprintf+0x370>
    3ee0:	aa1303e1 	mov	x1, x19
    3ee4:	8b34c2f3 	add	x19, x23, w20, sxtw
    3ee8:	17ffffed 	b	3e9c <vprintf+0x370>
    3eec:	910006d6 	add	x22, x22, #0x1
    3ef0:	52800018 	mov	w24, #0x0                   	// #0
    3ef4:	394002c1 	ldrb	w1, [x22]
    3ef8:	5100c021 	sub	w1, w1, #0x30
    3efc:	12001c22 	and	w2, w1, #0xff
    3f00:	7100245f 	cmp	w2, #0x9
    3f04:	54ffe508 	b.hi	3ba4 <vprintf+0x78>  // b.pmore
    3f08:	52800142 	mov	w2, #0xa                   	// #10
    3f0c:	910006d6 	add	x22, x22, #0x1
    3f10:	1b020718 	madd	w24, w24, w2, w1
    3f14:	17fffff8 	b	3ef4 <vprintf+0x3c8>
    3f18:	110006b5 	add	w21, w21, #0x1
    3f1c:	94000019 	bl	3f80 <putchar>
    3f20:	17ffff11 	b	3b64 <vprintf+0x38>
    3f24:	12800015 	mov	w21, #0xffffffff            	// #-1
    3f28:	17ffff11 	b	3b6c <vprintf+0x40>

0000000000003f2c <printf>:
    3f2c:	a9b77bfd 	stp	x29, x30, [sp, #-144]!
    3f30:	910003fd 	mov	x29, sp
    3f34:	a9058be1 	stp	x1, x2, [sp, #88]
    3f38:	910243e1 	add	x1, sp, #0x90
    3f3c:	a90307e1 	stp	x1, x1, [sp, #48]
    3f40:	910143e1 	add	x1, sp, #0x50
    3f44:	f90023e1 	str	x1, [sp, #64]
    3f48:	128006e1 	mov	w1, #0xffffffc8            	// #-56
    3f4c:	b9004be1 	str	w1, [sp, #72]
    3f50:	910043e1 	add	x1, sp, #0x10
    3f54:	b9004fff 	str	wzr, [sp, #76]
    3f58:	a90693e3 	stp	x3, x4, [sp, #104]
    3f5c:	a9430fe2 	ldp	x2, x3, [sp, #48]
    3f60:	a9010fe2 	stp	x2, x3, [sp, #16]
    3f64:	a9440fe2 	ldp	x2, x3, [sp, #64]
    3f68:	a9020fe2 	stp	x2, x3, [sp, #32]
    3f6c:	a9079be5 	stp	x5, x6, [sp, #120]
    3f70:	f90047e7 	str	x7, [sp, #136]
    3f74:	97fffeee 	bl	3b2c <vprintf>
    3f78:	a8c97bfd 	ldp	x29, x30, [sp], #144
    3f7c:	d65f03c0 	ret

0000000000003f80 <putchar>:
    3f80:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
    3f84:	910003fd 	mov	x29, sp
    3f88:	f9000bf3 	str	x19, [sp, #16]
    3f8c:	2a0003f3 	mov	w19, w0
    3f90:	12001c00 	and	w0, w0, #0xff
    3f94:	97fff79d 	bl	1e08 <console_putc>
    3f98:	7100001f 	cmp	w0, #0x0
    3f9c:	5a9fa260 	csinv	w0, w19, wzr, ge  // ge = tcont
    3fa0:	f9400bf3 	ldr	x19, [sp, #16]
    3fa4:	a8c27bfd 	ldp	x29, x30, [sp], #32
    3fa8:	d65f03c0 	ret
	...

0000000000004000 <SynchronousExceptionSP0>:
    4000:	d2800000 	mov	x0, #0x0                   	// #0
    4004:	97fffdd8 	bl	3764 <plat_report_exception>
    4008:	97fffdda 	bl	3770 <plat_panic_handler>
    400c:	d503201f 	nop
	...

0000000000004080 <IrqSP0>:
    4080:	d2800020 	mov	x0, #0x1                   	// #1
    4084:	97fffdb8 	bl	3764 <plat_report_exception>
    4088:	97fffdba 	bl	3770 <plat_panic_handler>
    408c:	d503201f 	nop
	...

0000000000004100 <FiqSP0>:
    4100:	d2800040 	mov	x0, #0x2                   	// #2
    4104:	97fffd98 	bl	3764 <plat_report_exception>
    4108:	97fffd9a 	bl	3770 <plat_panic_handler>
    410c:	d503201f 	nop
	...

0000000000004180 <SErrorSP0>:
    4180:	d2800060 	mov	x0, #0x3                   	// #3
    4184:	97fffd78 	bl	3764 <plat_report_exception>
    4188:	97fffd7a 	bl	3770 <plat_panic_handler>
    418c:	d503201f 	nop
	...

0000000000004200 <SynchronousExceptionSPx>:
    4200:	d2800080 	mov	x0, #0x4                   	// #4
    4204:	97fffd58 	bl	3764 <plat_report_exception>
    4208:	97fffd5a 	bl	3770 <plat_panic_handler>
    420c:	d503201f 	nop
	...

0000000000004280 <IrqSPx>:
    4280:	d28000a0 	mov	x0, #0x5                   	// #5
    4284:	97fffd38 	bl	3764 <plat_report_exception>
    4288:	97fffd3a 	bl	3770 <plat_panic_handler>
    428c:	d503201f 	nop
	...

0000000000004300 <FiqSPx>:
    4300:	d28000c0 	mov	x0, #0x6                   	// #6
    4304:	97fffd18 	bl	3764 <plat_report_exception>
    4308:	97fffd1a 	bl	3770 <plat_panic_handler>
    430c:	d503201f 	nop
	...

0000000000004380 <SErrorSPx>:
    4380:	d28000e0 	mov	x0, #0x7                   	// #7
    4384:	97fffcf8 	bl	3764 <plat_report_exception>
    4388:	97fffcfa 	bl	3770 <plat_panic_handler>
    438c:	d503201f 	nop
	...

0000000000004400 <SynchronousExceptionA64>:
    4400:	d50344ff 	msr	daifclr, #0x4
    4404:	f9007bfe 	str	x30, [sp, #240]
    4408:	d53e521e 	mrs	x30, esr_el3
    440c:	d35a7fde 	ubfx	x30, x30, #26, #6
    4410:	f1005fdf 	cmp	x30, #0x17
    4414:	54ff6aa1 	b.ne	3168 <unexpected_sync_exception>  // b.any
    4418:	17fffb38 	b	30f8 <smc_handler64>
	...

0000000000004480 <IrqA64>:
    4480:	d2800120 	mov	x0, #0x9                   	// #9
    4484:	97fffcb8 	bl	3764 <plat_report_exception>
    4488:	97fffcba 	bl	3770 <plat_panic_handler>
    448c:	d503201f 	nop
	...

0000000000004500 <FiqA64>:
    4500:	d2800140 	mov	x0, #0xa                   	// #10
    4504:	97fffc98 	bl	3764 <plat_report_exception>
    4508:	97fffc9a 	bl	3770 <plat_panic_handler>
    450c:	d503201f 	nop
	...

0000000000004580 <SErrorA64>:
    4580:	d2800160 	mov	x0, #0xb                   	// #11
    4584:	97fffc78 	bl	3764 <plat_report_exception>
    4588:	97fffc7a 	bl	3770 <plat_panic_handler>
    458c:	d503201f 	nop
	...

0000000000004600 <SynchronousExceptionA32>:
    4600:	d2800180 	mov	x0, #0xc                   	// #12
    4604:	97fffc58 	bl	3764 <plat_report_exception>
    4608:	97fffc5a 	bl	3770 <plat_panic_handler>
    460c:	d503201f 	nop
	...

0000000000004680 <IrqA32>:
    4680:	d28001a0 	mov	x0, #0xd                   	// #13
    4684:	97fffc38 	bl	3764 <plat_report_exception>
    4688:	97fffc3a 	bl	3770 <plat_panic_handler>
    468c:	d503201f 	nop
	...

0000000000004700 <FiqA32>:
    4700:	d28001c0 	mov	x0, #0xe                   	// #14
    4704:	97fffc18 	bl	3764 <plat_report_exception>
    4708:	97fffc1a 	bl	3770 <plat_panic_handler>
    470c:	d503201f 	nop
	...

0000000000004780 <SErrorA32>:
    4780:	d28001e0 	mov	x0, #0xf                   	// #15
    4784:	97fffbf8 	bl	3764 <plat_report_exception>
    4788:	97fffbfa 	bl	3770 <plat_panic_handler>
    478c:	d503201f 	nop
	...
